{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\containers\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"../styles/Sidebar.module.css\";\nimport { useSpring, animated } from \"react-spring\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst show = {\n  width: 300,\n  from: {\n    width: 0\n  }\n};\nconst hide = {\n  width: 0,\n  from: {\n    width: 300\n  }\n};\nconst menuHide = {\n  opacity: 1,\n  from: {\n    opacity: 0\n  }\n};\nconst menuShow = {\n  opactiy: 0,\n  from: {\n    opacity: 1\n  }\n};\n\nfunction Sidebar(props) {\n  _s();\n\n  console.log(props.toggle);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  const springProps = useSpring(props.toggle ? hide : show);\n  const menuProps = useSpring(props.toggle ? menuShow : menuHide);\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: springProps,\n    className: styles.sidebar,\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      style: menuProps,\n      className: styles.menu,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        component: \"nav\",\n        \"aria-label\": \"main mailbox folders\",\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedIndex === 0,\n          onClick: event => handleListItemClick(event, 0),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedIndex === 1,\n          onClick: event => handleListItemClick(event, 1),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(DraftsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Drafts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedIndex === 2,\n          onClick: event => handleListItemClick(event, 2),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedIndex === 3,\n          onClick: event => handleListItemClick(event, 3),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(InboxIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Inbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this); //   return <div className={styles.sidebar}></div>;\n}\n\n_s(Sidebar, \"EsPTdzmfXiD8dZRkCzLsyYgBr/E=\", false, function () {\n  return [useSpring, useSpring];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/containers/Sidebar.js"],"names":["React","styles","useSpring","animated","List","ListItem","ListItemIcon","ListItemText","InboxIcon","DraftsIcon","show","width","from","hide","menuHide","opacity","menuShow","opactiy","Sidebar","props","console","log","toggle","selectedIndex","setSelectedIndex","useState","handleListItemClick","event","index","springProps","menuProps","sidebar","menu"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"../styles/Sidebar.module.css\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\n\r\nconst show = { width: 300, from: { width: 0 } };\r\nconst hide = { width: 0, from: { width: 300 } };\r\n\r\nconst menuHide = { opacity: 1, from: { opacity: 0 } };\r\nconst menuShow = { opactiy: 0, from: { opacity: 1 } };\r\n\r\nfunction Sidebar(props) {\r\n  console.log(props.toggle);\r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n  };\r\n  const springProps = useSpring(props.toggle ? hide : show);\r\n  const menuProps = useSpring(props.toggle ? menuShow : menuHide);\r\n\r\n  return (\r\n    <animated.div style={springProps} className={styles.sidebar}>\r\n      <animated.div style={menuProps} className={styles.menu}>\r\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n          <ListItem\r\n            button\r\n            selected={selectedIndex === 0}\r\n            onClick={(event) => handleListItemClick(event, 0)}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Inbox\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            selected={selectedIndex === 1}\r\n            onClick={(event) => handleListItemClick(event, 1)}\r\n          >\r\n            <ListItemIcon>\r\n              <DraftsIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Drafts\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            selected={selectedIndex === 2}\r\n            onClick={(event) => handleListItemClick(event, 2)}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Inbox\" />\r\n          </ListItem>\r\n          <ListItem\r\n            button\r\n            selected={selectedIndex === 3}\r\n            onClick={(event) => handleListItemClick(event, 3)}\r\n          >\r\n            <ListItemIcon>\r\n              <InboxIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Inbox\" />\r\n          </ListItem>\r\n        </List>\r\n      </animated.div>\r\n    </animated.div>\r\n  );\r\n  //   return <div className={styles.sidebar}></div>;\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}