{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const quizSlice = createSlice({\n  name: \"quiz\",\n  initialState: {\n    quizzes: [],\n    quizDetail: {},\n    choiceList: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    getQuizzesStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getQuizzesSuccess: (state, action) => {\n      state.quizzes = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getQuizzesFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    getQuizDetailStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getQuizDetailSuccess: (state, action) => {\n      state.quizDetail = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getQuizDetailFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    createQuizStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    createQuizSuccess: state => {\n      state.loading = false;\n      state.error = null;\n    },\n    createQuizFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    getChoiceListStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getChoiceListSuccess: (state, action) => {\n      state.loading = false;\n      state.choiceList = action.payload;\n    },\n    getChoiceListFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    addQuestionStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    addQuestionSuccess: state => {\n      state.loading = false;\n      state.error = null;\n    },\n    addQuestionFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getQuizzesFail,\n  getQuizzesStart,\n  getQuizzesSuccess,\n  getQuizDetailStart,\n  getQuizDetailFail,\n  getQuizDetailSuccess,\n  createQuizFail,\n  createQuizStart,\n  createQuizSuccess,\n  getChoiceListFail,\n  getChoiceListStart,\n  getChoiceListSuccess,\n  addQuestionFail,\n  addQuestionStart,\n  addQuestionSuccess\n} = quizSlice.actions;\nexport const getQuizzes = token => {\n  return dispatch => {\n    dispatch(getQuizzesStart());\n    console.log(\"getQuizzes======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(process.env.REACT_APP_AXIOS_URL + `/api/quizzes`).then(res => {\n      dispatch(getQuizzesSuccess(res.data));\n    }).catch(err => {\n      dispatch(getQuizzesFail(err.message));\n    });\n  };\n};\nexport const getQuizDetail = (token, id) => {\n  return dispatch => {\n    dispatch(getQuizDetailStart());\n    console.log(\"getQuizDetail======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`${process.env.REACT_APP_AXIOS_URL}/api/quizzes/${id}`).then(res => {\n      dispatch(getQuizDetailSuccess(res.data));\n    }).catch(err => {\n      dispatch(getQuizDetailFail(err.message));\n    });\n  };\n};\nexport const createQuiz = (token, formData) => {\n  return dispatch => {\n    dispatch(createQuizStart());\n    console.log(\"getQuizDetail======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.post(process.env.REACT_APP_AXIOS_URL + \"/api/quizzes/\", formData).then(res => {\n      dispatch(createQuizSuccess(res.data));\n      dispatch(getQuizzes(token));\n    }).catch(err => {\n      dispatch(createQuizFail(err.message));\n    });\n  };\n};\nexport const getChoiceList = token => {\n  return dispatch => {\n    dispatch(getChoiceListStart());\n    console.log(\"getQuizDetail======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`${process.env.REACT_APP_AXIOS_URL}/api/choices`).then(res => {\n      dispatch(getChoiceListSuccess(res.data));\n    }).catch(err => {\n      dispatch(getChoiceListFail(err.message));\n    });\n  };\n};\nexport const addChoice = (token, formData, id) => {\n  return dispatch => {\n    dispatch(addQuestionStart());\n    console.log(\"getQuizDetail======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.post(`${process.env.REACT_APP_AXIOS_URL}/api/questions`, formData).then(res => {\n      dispatch(addQuestionSuccess(res.data));\n      dispatch(getQuizDetail(token, id));\n    }).catch(err => {\n      dispatch(addQuestionFail(err.message));\n    });\n  };\n};\nexport default quizSlice.reducer;","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/features/quizSlice.js"],"names":["createSlice","axios","quizSlice","name","initialState","quizzes","quizDetail","choiceList","loading","error","reducers","getQuizzesStart","state","getQuizzesSuccess","action","payload","getQuizzesFail","getQuizDetailStart","getQuizDetailSuccess","getQuizDetailFail","createQuizStart","createQuizSuccess","createQuizFail","getChoiceListStart","getChoiceListSuccess","getChoiceListFail","addQuestionStart","addQuestionSuccess","addQuestionFail","actions","getQuizzes","token","dispatch","console","log","defaults","headers","Authorization","get","process","env","REACT_APP_AXIOS_URL","then","res","data","catch","err","message","getQuizDetail","id","createQuiz","formData","post","getChoiceList","addChoice","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const quizSlice = createSlice({\r\n  name: \"quiz\",\r\n  initialState: {\r\n    quizzes: [],\r\n    quizDetail: {},\r\n    choiceList: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    getQuizzesStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getQuizzesSuccess: (state, action) => {\r\n      state.quizzes = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getQuizzesFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    getQuizDetailStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getQuizDetailSuccess: (state, action) => {\r\n      state.quizDetail = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getQuizDetailFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    createQuizStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    createQuizSuccess: (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    createQuizFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    getChoiceListStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getChoiceListSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.choiceList = action.payload;\r\n    },\r\n    getChoiceListFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    addQuestionStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    addQuestionSuccess: (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    addQuestionFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getQuizzesFail,\r\n  getQuizzesStart,\r\n  getQuizzesSuccess,\r\n  getQuizDetailStart,\r\n  getQuizDetailFail,\r\n  getQuizDetailSuccess,\r\n  createQuizFail,\r\n  createQuizStart,\r\n  createQuizSuccess,\r\n  getChoiceListFail,\r\n  getChoiceListStart,\r\n  getChoiceListSuccess,\r\n  addQuestionFail,\r\n  addQuestionStart,\r\n  addQuestionSuccess,\r\n} = quizSlice.actions;\r\n\r\nexport const getQuizzes = (token) => {\r\n  return (dispatch) => {\r\n    dispatch(getQuizzesStart());\r\n    console.log(\"getQuizzes======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(process.env.REACT_APP_AXIOS_URL + `/api/quizzes`)\r\n      .then((res) => {\r\n        dispatch(getQuizzesSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getQuizzesFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getQuizDetail = (token, id) => {\r\n  return (dispatch) => {\r\n    dispatch(getQuizDetailStart());\r\n    console.log(\"getQuizDetail======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_AXIOS_URL}/api/quizzes/${id}`)\r\n      .then((res) => {\r\n        dispatch(getQuizDetailSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getQuizDetailFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createQuiz = (token, formData) => {\r\n  return (dispatch) => {\r\n    dispatch(createQuizStart());\r\n    console.log(\"getQuizDetail======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .post(process.env.REACT_APP_AXIOS_URL + \"/api/quizzes/\", formData)\r\n      .then((res) => {\r\n        dispatch(createQuizSuccess(res.data));\r\n        dispatch(getQuizzes(token));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(createQuizFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getChoiceList = (token) => {\r\n  return (dispatch) => {\r\n    dispatch(getChoiceListStart());\r\n    console.log(\"getQuizDetail======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_AXIOS_URL}/api/choices`)\r\n      .then((res) => {\r\n        dispatch(getChoiceListSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getChoiceListFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const addChoice = (token, formData, id) => {\r\n  return (dispatch) => {\r\n    dispatch(addQuestionStart());\r\n    console.log(\"getQuizDetail======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_AXIOS_URL}/api/questions`, formData)\r\n      .then((res) => {\r\n        dispatch(addQuestionSuccess(res.data));\r\n        dispatch(getQuizDetail(token, id));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(addQuestionFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default quizSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}