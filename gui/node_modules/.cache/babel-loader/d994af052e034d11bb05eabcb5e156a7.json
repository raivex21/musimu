{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    username: null,\n    token: null,\n    first_name: null,\n    last_name: null,\n    userId: null,\n    is_teacher: false,\n    avatar: null,\n    error: null,\n    loading: false,\n    userList: null,\n    isAuth: false\n  },\n  reducers: {\n    authStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    authSuccess: (state, action) => {\n      state.username = action.payload.username;\n      state.token = action.payload.token;\n      state.last_name = action.payload.last_name;\n      state.first_name = action.payload.first_name;\n      state.userId = action.payload.userId;\n      state.is_teacher = action.payload.is_teacher;\n      state.avatar = action.payload.avatar;\n      state.isAuth = action.payload.token !== null;\n      state.error = null;\n      state.loading = false;\n    },\n    authFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    logout: state => {\n      localStorage.removeItem(\"user\");\n      state.username = null;\n      state.token = null;\n      state.first_name = null;\n      state.last_name = null;\n      state.userId = null;\n      state.isAuth = null;\n      state.avatar = null;\n      state.is_teacher = null;\n    },\n    getUserListSuccess: (state, action) => {\n      state.userList = action.payload;\n    }\n  }\n});\nexport const {\n  authStart,\n  authSuccess,\n  logout,\n  authFail,\n  getUserListSuccess\n} = authSlice.actions; //if need dispatch; put here\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(process.env.REACT_APP_AXIOS_URL + \"/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      const user = {\n        token: res.data.key,\n        username,\n        last_name: res.data.user_detail.last_name,\n        first_name: res.data.user_detail.first_name,\n        userId: res.data.user_detail.userId,\n        is_teacher: res.data.user_detail.is_teacher,\n        avatar: res.data.user_detail.avatar,\n        expirationDate: new Date(new Date().getTime() + 86400 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      console.log(res.data);\n      dispatch(authSuccess(res.data));\n      dispatch(checkAuthTimeout(86400));\n    }).catch(err => {\n      authFail(err.message);\n    });\n  };\n};\nexport const authSignup = (username, email, last_name, first_name, password1, password2, is_teacher) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(process.env.REACT_APP_AXIOS_URL + \"/rest_auth/registration/\", {\n      username: username,\n      email: email,\n      last_name: last_name,\n      first_name: first_name,\n      password1: password1,\n      password2: password2,\n      is_teacher: is_teacher\n    }).then(res => {\n      const user = {\n        token: res.data.key,\n        username,\n        last_name: res.data.user_detail.last_name,\n        first_name: res.data.user_detail.first_name,\n        userId: res.data.user_detail.userId,\n        is_teacher: res.data.user_detail.is_teacher,\n        avatar: res.data.user_detail.avatar,\n        expirationDate: new Date(new Date().getTime() + 86400 * 1000)\n      };\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      console.log(res.data);\n      dispatch(authSuccess(res.data));\n      dispatch(checkAuthTimeout(86400));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const checkAuthTimeout = expirationDate => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationDate * 1000);\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    console.log(\"AUTHCHECKSTATE => running\");\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    if (user === undefined || user === null) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(user.expirationDate);\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(user));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};\nexport const getUserList = token => {\n  return dispatch => {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(\"http://127.0.0.1:8000/users/all/\").then(res => {\n      console.log(res.data);\n      dispatch(getUserListSuccess(res.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport default authSlice.reducer;","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/features/authSlice.js"],"names":["createSlice","axios","authSlice","name","initialState","username","token","first_name","last_name","userId","is_teacher","avatar","error","loading","userList","isAuth","reducers","authStart","state","authSuccess","action","payload","authFail","logout","localStorage","removeItem","getUserListSuccess","actions","authLogin","password","dispatch","post","process","env","REACT_APP_AXIOS_URL","then","res","user","data","key","user_detail","expirationDate","Date","getTime","setItem","JSON","stringify","console","log","checkAuthTimeout","catch","err","message","authSignup","email","password1","password2","setTimeout","authCheckState","parse","getItem","undefined","getUserList","defaults","headers","Authorization","get","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    username: null,\r\n    token: null,\r\n    first_name: null,\r\n    last_name: null,\r\n    userId: null,\r\n    is_teacher: false,\r\n    avatar: null,\r\n    error: null,\r\n    loading: false,\r\n    userList: null,\r\n    isAuth: false,\r\n  },\r\n  reducers: {\r\n    authStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    authSuccess: (state, action) => {\r\n      state.username = action.payload.username;\r\n      state.token = action.payload.token;\r\n      state.last_name = action.payload.last_name;\r\n      state.first_name = action.payload.first_name;\r\n      state.userId = action.payload.userId;\r\n      state.is_teacher = action.payload.is_teacher;\r\n      state.avatar = action.payload.avatar;\r\n      state.isAuth = action.payload.token !== null;\r\n      state.error = null;\r\n      state.loading = false;\r\n    },\r\n    authFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    logout: (state) => {\r\n      localStorage.removeItem(\"user\");\r\n      state.username = null;\r\n      state.token = null;\r\n      state.first_name = null;\r\n      state.last_name = null;\r\n      state.userId = null;\r\n      state.isAuth = null;\r\n      state.avatar = null;\r\n      state.is_teacher = null;\r\n    },\r\n    getUserListSuccess: (state, action) => {\r\n      state.userList = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  authStart,\r\n  authSuccess,\r\n  logout,\r\n  authFail,\r\n  getUserListSuccess,\r\n} = authSlice.actions;\r\n\r\n//if need dispatch; put here\r\nexport const authLogin = (username, password) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(process.env.REACT_APP_AXIOS_URL + \"/rest-auth/login/\", {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        const user = {\r\n          token: res.data.key,\r\n          username,\r\n          last_name: res.data.user_detail.last_name,\r\n          first_name: res.data.user_detail.first_name,\r\n          userId: res.data.user_detail.userId,\r\n          is_teacher: res.data.user_detail.is_teacher,\r\n          avatar: res.data.user_detail.avatar,\r\n          expirationDate: new Date(new Date().getTime() + 86400 * 1000),\r\n        };\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        console.log(res.data);\r\n        dispatch(authSuccess(res.data));\r\n        dispatch(checkAuthTimeout(86400));\r\n      })\r\n      .catch((err) => {\r\n        authFail(err.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const authSignup = (\r\n  username,\r\n  email,\r\n  last_name,\r\n  first_name,\r\n  password1,\r\n  password2,\r\n  is_teacher\r\n) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    axios\r\n      .post(process.env.REACT_APP_AXIOS_URL + \"/rest_auth/registration/\", {\r\n        username: username,\r\n        email: email,\r\n        last_name: last_name,\r\n        first_name: first_name,\r\n        password1: password1,\r\n        password2: password2,\r\n        is_teacher: is_teacher,\r\n      })\r\n      .then((res) => {\r\n        const user = {\r\n          token: res.data.key,\r\n          username,\r\n          last_name: res.data.user_detail.last_name,\r\n          first_name: res.data.user_detail.first_name,\r\n          userId: res.data.user_detail.userId,\r\n          is_teacher: res.data.user_detail.is_teacher,\r\n          avatar: res.data.user_detail.avatar,\r\n          expirationDate: new Date(new Date().getTime() + 86400 * 1000),\r\n        };\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        console.log(res.data);\r\n        dispatch(authSuccess(res.data));\r\n        dispatch(checkAuthTimeout(86400));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(authFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationDate) => {\r\n  return (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationDate * 1000);\r\n  };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n  return (dispatch) => {\r\n    console.log(\"AUTHCHECKSTATE => running\");\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    if (user === undefined || user === null) {\r\n      dispatch(logout());\r\n    } else {\r\n      const expirationDate = new Date(user.expirationDate);\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout());\r\n      } else {\r\n        dispatch(authSuccess(user));\r\n        dispatch(\r\n          checkAuthTimeout(\r\n            (expirationDate.getTime() - new Date().getTime()) / 1000\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const getUserList = (token) => {\r\n  return (dispatch) => {\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/users/all/\")\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch(getUserListSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport default authSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}