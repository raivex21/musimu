{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Desktop\\\\THESIS\\\\musimu\\\\gui\\\\src\\\\simulator\\\\Board.js\";\nimport React, { Component } from \"react\";\nimport Row from \"./Row\";\nimport Timer from \"./Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ks1 = (cell, xValue, mx, my) => {\n      if (this.props.handle === 0) {\n        let currentSelected = xValue;\n        let row = this.state.row;\n        row[currentSelected][0].accidental = this.props.accidental;\n        this.setState({\n          row\n        });\n        this.ks2(cell, currentSelected, mx, my);\n      }\n    };\n\n    this.ks2 = (cell, currentSelected, mx, my, kind) => {\n      let type = 5;\n      let row = this.state.row;\n      console.log(row[currentSelected][0]);\n\n      if (this.props.handle === 0) {\n        if (kind === undefined) {\n          if (row[currentSelected][0].starting !== true) {\n            return;\n          } // --------------debuged--------------------\n          //all y in x ---- means -----  check column\n\n\n          if (row[currentSelected][0].accLocation[mx][my].my === false) {\n            row[currentSelected][0].accLocation[mx][my].my = true;\n            row[currentSelected][0].accLocation[mx][my].acc = row[currentSelected][0].accidental;\n            row[currentSelected][0].accLocation[mx][11].my = true;\n          } else {\n            let a = 0;\n            let current = [];\n\n            while (a < 9) {\n              if (row[currentSelected][0].accLocation[mx][a].my === true && my !== a) {\n                current.push(a);\n              }\n\n              a++;\n\n              if (a === 9) {\n                a = 0;\n                break;\n              }\n            }\n\n            let b = 0;\n            let currentNext = [];\n\n            if (mx !== 6) {\n              while (b < 9) {\n                if (row[currentSelected][0].accLocation[mx + 1][b].my === true) {\n                  currentNext.push(b);\n                }\n\n                b++;\n              }\n            }\n\n            if (mx === 6) {\n              row[currentSelected][0].accLocation[6][my].my = false;\n              console.log(\"a\");\n            }\n\n            if (current.length === 0 && currentNext.length === 0) {\n              row[currentSelected][0].accLocation[mx][my].my = false;\n              row[currentSelected][0].accLocation[mx][11].my = false;\n              console.log(\"b\");\n            }\n\n            if (current.length !== 0 && currentNext.length !== 0) {\n              row[currentSelected][0].accLocation[mx][my].my = false;\n              console.log(\"c\");\n            }\n\n            if (current.length !== 0 && currentNext.length === 0) {\n              row[currentSelected][0].accLocation[mx][my].my = false;\n              console.log(\"d\");\n            }\n          }\n        } //--------------------------------------------------Checking-----------------------------------------\n\n\n        let a = [];\n\n        for (let x = 0; x <= 6; x++) {\n          let y = 0;\n\n          while (y < 10) {\n            if (row[currentSelected][0].accLocation[x][y].my === true) {\n              a.push({\n                acc: row[currentSelected][0].accLocation[x][y].acc,\n                x: x,\n                y: y\n              });\n            }\n\n            y++;\n          }\n        }\n\n        let xDup = false;\n\n        for (let c = 0; c < a.length; c++) {\n          let xCount = [];\n          let i = 0;\n\n          while (i < a.length) {\n            if (a[i].x === c) {\n              xCount.push(c);\n            }\n\n            i++;\n          }\n\n          if (xCount.length === 0) {\n            break;\n          }\n\n          if (xCount.length > 1) {\n            xDup = true;\n            let error = 8;\n            let measure = row[currentSelected + 1][8].measure;\n            let accidental = row[currentSelected][0].accidental;\n            this.props.consoleWarningKS(type, measure, error, accidental, my, mx);\n          }\n\n          if (xDup === false) {\n            let error = 8;\n            let measure = row[currentSelected + 1][8].measure;\n            let accidental = row[currentSelected][0].accidental;\n            this.props.removeWarning(type, measure, error, accidental, my, mx);\n          }\n        } // ------------------------for y ------------------------------------------------\n\n\n        let yDup = false;\n        let y = 0;\n\n        while (y < 10) {\n          let yCount = [];\n\n          for (let i = 0; i < a.length; i++) {\n            if (a[i].y === y) {\n              yCount.push(i);\n            }\n          }\n\n          if (yCount.length > 1) {\n            yDup = true; // break;\n          }\n\n          y++;\n        }\n\n        if (yDup === true) {\n          let error = 9;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.consoleWarningKS(type, measure, error, accidental, my, mx);\n        } else {\n          let error = 9;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.removeWarning(type, measure, error, accidental, my, mx);\n        }\n\n        this.setState({\n          row\n        }); // -------------------------------CHECKING IF THE ACCIDENTALS ARE THE SAME ----------------------------\n\n        let mixed = false;\n\n        for (let i = 0; i <= a.length - 1; i++) {\n          if (a[0].acc !== a[i].acc) {\n            mixed = true;\n            break;\n          }\n        }\n\n        if (mixed === true) {\n          console.log(\"different\");\n          let error = 10;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.consoleWarningKS(type, measure, error, accidental);\n        } else {\n          let error = 10;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.removeWarning(type, measure, error, accidental);\n        } // ----------------------What Key Signature------------------------\n\n\n        if (row[currentSelected][0].clef === null) {\n          console.log(currentSelected, \"it's null\");\n          let error = 11;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.consoleWarningKS(type, measure, error, accidental);\n          return;\n        }\n\n        let clef = row[currentSelected][0].clef;\n        this.keySignatureClefCompare(clef, a, currentSelected);\n      } else {\n        console.log(\"Use Select tool to edit Key Signature\");\n      }\n    };\n\n    this.keySignatureClefCompare = (clef, a, currentSelected) => {\n      console.log(a); // -----------set Letters --------------------------\n\n      let row = this.state.row;\n      let letter = [\"G\", \"F\", \"E\", \"D\", \"C\", \"B\", \"A\"];\n      let picker = 0;\n      let round = 0;\n\n      if (clef === \"G\") {\n        round = 0;\n        picker = 0;\n      }\n\n      if (clef === \"F\") {\n        round = 5;\n        picker = 5;\n      }\n\n      for (let x = 0; x < 7; x++) {\n        for (let y = 0; y < 12; y++) {\n          row[currentSelected][0].accLocation[x][y].letter = letter[picker];\n          picker++;\n\n          if (picker === 7) {\n            picker = 0;\n          }\n\n          if (y === 11) {\n            picker = round;\n          }\n        }\n      }\n\n      let alpMap = [\"G\", \"D\", \"A\", \"E\", \"B\", \"F#\", \"C#\", \"F\", \"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\", \"C\"];\n      let keySeq = [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\", \"B\", \"E\", \"A\", \"D\", \"G\", \"C\", \"F\"];\n      let addUp = 0;\n      let sequence = [];\n\n      for (let i = 0; i < a.length; i++) {\n        console.log(row[currentSelected][0].accLocation[a[i].x][a[i].y].letter, a[i].acc);\n        sequence.push({\n          letter: row[currentSelected][0].accLocation[a[i].x][a[i].y].letter,\n          acc: a[i].acc\n        });\n      }\n\n      let type = 5;\n      let error = 12;\n      let measure = row[currentSelected + 1][8].measure;\n\n      if (sequence.length === 0) {\n        this.props.removeWarning(type, measure, error);\n      } else {\n        if (a[0].acc === \"b\") {\n          addUp = 7;\n        }\n\n        for (let i = 0; i < a.length; i++) {\n          if (sequence[i].letter === keySeq[i + addUp]) {\n            console.log(sequence[i].letter, keySeq[i + addUp], \"Key of\", alpMap[i + addUp]);\n\n            if (i === a.length - 1) {\n              console.log(\"Final Key is in Key of\", alpMap[i + addUp]);\n              let row = this.state.row;\n              let x = currentSelected;\n              row[x].keySig = alpMap[i + addUp];\n              this.setState({\n                row\n              });\n              console.log(this.state.row[x], \"The clef is\", this.state.row[x][0].clef);\n              let keySig = alpMap[i + addUp];\n              let clef = this.state.row[x][0].clef;\n              let up = this.state.row[x][0].up;\n              let down = this.state.row[x][0].down;\n              this.props.removeWarning(type, measure, error);\n              row[currentSelected][0].keySig = alpMap[i + addUp];\n              console.log(\"run me from board\");\n              this.props.runMe(x, clef, up, down, keySig);\n              break;\n            }\n          } else {\n            console.log(\"unkown Key Signature\");\n            this.props.consoleWarningKS(type, measure, error);\n            break;\n          }\n        }\n      }\n\n      this.setState({\n        row\n      });\n    };\n\n    this.createRow = (cell, rowX, kind) => {\n      // let currentIndex = this.state.currentIndex;\n      let currentIndex = null;\n\n      if (rowX !== undefined) {\n        currentIndex = rowX;\n      } else {\n        currentIndex = this.state.currentIndex;\n      }\n\n      let row = this.state.row;\n      let column = this.state.column;\n      row.splice(currentIndex, 0, []);\n\n      for (let y = 0; y < column; y++) {\n        if (y !== 0) {\n          if (y !== 8) {\n            row[currentIndex].push({\n              x: currentIndex,\n              y: y,\n              isOpen: false,\n              rest: false,\n              note: 0,\n              lineStaff: false,\n              // gives line on the cell if true -------------------------------\n              clickable: true,\n              // cell will unclicable if enabler is false ----------------------\n              starting: false,\n              firstRow: false\n            });\n          } else {\n            row[currentIndex].push({\n              x: currentIndex,\n              y: y,\n              isOpen: false,\n              rest: false,\n              note: 0,\n              measure: null,\n              lineStaff: false,\n              // gives line on the cell if true -------------------------------\n              clickable: true,\n              // cell will unclicable if enabler is false ----------------------\n              barline: false,\n              starting: false,\n              firstRow: false\n            });\n          }\n        } else {\n          row[currentIndex].push({\n            x: currentIndex,\n            y: y,\n            isOpen: false,\n            rest: false,\n            note: 0,\n            lineStaff: false,\n            // gives line on the cell if true -------------------------------\n            clickable: true,\n            // cell will unclicable if enabler is false ----------------------\n            select: true,\n            selectColumn: false,\n            starting: false,\n            firstRow: false\n          });\n        }\n      } // set design\n\n\n      for (let i = 4; i < column - 7; i++) {\n        if (i === 4 || i === 6 || i === 8 || i === 10 || i === 12) {\n          row[currentIndex][i].lineStaff = true;\n        }\n      }\n\n      if (kind === 4) {\n        this.incrementX();\n      }\n\n      if (row[currentIndex - 1][0].starting === true) {\n        for (let i = 0; i <= column - 1; i++) {\n          row[currentIndex][i].firstRow = true;\n        }\n      }\n\n      if (kind === 4) {\n        for (let i = 0; i <= column - 1; i++) {\n          row[currentIndex + 1][i].firstRow = false;\n        }\n      } // Make enabler true for the first column--------------SET DEFAULT---------------------------------\n\n\n      this.increment();\n      this.setState({\n        row\n      });\n    };\n\n    this.insertStartingMeasure = cell => {\n      let x = this.state.currentSelected;\n      let row = this.state.row;\n\n      if (row[x][0].starting === true) {\n        console.log(\"This is already a starting measure\");\n        return;\n      }\n\n      if (row[x - 1][0].starting === true) {\n        if (x === row.length) {\n          console.log(\"Unable to Insert Another Starting Just next to Starting\");\n          return;\n        }\n\n        if (row.length !== x + 1) {\n          if (row[x + 1][0].starting === true) {\n            console.log(\"Unable to Insert Another Starting Just next to Starting\");\n            return;\n          }\n        }\n      }\n\n      if (x !== 0) {\n        console.log(x, row);\n        row.splice(x, 0, []);\n        row[x].push({\n          x: x,\n          starting: true,\n          clef: null,\n          // Time signature\n          up: null,\n          down: null,\n          // Key signature\n          keySig: null,\n          selectColumn: false,\n          barLength: null,\n          accidental: \"#\",\n          mx: 0,\n          my: 0,\n          accLocation: []\n        });\n        console.log(row[x]);\n\n        for (let i = 0; i < 7; i++) {\n          row[x][0].accLocation.push([]);\n\n          for (let y = 0; y < 12; y++) {\n            row[x][0].accLocation[i].push({\n              my: false,\n              acc: \"\",\n              letter: \"\"\n            });\n          }\n        }\n\n        this.increment();\n        row[x + 1][0].selectColumn = false;\n        console.log(row[x][0]);\n        row[x][0].selectColumn = true;\n        row[x + 1][8].barline = false;\n        this.setState({\n          row,\n          currentSelected: x\n        });\n        this.props.viewOptionOn();\n        console.log(this.state.row);\n        this.incrementX();\n        let kind = 3;\n        let rowX = null;\n        let measure = 1;\n        console.log(x);\n\n        for (let a = x - 1; a >= 1; a--) {\n          console.log(a - 1, row[a - 1][0]);\n\n          if (row[a - 1][0].starting === true) {\n            measure = row[a][8].measure + 1;\n            break;\n          }\n\n          if (row[a][8].barline === true) {\n            measure = row[a][8].measure + 1;\n            break;\n          }\n        }\n\n        row[x + 1][8].measure = measure;\n        this.setMeasureNum(x + 1, rowX, kind);\n\n        for (let i = 0; i <= this.state.column - 1; i++) {\n          row[x + 1][i].firstRow = true;\n        }\n\n        if (row[x + 1][0].note > 0) {\n          let kind = 7;\n          this.checkStartingClef(x, rowX, kind);\n        }\n      } else {\n        console.log(\"already set\");\n      }\n\n      console.log(this.state.row);\n    };\n\n    this.removeStartingMeasure = cell => {\n      let row = this.state.row;\n      let x = this.state.currentSelected;\n\n      if (x === 0) {\n        console.log(\"Cannot Delete The First Starting Measure\");\n        return;\n      }\n\n      row.splice(x, 1);\n      this.decrementX();\n      row[x][8].barline = true;\n\n      for (let i = 0; i <= this.state.column - 1; i++) {\n        row[x][i].firstRow = false;\n      }\n\n      this.setState({\n        row\n      });\n      console.log(x, this.state.row);\n    };\n\n    this.incrementX = cell => {\n      let x = this.state.currentSelected + 1;\n      let row = this.state.row;\n      let column = this.state.column;\n      let rowLength = row.length;\n      console.log(x);\n\n      if (x === row.length - 1) {\n        return;\n      }\n\n      for (let a = x; a < rowLength; a++) {\n        if (row[a][0].starting === false) {\n          for (let i = 0; i < column; i++) {\n            row[a][i].x = a;\n          }\n        } else {\n          row[a][0].x = a;\n        }\n      }\n\n      this.setState({\n        row\n      });\n    };\n\n    this.decrementX = cell => {\n      let x = this.state.currentSelected;\n      let row = this.state.row;\n      let column = this.state.column;\n      let rowLength = row.length;\n\n      for (let a = x; a < rowLength; a++) {\n        if (row[a][0].starting === false) {\n          for (let i = 0; i < column; i++) {\n            row[a][i].x = a;\n          }\n        } else {\n          row[a][0].x = a;\n        }\n      }\n\n      this.setState({\n        row\n      }); // console.log(rowLength)\n    };\n\n    this.clickLeft = cell => {\n      console.log(\"Clicked left\");\n\n      if (this.props.handle === 1) {\n        let row = this.state.row;\n        let rowX = cell.x;\n        let kind = 4;\n        let measure = row[cell.x][8].measure;\n        row[cell.x][8].measure = null;\n        this.createRow(cell, rowX, kind);\n        row[cell.x - 1][8].measure = measure;\n        row[cell.x - 1][cell.y].isOpen = true;\n        row[cell.x - 1][cell.y].rest = this.props.rest;\n\n        for (let i = 0; i <= this.state.column - 1; i++) {\n          row[cell.x - 1][i].note = this.props.note;\n        }\n\n        let x = cell.x;\n        kind = 6;\n        this.findStartingMeasure(x, kind);\n        this.setState({\n          row\n        });\n      }\n\n      if (this.props.handle === 2) {\n        console.log(\"Clicked left handle 2\");\n\n        if (this.state.row[cell.x - 1][0].starting === true) {\n          // THIS IS STARTING, CAN'T CLICK\n          console.log(\"this is starting measure\");\n          return;\n        }\n\n        let swt = true;\n        this.props.insertStartingMeasureDisabler(swt);\n        this.handle2(cell + 1); // bar\n      }\n    };\n\n    this.clickRight = cell => {\n      console.log(\"Clicked Right\", cell.x + 1);\n      let row = this.state.row;\n\n      if (this.props.handle === 0) {\n        if (cell.x + 1 !== row.length) {\n          console.log(\"Clicked left handle 2\");\n          let kind = 5;\n          let side = cell.x + 1;\n          this.handle0(cell, kind, side); // bar\n        }\n      }\n\n      if (this.props.handle === 1) {\n        let rowX = cell.x + 1;\n        this.createRow(cell, rowX);\n        row[cell.x + 1][cell.y].isOpen = true;\n        row[cell.x + 1][cell.y].rest = this.props.rest;\n\n        for (let i = 0; i <= this.state.column - 1; i++) {\n          row[cell.x + 1][i].note = this.props.note;\n        }\n\n        this.incrementX(cell);\n        this.setState({\n          row\n        });\n        let x = cell.x;\n        let kind = 6;\n        this.findStartingMeasure(x, kind);\n      }\n\n      if (this.props.handle === 2) {\n        let swt = true;\n        let kind = 5;\n        let side = cell.x + 1;\n        this.props.insertStartingMeasureDisabler(swt);\n        this.handle2(cell, kind, side); // bar\n      }\n    };\n\n    this.click = (cell, kind, mx, my) => {\n      let row = this.state.row;\n      let handle = this.props.handle;\n\n      if (handle === 0) {\n        let swt = false;\n        this.props.insertStartingMeasureDisabler(swt);\n        let side;\n        this.handle0(cell, kind, side, mx, my); // select\n      }\n\n      if (handle === 1) {\n        let swt = true;\n        this.props.insertStartingMeasureDisabler(swt);\n        this.handle1(cell); // notes\n      }\n\n      if (handle === 2) {\n        let swt = true;\n        this.props.insertStartingMeasureDisabler(swt);\n        this.handle2(cell); // bar\n      }\n\n      this.setState({\n        row\n      });\n    };\n\n    this.handle0 = (cell, kind, side, mx, my) => {\n      let row = this.state.row;\n      let xValue = cell.x;\n\n      if (kind === 5) {\n        xValue = side;\n      }\n\n      let currentSelected = this.state.currentSelected;\n      row[currentSelected][0].selectColumn = false;\n      row[xValue][0].selectColumn = true;\n\n      if (row[xValue][0].starting === true) {\n        this.props.viewOptionOn();\n      } else {\n        this.props.viewOptionOff();\n      }\n\n      this.setState({\n        x: xValue,\n        currentSelected: xValue\n      });\n\n      if (kind === 8) {\n        this.ks1(cell, xValue, mx, my);\n      }\n    };\n\n    this.handle1 = cell => {\n      // contain conlose -------------- passing------------\n      let row = this.state.row;\n      let currentCell = row[cell.x][cell.y]; // get x and y positions\n\n      let x = cell.x;\n      let note = this.props.note;\n      console.log(this.props);\n\n      if (row[x][0].starting === false) {\n        if (currentCell.isOpen === false) {\n          // 1. Find if one of the cells in current row has a True value for isOpen\n          let found = row[x].findIndex(cell => {\n            if (cell.isOpen === true) return true;else {\n              return false;\n            }\n          }); // 2. deside if it is going to make another row next to it or not.\n\n          if (found === -1 && row.length - 1 === x) {\n            // if none\n            this.setState({\n              currentIndex: x\n            }); // this.createRow(); -----------------------------------------------------------------------------------\n          }\n\n          if (cell.x === 1) {\n            row[1][8].measure = 1;\n          }\n\n          currentCell.isOpen = true;\n          console.log(this.props.rest, currentCell.rest);\n          currentCell.rest = this.props.rest;\n          currentCell.note = note;\n          let kind = 6;\n          console.log(\"find Starting Measure\");\n          this.findStartingMeasure(x, kind); //the length of the note should be equal to it's column\n\n          row[x].findIndex(cell => {\n            cell.note = note;\n            return null;\n          });\n        } else {\n          // When Closing ------------------\n          currentCell.isOpen = false;\n          console.log(\"this will be CLOSE\");\n          let found = row[x].findIndex(cell => {\n            // find if there is true in isOpen from the specific row clicked\n            if (cell.isOpen === true) return true;else {\n              return false;\n            }\n          });\n\n          if (found === -1) {\n            console.log(x);\n\n            if (x !== 1) {\n              if (x + 1 !== row.length) {\n                if (row[x][8].barline === true) {\n                  // if x has barline but to be removes, put it in the next x\n                  if (row[x + 1][8].barline === false) {\n                    row[x + 1][8].barline = true;\n                    row[x + 1][8].measure = row[x][8].measure;\n                    row.splice(x, 1);\n                    this.decrementX(cell);\n                  } else {\n                    let a = 0;\n\n                    while (a <= this.state.column - 1) {\n                      row[x][a].note = 0;\n                      a++;\n                    }\n\n                    let type = 1;\n                    let error = 0;\n                    let measure = row[x][8].measure;\n                    this.props.consoleWarningTS(type, measure, error);\n                  }\n                } else {\n                  row.splice(x, 1);\n                  this.decrementX(cell);\n                  return;\n                }\n              }\n            }\n          }\n        }\n\n        this.setState({\n          x: x\n        });\n      } else {\n        console.log(\"this is a starting measure\");\n      }\n    };\n\n    this.handle2 = (cell, kind, side) => {\n      // create barline--------------- passing function with console\n      let x = cell.x;\n\n      if (kind === 5) {\n        x = side;\n      }\n\n      let row = this.state.row;\n      console.log(x, row.length);\n\n      if (x === row.length) {\n        console.log(\"This is the last row last. Use End Bar line\");\n        return;\n      }\n\n      if (x === 0 || row[x][0].starting === true) {\n        // THIS IS STARTING, CAN'T CLICK\n        console.log(\"this is starting measure\");\n      } else {\n        if (row[x - 1][0].starting === false) {\n          if (row[x - 1][0].barline === true) {\n            console.log(\"error: declaring barline without notes or rest between barlines\");\n          } else {\n            if (row[x][8].barline === false) {\n              //---- switch barline to TRUE\n              row[x][8].barline = true;\n              let kind = 1;\n              console.log(kind);\n              this.setState({\n                row\n              });\n              this.findStartingMeasure(x, kind); //  ------  findStartingMeasure => checkingStartingTS => console => setMeasureNum => measureLengthCalc\n            } else {\n              // ----------------switch barline to FALSE\n              row[x][8].barline = false;\n              row[x][8].measure = null;\n              let kind = 2;\n              this.setState({\n                row\n              });\n              this.findStartingMeasure(x, kind); //    ------  findStartingMeasure => checkingStartingTS => toLastNewMeasure => measureLengthCalc\n\n              let rowX;\n              this.setMeasureNum(x, rowX, kind);\n              let measure = 1;\n\n              for (let a = row.length - 1; a >= 1; a--) {\n                console.log(a, row[a][8].measure);\n\n                if (row[a][8].measure !== null) {\n                  console.log(row[a][8]);\n                  measure = row[a][8].measure + 1;\n                  break;\n                }\n              }\n\n              this.props.recalcuConsoleMeasure(measure);\n            }\n          }\n        }\n      }\n    };\n\n    this.setStarting = cell => {\n      // contain console ---------------------- passing function with console\n      let row = this.state.row;\n      let x = this.state.currentSelected;\n      row[x][0].clef = this.props.clef;\n      row[x][0].up = this.props.up;\n      row[x][0].down = this.props.down;\n      row[x][0].keySig = this.props.keySig; //-------FOR TS -----------------------------\n\n      if (row[x][0].up === null || row[x][0].down === null) {\n        console.log(\" TS not complete\");\n      } else {\n        //then\n        if (x === 0) {\n          row[x + 1][8].measure = 1;\n        }\n\n        let type = 3;\n        let error = 4;\n        let measure = row[x + 1][8].measure;\n        this.props.removeWarning(type, measure, error);\n        this.calcDownUp(x);\n        let rowX = x;\n        let kind = 1;\n        this.measureLengthCalc(x + 1, rowX, kind);\n      } //-------FOR Clef -----------------------------\n\n\n      if (row[x][0].Clef === null) {\n        console.log(\" clef not complete\");\n      } else {\n        let type = 4;\n        let error = 6;\n        let measure = row[x + 1][8].measure;\n        this.props.removeWarning(type, measure, error);\n        error = 7;\n        this.props.removeWarning(type, measure, error);\n        type = 5;\n        error = 11;\n        this.props.removeWarning(type, measure, error);\n        let currentSelected = x;\n        let kind = 8;\n        let mx = null;\n        let my = null;\n        this.ks2(cell, currentSelected, mx, my, kind);\n        row[x][0].keySig = \"C\";\n      }\n\n      this.setState({\n        row\n      });\n\n      for (x = 0; x < row.length - 1; x++) {\n        if (row[x][0].starting === true) {\n          let clef = row[x][0].clef;\n          let up = row[x][0].up;\n          let down = row[x][0].down;\n          let keySig = this.state.row[x][0].keySig;\n          this.props.runMe(x, clef, up, down, keySig);\n        }\n      }\n    };\n\n    this.findStartingMeasure = (x, kind) => {\n      console.log(x, kind, \"Get Starting Position's X axis\");\n      let row = this.state.row;\n      let rowX = 0; //  row[X] Position -------------\n\n      for (let i = x; i >= 0; i--) {\n        // find Starting\n        if (row[i][0].starting === true) {\n          rowX = i;\n          break;\n        }\n      } // -------------------------TS-----------------------------------\n\n\n      if (kind === 1) {\n        let kind = 1;\n        this.checkingStartingTS(x, rowX, kind);\n      }\n\n      if (kind === 2) {\n        let kind = 2;\n        this.toLastNewMeasure(x, rowX, kind);\n        this.measureLengthCalc(x, rowX, kind);\n      } // -------------------------KS-----------------------------------\n\n\n      if (kind === 6) {\n        let kind = 6;\n        this.checkStartingClef(x, rowX, kind);\n      }\n    };\n\n    this.toLastNewMeasure = (x, rowX, kind) => {\n      console.log(\"Get last clicable position's X axis\");\n      let row = this.state.row;\n\n      if (kind === 2) {\n        let barCount = 0;\n\n        for (let a = rowX; a <= row.length - 2; a++) {\n          if (row[a + 1][0].starting === false) {\n            if (row[a + 1][8].barline === true) {\n              barCount = barCount + 1;\n              console.log(row[a + 1][0].starting);\n            }\n          }\n        }\n\n        if (barCount === 0) {\n          let measure = row[rowX + 1][8].measure;\n          let type = 3;\n          let error = 4;\n          console.log(type, error, measure, row[rowX + 1][8].measure);\n          this.props.removeWarning(type, measure, error);\n        }\n\n        console.log(\"barcount =\", barCount);\n      }\n    };\n\n    this.checkingStartingTS = (x, rowX, kind) => {\n      console.log(x, rowX, \"Get Starting first measure's from left axis\");\n      let row = this.state.row;\n\n      if (kind === 1) {\n        let bLValrow = row[rowX][0].barLength;\n        let measure = row[rowX + 1][8].measure;\n        let type = 3;\n        let error = 4;\n\n        if (bLValrow === null) {\n          // Adding barline without declaring time signature for starting measure\n          let kind = 1;\n          console.log(type, error, measure, row[rowX + 1][8].measure);\n          this.setMeasureNum(x, rowX, kind); // --------------------measure numbers-----------\n\n          let up = row[rowX][0].up;\n          let down = row[rowX][0].down;\n          let barLength = row[rowX][0].barLength;\n          let totalNoteValue = row[rowX][0].totalNoteValue;\n          this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\n        } else {\n          // -----------------------if Up and Down are not Null\n          let kind = 1;\n          this.setMeasureNum(x, rowX, kind); // --------------------measure numbers-----------\n\n          console.log(\"hhh\");\n          this.measureLengthCalc(x, rowX, kind); //--------  proceed checking left and right measure\n        }\n      }\n\n      if (kind === 2) {\n        console.log(\"remove\");\n      }\n    };\n\n    this.setMeasureNum = (x, rowX, kind) => {\n      // set Measure Number\n      console.log(x, rowX, kind, \"Measure number or address\");\n      let row = this.state.row;\n      let measure = 1;\n      let kindHandler = 1;\n\n      if (kind === 3) {\n        kindHandler = 2;\n      }\n\n      for (let a = x - kindHandler; a >= 0; a--) {\n        if (a !== 0) {\n          if (row[a - 1][0].starting === true) {\n            measure = row[a][8].measure;\n            break;\n          }\n\n          if (row[a][8].barline === true) {\n            measure = row[a][8].measure;\n            break;\n          }\n        }\n      }\n\n      if (kind === 1) {\n        row[x][8].measure = measure + 1; // ------declare current measure number\n\n        measure = measure + 1;\n      }\n\n      if (kind === 3) {\n        measure = row[x][8].measure;\n      }\n\n      for (let b = x + 1; b <= row.length - 1; b++) {\n        if (row[b][0].starting === true) {\n          console.log(row[b + 1][8]);\n          row[b + 1][8].measure = measure + 1;\n          measure = measure + 1;\n          continue;\n        }\n\n        if (row[b][8].barline === true) {\n          row[b][8].measure = measure + 1;\n          measure = measure + 1;\n          continue;\n        }\n      }\n    };\n\n    this.measureLengthCalc = (x, rowX, kind) => {\n      // ------- get measure length   --- if kind 1, get measure length of left measure and right measure\n      let row = this.state.row;\n      let starting = x - 1;\n      let barLength = 0;\n      let newX = 1;\n      let measure = 1;\n      let loop = 1;\n      let up = null;\n      let down = null;\n      barLength = row[rowX][0].barLength;\n      up = row[rowX][0].up;\n      down = row[rowX][0].down;\n\n      if (kind === 1) {\n        // if kind 1, need to do 2 loops\n        loop = row.length;\n      }\n\n      if (kind === 2) {\n        // if kind 1, need to do 2 loops\n        loop = row.length;\n      }\n\n      console.log(loop);\n\n      for (let l = 1; l <= loop; l++) {\n        // this is the loop       ------------ LOOP ------------\n        for (let n = starting; n >= 0; n--) {\n          // set the barLength\n          if (row[n][0].starting === true) {\n            barLength = row[n][0].barLength;\n            break;\n          }\n        }\n\n        console.log(\"loop number=\", l, \"Bar Length=\", barLength);\n\n        for (let n = starting; n >= 0; n--) {\n          // set the Strting POINT (newX) and measure   --- or The 1st column in  measure\n          if (row[n][0].starting === true) {\n            newX = n + 1;\n            measure = row[n + 1][8].measure;\n            break;\n          }\n\n          if (row[n][8].barline === true) {\n            newX = n;\n            measure = row[n][8].measure;\n            break;\n          }\n        } //--------------------------------------------------\n\n\n        let ret = false;\n        let noteValue = [0]; // added Zero for reduce()\n\n        let nS = 0;\n        let nM = 0;\n        let nBL = barLength;\n\n        for (let b = newX; b <= row.length - 1; b++) {\n          if (row[b][0].starting === true) {\n            // break to the starting measure or a bar line\n            nS = b + 1;\n            nM = row[b + 1][8].measure;\n            console.log(row[b][0].barLength);\n            console.log(row[b][8], newX);\n            nBL = row[b][0].barLength;\n\n            if (row[b][0].barLength === null) {\n              // if the next starting measure's Time Siganture is NULL consoleWarn\n              for (let c = b; c <= row.length; c++) {\n                let type = 3;\n                let error = 4;\n                let measure = row[c][0].measure;\n                let up = row[c][0].up;\n                let barLength = row[c][0].barLength;\n                let down = row[c][0].down;\n                let totalNoteValue = row[rowX][0].totalNoteValue;\n                console.log(measure);\n\n                if (row[c][0].starting === true) {\n                  this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\n                } else {\n                  b = c;\n                  break;\n                }\n              }\n            }\n\n            break;\n          }\n\n          if (row[b][8].barline === true) {\n            nS = b;\n            nM = row[b][8].measure;\n            console.log(row[b][8], newX);\n\n            if (b !== newX) {\n              break;\n            }\n          }\n\n          if (row[b][0].note === 1) {\n            noteValue.push(4);\n          }\n\n          if (row[b][0].note === 2) {\n            noteValue.push(2);\n          }\n\n          if (row[b][0].note === 4) {\n            noteValue.push(1);\n          }\n\n          if (b === row.length - 1) {\n            ret = true;\n          }\n        }\n\n        let totalNoteValue = noteValue.reduce((accumulator, currentValue) => {\n          return accumulator + currentValue;\n        });\n        console.log(measure, barLength, \"vs\", totalNoteValue); // -------------------------\n\n        let type = 1;\n        console.log(barLength, totalNoteValue, kind);\n\n        if (barLength === null) {\n          starting = nS;\n          measure = nM;\n          barLength = nBL;\n          console.log(starting, measure, barLength);\n\n          if (ret === true) {\n            console.log(\"Done\");\n            return;\n          }\n\n          continue;\n        }\n\n        if (barLength > totalNoteValue) {\n          let error = 1;\n          this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\n          console.log(\"kulang\");\n        }\n\n        if (barLength < totalNoteValue) {\n          let error = 2;\n          this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\n          console.log(\"sobra\");\n        }\n\n        if (barLength === totalNoteValue) {\n          console.log(\"chakto\");\n          this.props.removeWarning(type, measure);\n        } // measure = nextMeasure\n        // barLength = nextBarLength\n\n\n        starting = nS;\n        measure = nM;\n        barLength = nBL;\n        console.log(starting, measure, barLength);\n\n        if (ret === true) {\n          console.log(\"Done\");\n          return;\n        }\n      }\n    };\n\n    this.calcDownUp = x => {\n      let row = this.state.row;\n      let up = this.props.up;\n      let down = this.props.down;\n      let calcDown = 0;\n      let c = 4;\n      let i = 0;\n\n      while (calcDown !== 4 || i < 7) {\n        //current note value should be 4 && do while for 7 times only, limit to 7\n        calcDown = c * down;\n\n        if (calcDown !== 4) {\n          c = c / 2;\n        } else {\n          break;\n        }\n\n        i++;\n      }\n\n      let barLength = c * up;\n      row[x][0].barLength = barLength;\n      this.setState({\n        row\n      });\n    };\n\n    this.valuePerMeasureCalc = (cell, h, x, m) => {\n      // contain console\n      console.log(\"valuePerMeasureCalc\", cell, h, x, m);\n      let row = this.state.row;\n      let currentX = 0;\n      let starting = 0;\n      let barline = 1;\n      let startingMeasure = 0; //--- THIS IS THE MEASURE\n\n      for (let i = currentX; i >= 1; i--) {\n        // find Starting Measure\n        if (row[i][0].starting === false) {\n          if (row[i][8].barline === true) {\n            // if found...\n            barline = i;\n            break;\n          } else {\n            continue;\n          }\n        } else {\n          barline = i + 1;\n          break;\n        }\n      }\n\n      startingMeasure = row[barline][8].measure;\n      let measure = startingMeasure;\n      console.log(m); //------------------------------------------------------------------------------------------------------------\n\n      let noteValue = [0]; // added Zero for reduce()\n\n      for (let i = barline; i <= row.length - 1 || row[i - 1][0].starting === true || row[i - 1][8].barline === true; i++) {\n        // find end of Measure\n        console.log(barline, measure);\n\n        if (row[i][0].starting === false) {\n          if (row[i][8].barline === false) {\n            if (row[i][0].note === 1) {\n              console.log(\"pushed 4\");\n              noteValue.push(4);\n            }\n\n            if (row[i][0].note === 2) {\n              console.log(\"pushed 2\");\n              noteValue.push(2);\n            }\n\n            if (row[i][0].note === 4) {\n              console.log(\"pushed 1\");\n              noteValue.push(1);\n            }\n          } else {\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n\n      console.log(noteValue);\n      let barLength = row[starting][0].barLength;\n      let totalNoteValue = noteValue.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue;\n      });\n      console.log(startingMeasure, barLength, \"vs\", totalNoteValue);\n      let type = 1;\n      let up = row[starting][0].up;\n      let down = row[starting][0].down;\n\n      if (barLength > totalNoteValue) {\n        let error = 1;\n        this.props.consoleWarningTS(type, measure, error, up, down);\n        console.log(\"kulang\");\n        return;\n      }\n\n      if (barLength < totalNoteValue) {\n        let error = 2;\n        this.props.consoleWarningTS(type, measure, error, up, down);\n        console.log(\"sobra\");\n        return;\n      }\n\n      if (barLength === totalNoteValue) {\n        console.log(h, m);\n        console.log(\"chakto\");\n        this.props.removeWarning(type, measure, up, down);\n        return;\n      }\n\n      console.log(currentX, starting, barline, barLength, totalNoteValue, startingMeasure);\n    };\n\n    this.checkStartingClef = (x, rowX, kind) => {\n      let row = this.state.row;\n      let a = null;\n\n      if (kind === 6) {\n        a = rowX;\n      }\n\n      if (kind === 7) {\n        a = x;\n      }\n\n      console.log(row[a][0]);\n\n      if (row[a][0].clef === null) {\n        let type = 4;\n        let measure = row[a + 1][8].measure;\n        let error = 6;\n        this.props.consoleWarningClef(type, measure, error);\n      } else {\n        this.measureLengthCalc(x, rowX, kind);\n      }\n    };\n\n    this.aaa = () => {\n      console.log(\"hit\");\n    };\n\n    this.insertStartingMeasure = this.insertStartingMeasure.bind(this);\n    this.setStarting = this.setStarting.bind(this);\n    this.removeStartingMeasure = this.removeStartingMeasure.bind(this);\n    this.state = {\n      currentIndex: 1,\n      row: [[]],\n      column: 20,\n      currentSelected: 0,\n      x: 0,\n      clef: 10,\n      // 10 = G-clef,\n      accidental: \"#\",\n      barLength: null,\n      measureLengthCalc: [],\n      buttonBool: true\n    };\n  }\n\n  createMeasureRow() {\n    let row = this.state.row;\n    row.splice(0, 1, []);\n    row[0].push({\n      x: 0,\n      starting: true,\n      clef: null,\n      // Time signature\n      up: null,\n      down: null,\n      // Key signature\n      keySig: null,\n      selectColumn: false,\n      barLength: null,\n      accidental: \"#\",\n      mx: 0,\n      my: 0,\n      letter: \"\",\n      accLocation: []\n    });\n    console.log(row[0]);\n\n    for (let i = 0; i < 7; i++) {\n      row[0][0].accLocation.push([]);\n\n      for (let y = 0; y < 12; y++) {\n        row[0][0].accLocation[i].push({\n          my: false,\n          acc: \"\",\n          letter: \"\"\n        });\n      }\n    } // set design\n    // Make enabler true for the first column--------------SET DEFAULT---------------------------------\n\n\n    this.setState({\n      row\n    });\n  }\n\n  increment() {\n    this.setState({\n      currentIndex: this.state.currentIndex + 1\n    });\n  }\n\n  decrement() {\n    this.setState({\n      currentIndex: this.state.currentIndex - 1\n    });\n  }\n\n  //----------------------------------------------------------------------------------------------------------------------------------------------\n  componentDidMount() {\n    this.createMeasureRow();\n    this.createRow();\n    this.measure1();\n    this.props.insertStartingMeasure(this.insertStartingMeasure);\n    this.props.setStarting(this.setStarting);\n    this.props.removeStartingMeasure(this.removeStartingMeasure);\n  }\n\n  measure1() {\n    let row = this.state.row;\n    row[1][8].measure = 1;\n    this.setState({\n      row\n    });\n  } //-----------------------------RENDER HERE------------------------------------\n\n\n  render() {\n    let rows = this.state.row.map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        cells: row,\n        click: this.click,\n        clickLeft: this.clickLeft,\n        clickRight: this.clickRight,\n        ks1: this.ks1,\n        ks2: this.ks2\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1473,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Timer, {\n          row: this.state.row,\n          column: this.state.column,\n          tempo: this.props.tempo,\n          timeSig: this.props.timeSig,\n          currentSelected: this.state.currentSelected,\n          startPauseSwitch: this.props.startPauseSwitch,\n          clockStop: this.props.clockStop,\n          volume: this.props.volume,\n          playerIcon: this.props.playerIcon,\n          consoleWarningClef: this.props.consoleWarningClef,\n          metronome: this.props.metronome,\n          aaa: this.aaa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1487,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1486,\n        columnNumber: 9\n      }, this), rows]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1485,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/Raivex/Desktop/THESIS/musimu/gui/src/simulator/Board.js"],"names":["React","Component","Row","Timer","Board","constructor","props","ks1","cell","xValue","mx","my","handle","currentSelected","row","state","accidental","setState","ks2","kind","type","console","log","undefined","starting","accLocation","acc","a","current","push","b","currentNext","length","x","y","xDup","c","xCount","i","error","measure","consoleWarningKS","removeWarning","yDup","yCount","mixed","clef","keySignatureClefCompare","letter","picker","round","alpMap","keySeq","addUp","sequence","keySig","up","down","runMe","createRow","rowX","currentIndex","column","splice","isOpen","rest","note","lineStaff","clickable","firstRow","barline","select","selectColumn","incrementX","increment","insertStartingMeasure","barLength","viewOptionOn","setMeasureNum","checkStartingClef","removeStartingMeasure","decrementX","rowLength","clickLeft","findStartingMeasure","swt","insertStartingMeasureDisabler","handle2","clickRight","side","handle0","click","handle1","viewOptionOff","currentCell","found","findIndex","consoleWarningTS","recalcuConsoleMeasure","setStarting","calcDownUp","measureLengthCalc","Clef","checkingStartingTS","toLastNewMeasure","barCount","bLValrow","totalNoteValue","kindHandler","newX","loop","l","n","ret","noteValue","nS","nM","nBL","reduce","accumulator","currentValue","calcDown","valuePerMeasureCalc","h","m","currentX","startingMeasure","consoleWarningClef","aaa","bind","buttonBool","createMeasureRow","decrement","componentDidMount","measure1","render","rows","map","index","tempo","timeSig","startPauseSwitch","clockStop","volume","playerIcon","metronome"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Row from \"./Row\";\r\nimport Timer from \"./Timer\";\r\n\r\nclass Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.insertStartingMeasure = this.insertStartingMeasure.bind(this);\r\n    this.setStarting = this.setStarting.bind(this);\r\n    this.removeStartingMeasure = this.removeStartingMeasure.bind(this);\r\n\r\n    this.state = {\r\n      currentIndex: 1,\r\n      row: [[]],\r\n      column: 20,\r\n      currentSelected: 0,\r\n      x: 0,\r\n\r\n      clef: 10, // 10 = G-clef,\r\n      accidental: \"#\",\r\n      barLength: null,\r\n      measureLengthCalc: [],\r\n\r\n      buttonBool: true,\r\n    };\r\n  }\r\n\r\n  ks1 = (cell, xValue, mx, my) => {\r\n    if (this.props.handle === 0) {\r\n      let currentSelected = xValue;\r\n      let row = this.state.row;\r\n      row[currentSelected][0].accidental = this.props.accidental;\r\n      this.setState({ row });\r\n      this.ks2(cell, currentSelected, mx, my);\r\n    }\r\n  };\r\n  ks2 = (cell, currentSelected, mx, my, kind) => {\r\n    let type = 5;\r\n    let row = this.state.row;\r\n    console.log(row[currentSelected][0]);\r\n    if (this.props.handle === 0) {\r\n      if (kind === undefined) {\r\n        if (row[currentSelected][0].starting !== true) {\r\n          return;\r\n        } // --------------debuged--------------------\r\n        //all y in x ---- means -----  check column\r\n\r\n        if (row[currentSelected][0].accLocation[mx][my].my === false) {\r\n          row[currentSelected][0].accLocation[mx][my].my = true;\r\n          row[currentSelected][0].accLocation[mx][my].acc =\r\n            row[currentSelected][0].accidental;\r\n          row[currentSelected][0].accLocation[mx][11].my = true;\r\n        } else {\r\n          let a = 0;\r\n          let current = [];\r\n          while (a < 9) {\r\n            if (\r\n              row[currentSelected][0].accLocation[mx][a].my === true &&\r\n              my !== a\r\n            ) {\r\n              current.push(a);\r\n            }\r\n            a++;\r\n            if (a === 9) {\r\n              a = 0;\r\n              break;\r\n            }\r\n          }\r\n          let b = 0;\r\n          let currentNext = [];\r\n          if (mx !== 6) {\r\n            while (b < 9) {\r\n              if (row[currentSelected][0].accLocation[mx + 1][b].my === true) {\r\n                currentNext.push(b);\r\n              }\r\n              b++;\r\n            }\r\n          }\r\n\r\n          if (mx === 6) {\r\n            row[currentSelected][0].accLocation[6][my].my = false;\r\n            console.log(\"a\");\r\n          }\r\n\r\n          if (current.length === 0 && currentNext.length === 0) {\r\n            row[currentSelected][0].accLocation[mx][my].my = false;\r\n            row[currentSelected][0].accLocation[mx][11].my = false;\r\n            console.log(\"b\");\r\n          }\r\n\r\n          if (current.length !== 0 && currentNext.length !== 0) {\r\n            row[currentSelected][0].accLocation[mx][my].my = false;\r\n            console.log(\"c\");\r\n          }\r\n          if (current.length !== 0 && currentNext.length === 0) {\r\n            row[currentSelected][0].accLocation[mx][my].my = false;\r\n            console.log(\"d\");\r\n          }\r\n        }\r\n      }\r\n      //--------------------------------------------------Checking-----------------------------------------\r\n      let a = [];\r\n      for (let x = 0; x <= 6; x++) {\r\n        let y = 0;\r\n        while (y < 10) {\r\n          if (row[currentSelected][0].accLocation[x][y].my === true) {\r\n            a.push({\r\n              acc: row[currentSelected][0].accLocation[x][y].acc,\r\n              x: x,\r\n              y: y,\r\n            });\r\n          }\r\n          y++;\r\n        }\r\n      }\r\n\r\n      let xDup = false;\r\n      for (let c = 0; c < a.length; c++) {\r\n        let xCount = [];\r\n        let i = 0;\r\n        while (i < a.length) {\r\n          if (a[i].x === c) {\r\n            xCount.push(c);\r\n          }\r\n          i++;\r\n        }\r\n        if (xCount.length === 0) {\r\n          break;\r\n        }\r\n        if (xCount.length > 1) {\r\n          xDup = true;\r\n          let error = 8;\r\n          let measure = row[currentSelected + 1][8].measure;\r\n          let accidental = row[currentSelected][0].accidental;\r\n          this.props.consoleWarningKS(type, measure, error, accidental, my, mx);\r\n        }\r\n        if (xDup === false) {\r\n          let error = 8;\r\n          let measure = row[currentSelected + 1][8].measure;\r\n          let accidental = row[currentSelected][0].accidental;\r\n          this.props.removeWarning(type, measure, error, accidental, my, mx);\r\n        }\r\n      }\r\n\r\n      // ------------------------for y ------------------------------------------------\r\n      let yDup = false;\r\n      let y = 0;\r\n      while (y < 10) {\r\n        let yCount = [];\r\n        for (let i = 0; i < a.length; i++) {\r\n          if (a[i].y === y) {\r\n            yCount.push(i);\r\n          }\r\n        }\r\n        if (yCount.length > 1) {\r\n          yDup = true;\r\n          // break;\r\n        }\r\n\r\n        y++;\r\n      }\r\n      if (yDup === true) {\r\n        let error = 9;\r\n        let measure = row[currentSelected + 1][8].measure;\r\n        let accidental = row[currentSelected][0].accidental;\r\n        this.props.consoleWarningKS(type, measure, error, accidental, my, mx);\r\n      } else {\r\n        let error = 9;\r\n        let measure = row[currentSelected + 1][8].measure;\r\n        let accidental = row[currentSelected][0].accidental;\r\n        this.props.removeWarning(type, measure, error, accidental, my, mx);\r\n      }\r\n\r\n      this.setState({ row });\r\n      // -------------------------------CHECKING IF THE ACCIDENTALS ARE THE SAME ----------------------------\r\n\r\n      let mixed = false;\r\n      for (let i = 0; i <= a.length - 1; i++) {\r\n        if (a[0].acc !== a[i].acc) {\r\n          mixed = true;\r\n          break;\r\n        }\r\n      }\r\n      if (mixed === true) {\r\n        console.log(\"different\");\r\n        let error = 10;\r\n        let measure = row[currentSelected + 1][8].measure;\r\n        let accidental = row[currentSelected][0].accidental;\r\n        this.props.consoleWarningKS(type, measure, error, accidental);\r\n      } else {\r\n        let error = 10;\r\n        let measure = row[currentSelected + 1][8].measure;\r\n        let accidental = row[currentSelected][0].accidental;\r\n        this.props.removeWarning(type, measure, error, accidental);\r\n      }\r\n\r\n      // ----------------------What Key Signature------------------------\r\n      if (row[currentSelected][0].clef === null) {\r\n        console.log(currentSelected, \"it's null\");\r\n        let error = 11;\r\n        let measure = row[currentSelected + 1][8].measure;\r\n        let accidental = row[currentSelected][0].accidental;\r\n        this.props.consoleWarningKS(type, measure, error, accidental);\r\n        return;\r\n      }\r\n      let clef = row[currentSelected][0].clef;\r\n      this.keySignatureClefCompare(clef, a, currentSelected);\r\n    } else {\r\n      console.log(\"Use Select tool to edit Key Signature\");\r\n    }\r\n  };\r\n  keySignatureClefCompare = (clef, a, currentSelected) => {\r\n    console.log(a);\r\n    // -----------set Letters --------------------------\r\n    let row = this.state.row;\r\n    let letter = [\"G\", \"F\", \"E\", \"D\", \"C\", \"B\", \"A\"];\r\n    let picker = 0;\r\n    let round = 0;\r\n    if (clef === \"G\") {\r\n      round = 0;\r\n      picker = 0;\r\n    }\r\n    if (clef === \"F\") {\r\n      round = 5;\r\n      picker = 5;\r\n    }\r\n\r\n    for (let x = 0; x < 7; x++) {\r\n      for (let y = 0; y < 12; y++) {\r\n        row[currentSelected][0].accLocation[x][y].letter = letter[picker];\r\n        picker++;\r\n        if (picker === 7) {\r\n          picker = 0;\r\n        }\r\n        if (y === 11) {\r\n          picker = round;\r\n        }\r\n      }\r\n    }\r\n    let alpMap = [\r\n      \"G\",\r\n      \"D\",\r\n      \"A\",\r\n      \"E\",\r\n      \"B\",\r\n      \"F#\",\r\n      \"C#\",\r\n      \"F\",\r\n      \"Bb\",\r\n      \"Eb\",\r\n      \"Ab\",\r\n      \"Db\",\r\n      \"Gb\",\r\n      \"Cb\",\r\n      \"C\",\r\n    ];\r\n    let keySeq = [\r\n      \"F\",\r\n      \"C\",\r\n      \"G\",\r\n      \"D\",\r\n      \"A\",\r\n      \"E\",\r\n      \"B\",\r\n      \"B\",\r\n      \"E\",\r\n      \"A\",\r\n      \"D\",\r\n      \"G\",\r\n      \"C\",\r\n      \"F\",\r\n    ];\r\n    let addUp = 0;\r\n    let sequence = [];\r\n\r\n    for (let i = 0; i < a.length; i++) {\r\n      console.log(\r\n        row[currentSelected][0].accLocation[a[i].x][a[i].y].letter,\r\n        a[i].acc\r\n      );\r\n      sequence.push({\r\n        letter: row[currentSelected][0].accLocation[a[i].x][a[i].y].letter,\r\n        acc: a[i].acc,\r\n      });\r\n    }\r\n\r\n    let type = 5;\r\n    let error = 12;\r\n    let measure = row[currentSelected + 1][8].measure;\r\n\r\n    if (sequence.length === 0) {\r\n      this.props.removeWarning(type, measure, error);\r\n    } else {\r\n      if (a[0].acc === \"b\") {\r\n        addUp = 7;\r\n      }\r\n      for (let i = 0; i < a.length; i++) {\r\n        if (sequence[i].letter === keySeq[i + addUp]) {\r\n          console.log(\r\n            sequence[i].letter,\r\n            keySeq[i + addUp],\r\n            \"Key of\",\r\n            alpMap[i + addUp]\r\n          );\r\n\r\n          if (i === a.length - 1) {\r\n            console.log(\"Final Key is in Key of\", alpMap[i + addUp]);\r\n            let row = this.state.row;\r\n            let x = currentSelected;\r\n            row[x].keySig = alpMap[i + addUp];\r\n            this.setState({ row });\r\n            console.log(\r\n              this.state.row[x],\r\n              \"The clef is\",\r\n              this.state.row[x][0].clef\r\n            );\r\n            let keySig = alpMap[i + addUp];\r\n            let clef = this.state.row[x][0].clef;\r\n            let up = this.state.row[x][0].up;\r\n            let down = this.state.row[x][0].down;\r\n\r\n            this.props.removeWarning(type, measure, error);\r\n            row[currentSelected][0].keySig = alpMap[i + addUp];\r\n\r\n            console.log(\"run me from board\");\r\n            this.props.runMe(x, clef, up, down, keySig);\r\n            break;\r\n          }\r\n        } else {\r\n          console.log(\"unkown Key Signature\");\r\n          this.props.consoleWarningKS(type, measure, error);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ row });\r\n  };\r\n  createRow = (cell, rowX, kind) => {\r\n    // let currentIndex = this.state.currentIndex;\r\n\r\n    let currentIndex = null;\r\n    if (rowX !== undefined) {\r\n      currentIndex = rowX;\r\n    } else {\r\n      currentIndex = this.state.currentIndex;\r\n    }\r\n    let row = this.state.row;\r\n    let column = this.state.column;\r\n\r\n    row.splice(currentIndex, 0, []);\r\n    for (let y = 0; y < column; y++) {\r\n      if (y !== 0) {\r\n        if (y !== 8) {\r\n          row[currentIndex].push({\r\n            x: currentIndex,\r\n            y: y,\r\n\r\n            isOpen: false,\r\n            rest: false,\r\n            note: 0,\r\n            lineStaff: false, // gives line on the cell if true -------------------------------\r\n            clickable: true, // cell will unclicable if enabler is false ----------------------\r\n            starting: false,\r\n            firstRow: false,\r\n          });\r\n        } else {\r\n          row[currentIndex].push({\r\n            x: currentIndex,\r\n            y: y,\r\n\r\n            isOpen: false,\r\n            rest: false,\r\n            note: 0,\r\n            measure: null,\r\n            lineStaff: false, // gives line on the cell if true -------------------------------\r\n            clickable: true, // cell will unclicable if enabler is false ----------------------\r\n            barline: false,\r\n            starting: false,\r\n            firstRow: false,\r\n          });\r\n        }\r\n      } else {\r\n        row[currentIndex].push({\r\n          x: currentIndex,\r\n          y: y,\r\n\r\n          isOpen: false,\r\n          rest: false,\r\n\r\n          note: 0,\r\n          lineStaff: false, // gives line on the cell if true -------------------------------\r\n          clickable: true, // cell will unclicable if enabler is false ----------------------\r\n\r\n          select: true,\r\n\r\n          selectColumn: false,\r\n          starting: false,\r\n          firstRow: false,\r\n        });\r\n      }\r\n    }\r\n\r\n    // set design\r\n    for (let i = 4; i < column - 7; i++) {\r\n      if (i === 4 || i === 6 || i === 8 || i === 10 || i === 12) {\r\n        row[currentIndex][i].lineStaff = true;\r\n      }\r\n    }\r\n\r\n    if (kind === 4) {\r\n      this.incrementX();\r\n    }\r\n    if (row[currentIndex - 1][0].starting === true) {\r\n      for (let i = 0; i <= column - 1; i++) {\r\n        row[currentIndex][i].firstRow = true;\r\n      }\r\n    }\r\n    if (kind === 4) {\r\n      for (let i = 0; i <= column - 1; i++) {\r\n        row[currentIndex + 1][i].firstRow = false;\r\n      }\r\n    }\r\n\r\n    // Make enabler true for the first column--------------SET DEFAULT---------------------------------\r\n\r\n    this.increment();\r\n    this.setState({ row });\r\n  };\r\n  createMeasureRow() {\r\n    let row = this.state.row;\r\n\r\n    row.splice(0, 1, []);\r\n    row[0].push({\r\n      x: 0,\r\n      starting: true,\r\n\r\n      clef: null,\r\n\r\n      // Time signature\r\n\r\n      up: null,\r\n      down: null,\r\n      // Key signature\r\n      keySig: null,\r\n\r\n      selectColumn: false,\r\n      barLength: null,\r\n\r\n      accidental: \"#\",\r\n      mx: 0,\r\n      my: 0,\r\n      letter: \"\",\r\n      accLocation: [],\r\n    });\r\n    console.log(row[0]);\r\n    for (let i = 0; i < 7; i++) {\r\n      row[0][0].accLocation.push([]);\r\n      for (let y = 0; y < 12; y++) {\r\n        row[0][0].accLocation[i].push({\r\n          my: false,\r\n          acc: \"\",\r\n          letter: \"\",\r\n        });\r\n      }\r\n    }\r\n\r\n    // set design\r\n\r\n    // Make enabler true for the first column--------------SET DEFAULT---------------------------------\r\n\r\n    this.setState({ row });\r\n  }\r\n  insertStartingMeasure = (cell) => {\r\n    let x = this.state.currentSelected;\r\n    let row = this.state.row;\r\n\r\n    if (row[x][0].starting === true) {\r\n      console.log(\"This is already a starting measure\");\r\n      return;\r\n    }\r\n\r\n    if (row[x - 1][0].starting === true) {\r\n      if (x === row.length) {\r\n        console.log(\"Unable to Insert Another Starting Just next to Starting\");\r\n        return;\r\n      }\r\n      if (row.length !== x + 1) {\r\n        if (row[x + 1][0].starting === true) {\r\n          console.log(\r\n            \"Unable to Insert Another Starting Just next to Starting\"\r\n          );\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (x !== 0) {\r\n      console.log(x, row);\r\n      row.splice(x, 0, []);\r\n\r\n      row[x].push({\r\n        x: x,\r\n        starting: true,\r\n\r\n        clef: null,\r\n\r\n        // Time signature\r\n\r\n        up: null,\r\n        down: null,\r\n        // Key signature\r\n        keySig: null,\r\n\r\n        selectColumn: false,\r\n        barLength: null,\r\n\r\n        accidental: \"#\",\r\n        mx: 0,\r\n        my: 0,\r\n\r\n        accLocation: [],\r\n      });\r\n      console.log(row[x]);\r\n      for (let i = 0; i < 7; i++) {\r\n        row[x][0].accLocation.push([]);\r\n        for (let y = 0; y < 12; y++) {\r\n          row[x][0].accLocation[i].push({\r\n            my: false,\r\n            acc: \"\",\r\n            letter: \"\",\r\n          });\r\n        }\r\n      }\r\n\r\n      this.increment();\r\n\r\n      row[x + 1][0].selectColumn = false;\r\n      console.log(row[x][0]);\r\n      row[x][0].selectColumn = true;\r\n      row[x + 1][8].barline = false;\r\n\r\n      this.setState({\r\n        row,\r\n        currentSelected: x,\r\n      });\r\n      this.props.viewOptionOn();\r\n      console.log(this.state.row);\r\n      this.incrementX();\r\n\r\n      let kind = 3;\r\n      let rowX = null;\r\n      let measure = 1;\r\n      console.log(x);\r\n      for (let a = x - 1; a >= 1; a--) {\r\n        console.log(a - 1, row[a - 1][0]);\r\n        if (row[a - 1][0].starting === true) {\r\n          measure = row[a][8].measure + 1;\r\n          break;\r\n        }\r\n\r\n        if (row[a][8].barline === true) {\r\n          measure = row[a][8].measure + 1;\r\n          break;\r\n        }\r\n      }\r\n      row[x + 1][8].measure = measure;\r\n      this.setMeasureNum(x + 1, rowX, kind);\r\n\r\n      for (let i = 0; i <= this.state.column - 1; i++) {\r\n        row[x + 1][i].firstRow = true;\r\n      }\r\n\r\n      if (row[x + 1][0].note > 0) {\r\n        let kind = 7;\r\n        this.checkStartingClef(x, rowX, kind);\r\n      }\r\n    } else {\r\n      console.log(\"already set\");\r\n    }\r\n    console.log(this.state.row);\r\n  };\r\n  removeStartingMeasure = (cell) => {\r\n    let row = this.state.row;\r\n    let x = this.state.currentSelected;\r\n\r\n    if (x === 0) {\r\n      console.log(\"Cannot Delete The First Starting Measure\");\r\n      return;\r\n    }\r\n    row.splice(x, 1);\r\n\r\n    this.decrementX();\r\n    row[x][8].barline = true;\r\n\r\n    for (let i = 0; i <= this.state.column - 1; i++) {\r\n      row[x][i].firstRow = false;\r\n    }\r\n\r\n    this.setState({ row });\r\n    console.log(x, this.state.row);\r\n  };\r\n  increment() {\r\n    this.setState({\r\n      currentIndex: this.state.currentIndex + 1,\r\n    });\r\n  }\r\n  decrement() {\r\n    this.setState({\r\n      currentIndex: this.state.currentIndex - 1,\r\n    });\r\n  }\r\n  incrementX = (cell) => {\r\n    let x = this.state.currentSelected + 1;\r\n    let row = this.state.row;\r\n    let column = this.state.column;\r\n    let rowLength = row.length;\r\n    console.log(x);\r\n    if (x === row.length - 1) {\r\n      return;\r\n    }\r\n\r\n    for (let a = x; a < rowLength; a++) {\r\n      if (row[a][0].starting === false) {\r\n        for (let i = 0; i < column; i++) {\r\n          row[a][i].x = a;\r\n        }\r\n      } else {\r\n        row[a][0].x = a;\r\n      }\r\n    }\r\n    this.setState({ row });\r\n  };\r\n  decrementX = (cell) => {\r\n    let x = this.state.currentSelected;\r\n    let row = this.state.row;\r\n    let column = this.state.column;\r\n    let rowLength = row.length;\r\n\r\n    for (let a = x; a < rowLength; a++) {\r\n      if (row[a][0].starting === false) {\r\n        for (let i = 0; i < column; i++) {\r\n          row[a][i].x = a;\r\n        }\r\n      } else {\r\n        row[a][0].x = a;\r\n      }\r\n    }\r\n\r\n    this.setState({ row });\r\n\r\n    // console.log(rowLength)\r\n  };\r\n  clickLeft = (cell) => {\r\n    console.log(\"Clicked left\");\r\n\r\n    if (this.props.handle === 1) {\r\n      let row = this.state.row;\r\n      let rowX = cell.x;\r\n      let kind = 4;\r\n      let measure = row[cell.x][8].measure;\r\n\r\n      row[cell.x][8].measure = null;\r\n\r\n      this.createRow(cell, rowX, kind);\r\n\r\n      row[cell.x - 1][8].measure = measure;\r\n      row[cell.x - 1][cell.y].isOpen = true;\r\n      row[cell.x - 1][cell.y].rest = this.props.rest;\r\n      for (let i = 0; i <= this.state.column - 1; i++) {\r\n        row[cell.x - 1][i].note = this.props.note;\r\n      }\r\n      let x = cell.x;\r\n      kind = 6;\r\n      this.findStartingMeasure(x, kind);\r\n      this.setState({ row });\r\n    }\r\n\r\n    if (this.props.handle === 2) {\r\n      console.log(\"Clicked left handle 2\");\r\n      if (this.state.row[cell.x - 1][0].starting === true) {\r\n        // THIS IS STARTING, CAN'T CLICK\r\n        console.log(\"this is starting measure\");\r\n        return;\r\n      }\r\n      let swt = true;\r\n      this.props.insertStartingMeasureDisabler(swt);\r\n      this.handle2(cell + 1); // bar\r\n    }\r\n  };\r\n  clickRight = (cell) => {\r\n    console.log(\"Clicked Right\", cell.x + 1);\r\n\r\n    let row = this.state.row;\r\n    if (this.props.handle === 0) {\r\n      if (cell.x + 1 !== row.length) {\r\n        console.log(\"Clicked left handle 2\");\r\n        let kind = 5;\r\n        let side = cell.x + 1;\r\n        this.handle0(cell, kind, side); // bar\r\n      }\r\n    }\r\n    if (this.props.handle === 1) {\r\n      let rowX = cell.x + 1;\r\n\r\n      this.createRow(cell, rowX);\r\n\r\n      row[cell.x + 1][cell.y].isOpen = true;\r\n      row[cell.x + 1][cell.y].rest = this.props.rest;\r\n\r\n      for (let i = 0; i <= this.state.column - 1; i++) {\r\n        row[cell.x + 1][i].note = this.props.note;\r\n      }\r\n\r\n      this.incrementX(cell);\r\n      this.setState({ row });\r\n      let x = cell.x;\r\n      let kind = 6;\r\n      this.findStartingMeasure(x, kind);\r\n    }\r\n\r\n    if (this.props.handle === 2) {\r\n      let swt = true;\r\n      let kind = 5;\r\n      let side = cell.x + 1;\r\n      this.props.insertStartingMeasureDisabler(swt);\r\n      this.handle2(cell, kind, side); // bar\r\n    }\r\n  };\r\n  click = (cell, kind, mx, my) => {\r\n    let row = this.state.row;\r\n    let handle = this.props.handle;\r\n    if (handle === 0) {\r\n      let swt = false;\r\n      this.props.insertStartingMeasureDisabler(swt);\r\n      let side;\r\n      this.handle0(cell, kind, side, mx, my); // select\r\n    }\r\n\r\n    if (handle === 1) {\r\n      let swt = true;\r\n      this.props.insertStartingMeasureDisabler(swt);\r\n      this.handle1(cell); // notes\r\n    }\r\n\r\n    if (handle === 2) {\r\n      let swt = true;\r\n      this.props.insertStartingMeasureDisabler(swt);\r\n      this.handle2(cell); // bar\r\n    }\r\n\r\n    this.setState({ row });\r\n  };\r\n  handle0 = (cell, kind, side, mx, my) => {\r\n    let row = this.state.row;\r\n    let xValue = cell.x;\r\n    if (kind === 5) {\r\n      xValue = side;\r\n    }\r\n    let currentSelected = this.state.currentSelected;\r\n    row[currentSelected][0].selectColumn = false;\r\n    row[xValue][0].selectColumn = true;\r\n\r\n    if (row[xValue][0].starting === true) {\r\n      this.props.viewOptionOn();\r\n    } else {\r\n      this.props.viewOptionOff();\r\n    }\r\n    this.setState({\r\n      x: xValue,\r\n      currentSelected: xValue,\r\n    });\r\n\r\n    if (kind === 8) {\r\n      this.ks1(cell, xValue, mx, my);\r\n    }\r\n  };\r\n  handle1 = (cell) => {\r\n    // contain conlose -------------- passing------------\r\n    let row = this.state.row;\r\n    let currentCell = row[cell.x][cell.y]; // get x and y positions\r\n    let x = cell.x;\r\n    let note = this.props.note;\r\n    console.log(this.props);\r\n\r\n    if (row[x][0].starting === false) {\r\n      if (currentCell.isOpen === false) {\r\n        // 1. Find if one of the cells in current row has a True value for isOpen\r\n        let found = row[x].findIndex((cell) => {\r\n          if (cell.isOpen === true) return true;\r\n          else {\r\n            return false;\r\n          }\r\n        });\r\n        // 2. deside if it is going to make another row next to it or not.\r\n        if (found === -1 && row.length - 1 === x) {\r\n          // if none\r\n          this.setState({\r\n            currentIndex: x,\r\n          });\r\n          // this.createRow(); -----------------------------------------------------------------------------------\r\n        }\r\n        if (cell.x === 1) {\r\n          row[1][8].measure = 1;\r\n        }\r\n\r\n        currentCell.isOpen = true;\r\n        console.log(this.props.rest, currentCell.rest);\r\n        currentCell.rest = this.props.rest;\r\n        currentCell.note = note;\r\n        let kind = 6;\r\n        console.log(\"find Starting Measure\");\r\n        this.findStartingMeasure(x, kind);\r\n        //the length of the note should be equal to it's column\r\n        row[x].findIndex((cell) => {\r\n          cell.note = note;\r\n          return null;\r\n        });\r\n      } else {\r\n        // When Closing ------------------\r\n        currentCell.isOpen = false;\r\n        console.log(\"this will be CLOSE\");\r\n        let found = row[x].findIndex((cell) => {\r\n          // find if there is true in isOpen from the specific row clicked\r\n          if (cell.isOpen === true) return true;\r\n          else {\r\n            return false;\r\n          }\r\n        });\r\n        if (found === -1) {\r\n          console.log(x);\r\n          if (x !== 1) {\r\n            if (x + 1 !== row.length) {\r\n              if (row[x][8].barline === true) {\r\n                // if x has barline but to be removes, put it in the next x\r\n\r\n                if (row[x + 1][8].barline === false) {\r\n                  row[x + 1][8].barline = true;\r\n                  row[x + 1][8].measure = row[x][8].measure;\r\n                  row.splice(x, 1);\r\n                  this.decrementX(cell);\r\n                } else {\r\n                  let a = 0;\r\n                  while (a <= this.state.column - 1) {\r\n                    row[x][a].note = 0;\r\n                    a++;\r\n                  }\r\n                  let type = 1;\r\n                  let error = 0;\r\n                  let measure = row[x][8].measure;\r\n                  this.props.consoleWarningTS(type, measure, error);\r\n                }\r\n              } else {\r\n                row.splice(x, 1);\r\n                this.decrementX(cell);\r\n                return;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.setState({\r\n        x: x,\r\n      });\r\n    } else {\r\n      console.log(\"this is a starting measure\");\r\n    }\r\n  };\r\n  handle2 = (cell, kind, side) => {\r\n    // create barline--------------- passing function with console\r\n    let x = cell.x;\r\n    if (kind === 5) {\r\n      x = side;\r\n    }\r\n    let row = this.state.row;\r\n    console.log(x, row.length);\r\n    if (x === row.length) {\r\n      console.log(\"This is the last row last. Use End Bar line\");\r\n      return;\r\n    }\r\n    if (x === 0 || row[x][0].starting === true) {\r\n      // THIS IS STARTING, CAN'T CLICK\r\n      console.log(\"this is starting measure\");\r\n    } else {\r\n      if (row[x - 1][0].starting === false) {\r\n        if (row[x - 1][0].barline === true) {\r\n          console.log(\r\n            \"error: declaring barline without notes or rest between barlines\"\r\n          );\r\n        } else {\r\n          if (row[x][8].barline === false) {\r\n            //---- switch barline to TRUE\r\n            row[x][8].barline = true;\r\n            let kind = 1;\r\n            console.log(kind);\r\n            this.setState({ row });\r\n            this.findStartingMeasure(x, kind); //  ------  findStartingMeasure => checkingStartingTS => console => setMeasureNum => measureLengthCalc\r\n          } else {\r\n            // ----------------switch barline to FALSE\r\n            row[x][8].barline = false;\r\n            row[x][8].measure = null;\r\n            let kind = 2;\r\n            this.setState({ row });\r\n            this.findStartingMeasure(x, kind); //    ------  findStartingMeasure => checkingStartingTS => toLastNewMeasure => measureLengthCalc\r\n            let rowX;\r\n            this.setMeasureNum(x, rowX, kind);\r\n            let measure = 1;\r\n            for (let a = row.length - 1; a >= 1; a--) {\r\n              console.log(a, row[a][8].measure);\r\n              if (row[a][8].measure !== null) {\r\n                console.log(row[a][8]);\r\n                measure = row[a][8].measure + 1;\r\n                break;\r\n              }\r\n            }\r\n            this.props.recalcuConsoleMeasure(measure);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  setStarting = (cell) => {\r\n    // contain console ---------------------- passing function with console\r\n    let row = this.state.row;\r\n    let x = this.state.currentSelected;\r\n    row[x][0].clef = this.props.clef;\r\n    row[x][0].up = this.props.up;\r\n    row[x][0].down = this.props.down;\r\n    row[x][0].keySig = this.props.keySig;\r\n    //-------FOR TS -----------------------------\r\n    if (row[x][0].up === null || row[x][0].down === null) {\r\n      console.log(\" TS not complete\");\r\n    } else {\r\n      //then\r\n      if (x === 0) {\r\n        row[x + 1][8].measure = 1;\r\n      }\r\n\r\n      let type = 3;\r\n      let error = 4;\r\n      let measure = row[x + 1][8].measure;\r\n      this.props.removeWarning(type, measure, error);\r\n\r\n      this.calcDownUp(x);\r\n      let rowX = x;\r\n      let kind = 1;\r\n      this.measureLengthCalc(x + 1, rowX, kind);\r\n    }\r\n    //-------FOR Clef -----------------------------\r\n    if (row[x][0].Clef === null) {\r\n      console.log(\" clef not complete\");\r\n    } else {\r\n      let type = 4;\r\n      let error = 6;\r\n      let measure = row[x + 1][8].measure;\r\n      this.props.removeWarning(type, measure, error);\r\n      error = 7;\r\n      this.props.removeWarning(type, measure, error);\r\n      type = 5;\r\n      error = 11;\r\n      this.props.removeWarning(type, measure, error);\r\n      let currentSelected = x;\r\n      let kind = 8;\r\n      let mx = null;\r\n      let my = null;\r\n      this.ks2(cell, currentSelected, mx, my, kind);\r\n\r\n      row[x][0].keySig = \"C\";\r\n    }\r\n\r\n    this.setState({ row });\r\n\r\n    for (x = 0; x < row.length - 1; x++) {\r\n      if (row[x][0].starting === true) {\r\n        let clef = row[x][0].clef;\r\n        let up = row[x][0].up;\r\n        let down = row[x][0].down;\r\n\r\n        let keySig = this.state.row[x][0].keySig;\r\n        this.props.runMe(x, clef, up, down, keySig);\r\n      }\r\n    }\r\n  };\r\n  findStartingMeasure = (x, kind) => {\r\n    console.log(x, kind, \"Get Starting Position's X axis\");\r\n    let row = this.state.row;\r\n    let rowX = 0; //  row[X] Position -------------\r\n    for (let i = x; i >= 0; i--) {\r\n      // find Starting\r\n\r\n      if (row[i][0].starting === true) {\r\n        rowX = i;\r\n        break;\r\n      }\r\n    }\r\n    // -------------------------TS-----------------------------------\r\n    if (kind === 1) {\r\n      let kind = 1;\r\n      this.checkingStartingTS(x, rowX, kind);\r\n    }\r\n    if (kind === 2) {\r\n      let kind = 2;\r\n      this.toLastNewMeasure(x, rowX, kind);\r\n      this.measureLengthCalc(x, rowX, kind);\r\n    }\r\n    // -------------------------KS-----------------------------------\r\n    if (kind === 6) {\r\n      let kind = 6;\r\n      this.checkStartingClef(x, rowX, kind);\r\n    }\r\n  };\r\n  //----------------------------------------------------TS----------------------------------------------------------------------------------------\r\n  toLastNewMeasure = (x, rowX, kind) => {\r\n    console.log(\"Get last clicable position's X axis\");\r\n    let row = this.state.row;\r\n\r\n    if (kind === 2) {\r\n      let barCount = 0;\r\n      for (let a = rowX; a <= row.length - 2; a++) {\r\n        if (row[a + 1][0].starting === false) {\r\n          if (row[a + 1][8].barline === true) {\r\n            barCount = barCount + 1;\r\n            console.log(row[a + 1][0].starting);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (barCount === 0) {\r\n        let measure = row[rowX + 1][8].measure;\r\n        let type = 3;\r\n        let error = 4;\r\n        console.log(type, error, measure, row[rowX + 1][8].measure);\r\n\r\n        this.props.removeWarning(type, measure, error);\r\n      }\r\n      console.log(\"barcount =\", barCount);\r\n    }\r\n  };\r\n  checkingStartingTS = (x, rowX, kind) => {\r\n    console.log(x, rowX, \"Get Starting first measure's from left axis\");\r\n    let row = this.state.row;\r\n    if (kind === 1) {\r\n      let bLValrow = row[rowX][0].barLength;\r\n      let measure = row[rowX + 1][8].measure;\r\n      let type = 3;\r\n      let error = 4;\r\n      if (bLValrow === null) {\r\n        // Adding barline without declaring time signature for starting measure\r\n        let kind = 1;\r\n        console.log(type, error, measure, row[rowX + 1][8].measure);\r\n        this.setMeasureNum(x, rowX, kind); // --------------------measure numbers-----------\r\n        let up = row[rowX][0].up;\r\n        let down = row[rowX][0].down;\r\n        let barLength = row[rowX][0].barLength;\r\n        let totalNoteValue = row[rowX][0].totalNoteValue;\r\n        this.props.consoleWarningTS(\r\n          type,\r\n          measure,\r\n          error,\r\n          up,\r\n          down,\r\n          barLength,\r\n          totalNoteValue\r\n        );\r\n      } else {\r\n        // -----------------------if Up and Down are not Null\r\n        let kind = 1;\r\n        this.setMeasureNum(x, rowX, kind); // --------------------measure numbers-----------\r\n        console.log(\"hhh\");\r\n        this.measureLengthCalc(x, rowX, kind); //--------  proceed checking left and right measure\r\n      }\r\n    }\r\n    if (kind === 2) {\r\n      console.log(\"remove\");\r\n    }\r\n  };\r\n  setMeasureNum = (x, rowX, kind) => {\r\n    // set Measure Number\r\n    console.log(x, rowX, kind, \"Measure number or address\");\r\n    let row = this.state.row;\r\n    let measure = 1;\r\n    let kindHandler = 1;\r\n    if (kind === 3) {\r\n      kindHandler = 2;\r\n    }\r\n    for (let a = x - kindHandler; a >= 0; a--) {\r\n      if (a !== 0) {\r\n        if (row[a - 1][0].starting === true) {\r\n          measure = row[a][8].measure;\r\n          break;\r\n        }\r\n        if (row[a][8].barline === true) {\r\n          measure = row[a][8].measure;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (kind === 1) {\r\n      row[x][8].measure = measure + 1; // ------declare current measure number\r\n      measure = measure + 1;\r\n    }\r\n\r\n    if (kind === 3) {\r\n      measure = row[x][8].measure;\r\n    }\r\n\r\n    for (let b = x + 1; b <= row.length - 1; b++) {\r\n      if (row[b][0].starting === true) {\r\n        console.log(row[b + 1][8]);\r\n        row[b + 1][8].measure = measure + 1;\r\n        measure = measure + 1;\r\n        continue;\r\n      }\r\n\r\n      if (row[b][8].barline === true) {\r\n        row[b][8].measure = measure + 1;\r\n        measure = measure + 1;\r\n        continue;\r\n      }\r\n    }\r\n  };\r\n  measureLengthCalc = (x, rowX, kind) => {\r\n    // ------- get measure length   --- if kind 1, get measure length of left measure and right measure\r\n\r\n    let row = this.state.row;\r\n    let starting = x - 1;\r\n    let barLength = 0;\r\n    let newX = 1;\r\n    let measure = 1;\r\n    let loop = 1;\r\n    let up = null;\r\n    let down = null;\r\n\r\n    barLength = row[rowX][0].barLength;\r\n    up = row[rowX][0].up;\r\n    down = row[rowX][0].down;\r\n    if (kind === 1) {\r\n      // if kind 1, need to do 2 loops\r\n      loop = row.length;\r\n    }\r\n    if (kind === 2) {\r\n      // if kind 1, need to do 2 loops\r\n      loop = row.length;\r\n    }\r\n\r\n    console.log(loop);\r\n    for (let l = 1; l <= loop; l++) {\r\n      // this is the loop       ------------ LOOP ------------\r\n\r\n      for (let n = starting; n >= 0; n--) {\r\n        // set the barLength\r\n        if (row[n][0].starting === true) {\r\n          barLength = row[n][0].barLength;\r\n          break;\r\n        }\r\n      }\r\n      console.log(\"loop number=\", l, \"Bar Length=\", barLength);\r\n      for (let n = starting; n >= 0; n--) {\r\n        // set the Strting POINT (newX) and measure   --- or The 1st column in  measure\r\n        if (row[n][0].starting === true) {\r\n          newX = n + 1;\r\n          measure = row[n + 1][8].measure;\r\n          break;\r\n        }\r\n        if (row[n][8].barline === true) {\r\n          newX = n;\r\n          measure = row[n][8].measure;\r\n          break;\r\n        }\r\n      }\r\n\r\n      //--------------------------------------------------\r\n      let ret = false;\r\n      let noteValue = [0]; // added Zero for reduce()\r\n      let nS = 0;\r\n      let nM = 0;\r\n      let nBL = barLength;\r\n\r\n      for (let b = newX; b <= row.length - 1; b++) {\r\n        if (row[b][0].starting === true) {\r\n          // break to the starting measure or a bar line\r\n\r\n          nS = b + 1;\r\n          nM = row[b + 1][8].measure;\r\n          console.log(row[b][0].barLength);\r\n          console.log(row[b][8], newX);\r\n          nBL = row[b][0].barLength;\r\n          if (row[b][0].barLength === null) {\r\n            // if the next starting measure's Time Siganture is NULL consoleWarn\r\n            for (let c = b; c <= row.length; c++) {\r\n              let type = 3;\r\n              let error = 4;\r\n              let measure = row[c][0].measure;\r\n              let up = row[c][0].up;\r\n              let barLength = row[c][0].barLength;\r\n              let down = row[c][0].down;\r\n              let totalNoteValue = row[rowX][0].totalNoteValue;\r\n              console.log(measure);\r\n              if (row[c][0].starting === true) {\r\n                this.props.consoleWarningTS(\r\n                  type,\r\n                  measure,\r\n                  error,\r\n                  up,\r\n                  down,\r\n                  barLength,\r\n                  totalNoteValue\r\n                );\r\n              } else {\r\n                b = c;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n        if (row[b][8].barline === true) {\r\n          nS = b;\r\n          nM = row[b][8].measure;\r\n          console.log(row[b][8], newX);\r\n          if (b !== newX) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (row[b][0].note === 1) {\r\n          noteValue.push(4);\r\n        }\r\n        if (row[b][0].note === 2) {\r\n          noteValue.push(2);\r\n        }\r\n        if (row[b][0].note === 4) {\r\n          noteValue.push(1);\r\n        }\r\n\r\n        if (b === row.length - 1) {\r\n          ret = true;\r\n        }\r\n      }\r\n      let totalNoteValue = noteValue.reduce((accumulator, currentValue) => {\r\n        return accumulator + currentValue;\r\n      });\r\n\r\n      console.log(measure, barLength, \"vs\", totalNoteValue);\r\n      // -------------------------\r\n\r\n      let type = 1;\r\n      console.log(barLength, totalNoteValue, kind);\r\n      if (barLength === null) {\r\n        starting = nS;\r\n        measure = nM;\r\n        barLength = nBL;\r\n        console.log(starting, measure, barLength);\r\n        if (ret === true) {\r\n          console.log(\"Done\");\r\n          return;\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (barLength > totalNoteValue) {\r\n        let error = 1;\r\n        this.props.consoleWarningTS(\r\n          type,\r\n          measure,\r\n          error,\r\n          up,\r\n          down,\r\n          barLength,\r\n          totalNoteValue\r\n        );\r\n        console.log(\"kulang\");\r\n      }\r\n      if (barLength < totalNoteValue) {\r\n        let error = 2;\r\n        this.props.consoleWarningTS(\r\n          type,\r\n          measure,\r\n          error,\r\n          up,\r\n          down,\r\n          barLength,\r\n          totalNoteValue\r\n        );\r\n        console.log(\"sobra\");\r\n      }\r\n      if (barLength === totalNoteValue) {\r\n        console.log(\"chakto\");\r\n        this.props.removeWarning(type, measure);\r\n      }\r\n\r\n      // measure = nextMeasure\r\n      // barLength = nextBarLength\r\n      starting = nS;\r\n      measure = nM;\r\n      barLength = nBL;\r\n      console.log(starting, measure, barLength);\r\n      if (ret === true) {\r\n        console.log(\"Done\");\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  calcDownUp = (x) => {\r\n    let row = this.state.row;\r\n    let up = this.props.up;\r\n    let down = this.props.down;\r\n    let calcDown = 0;\r\n    let c = 4;\r\n    let i = 0;\r\n\r\n    while (calcDown !== 4 || i < 7) {\r\n      //current note value should be 4 && do while for 7 times only, limit to 7\r\n      calcDown = c * down;\r\n      if (calcDown !== 4) {\r\n        c = c / 2;\r\n      } else {\r\n        break;\r\n      }\r\n      i++;\r\n    }\r\n    let barLength = c * up;\r\n\r\n    row[x][0].barLength = barLength;\r\n    this.setState({ row });\r\n  };\r\n  valuePerMeasureCalc = (cell, h, x, m) => {\r\n    // contain console\r\n    console.log(\"valuePerMeasureCalc\", cell, h, x, m);\r\n    let row = this.state.row;\r\n    let currentX = 0;\r\n    let starting = 0;\r\n    let barline = 1;\r\n    let startingMeasure = 0; //--- THIS IS THE MEASURE\r\n\r\n    for (let i = currentX; i >= 1; i--) {\r\n      // find Starting Measure\r\n      if (row[i][0].starting === false) {\r\n        if (row[i][8].barline === true) {\r\n          // if found...\r\n          barline = i;\r\n          break;\r\n        } else {\r\n          continue;\r\n        }\r\n      } else {\r\n        barline = i + 1;\r\n        break;\r\n      }\r\n    }\r\n    startingMeasure = row[barline][8].measure;\r\n    let measure = startingMeasure;\r\n\r\n    console.log(m);\r\n\r\n    //------------------------------------------------------------------------------------------------------------\r\n    let noteValue = [0]; // added Zero for reduce()\r\n    for (\r\n      let i = barline;\r\n      i <= row.length - 1 ||\r\n      row[i - 1][0].starting === true ||\r\n      row[i - 1][8].barline === true;\r\n      i++\r\n    ) {\r\n      // find end of Measure\r\n      console.log(barline, measure);\r\n      if (row[i][0].starting === false) {\r\n        if (row[i][8].barline === false) {\r\n          if (row[i][0].note === 1) {\r\n            console.log(\"pushed 4\");\r\n            noteValue.push(4);\r\n          }\r\n          if (row[i][0].note === 2) {\r\n            console.log(\"pushed 2\");\r\n            noteValue.push(2);\r\n          }\r\n          if (row[i][0].note === 4) {\r\n            console.log(\"pushed 1\");\r\n            noteValue.push(1);\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    console.log(noteValue);\r\n    let barLength = row[starting][0].barLength;\r\n    let totalNoteValue = noteValue.reduce((accumulator, currentValue) => {\r\n      return accumulator + currentValue;\r\n    });\r\n    console.log(startingMeasure, barLength, \"vs\", totalNoteValue);\r\n    let type = 1;\r\n    let up = row[starting][0].up;\r\n    let down = row[starting][0].down;\r\n    if (barLength > totalNoteValue) {\r\n      let error = 1;\r\n      this.props.consoleWarningTS(type, measure, error, up, down);\r\n      console.log(\"kulang\");\r\n      return;\r\n    }\r\n    if (barLength < totalNoteValue) {\r\n      let error = 2;\r\n      this.props.consoleWarningTS(type, measure, error, up, down);\r\n      console.log(\"sobra\");\r\n      return;\r\n    }\r\n    if (barLength === totalNoteValue) {\r\n      console.log(h, m);\r\n\r\n      console.log(\"chakto\");\r\n      this.props.removeWarning(type, measure, up, down);\r\n      return;\r\n    }\r\n    console.log(\r\n      currentX,\r\n      starting,\r\n      barline,\r\n      barLength,\r\n      totalNoteValue,\r\n      startingMeasure\r\n    );\r\n  };\r\n  //----------------------------------------------------Clef--------------------------------------------------------------------------------------\r\n\r\n  checkStartingClef = (x, rowX, kind) => {\r\n    let row = this.state.row;\r\n    let a = null;\r\n    if (kind === 6) {\r\n      a = rowX;\r\n    }\r\n    if (kind === 7) {\r\n      a = x;\r\n    }\r\n    console.log(row[a][0]);\r\n    if (row[a][0].clef === null) {\r\n      let type = 4;\r\n      let measure = row[a + 1][8].measure;\r\n      let error = 6;\r\n      this.props.consoleWarningClef(type, measure, error);\r\n    } else {\r\n      this.measureLengthCalc(x, rowX, kind);\r\n    }\r\n  };\r\n\r\n  aaa = () => {\r\n    console.log(\"hit\");\r\n  };\r\n\r\n  //----------------------------------------------------------------------------------------------------------------------------------------------\r\n  componentDidMount() {\r\n    this.createMeasureRow();\r\n    this.createRow();\r\n    this.measure1();\r\n    this.props.insertStartingMeasure(this.insertStartingMeasure);\r\n    this.props.setStarting(this.setStarting);\r\n    this.props.removeStartingMeasure(this.removeStartingMeasure);\r\n  }\r\n\r\n  measure1() {\r\n    let row = this.state.row;\r\n    row[1][8].measure = 1;\r\n    this.setState({ row });\r\n  }\r\n\r\n  //-----------------------------RENDER HERE------------------------------------\r\n  render() {\r\n    let rows = this.state.row.map((row, index) => {\r\n      return (\r\n        <Row\r\n          cells={row}\r\n          key={index}\r\n          click={this.click}\r\n          clickLeft={this.clickLeft}\r\n          clickRight={this.clickRight}\r\n          ks1={this.ks1}\r\n          ks2={this.ks2}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"row\">\r\n        <div>\r\n          <Timer\r\n            row={this.state.row}\r\n            column={this.state.column}\r\n            tempo={this.props.tempo}\r\n            timeSig={this.props.timeSig}\r\n            currentSelected={this.state.currentSelected}\r\n            startPauseSwitch={this.props.startPauseSwitch}\r\n            clockStop={this.props.clockStop}\r\n            volume={this.props.volume}\r\n            playerIcon={this.props.playerIcon}\r\n            consoleWarningClef={this.props.consoleWarningClef}\r\n            metronome={this.props.metronome}\r\n            aaa={this.aaa}\r\n          />\r\n        </div>\r\n\r\n        {rows}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}