{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\containers\\\\Inbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { getConvoList } from \"../features/convoSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Inbox() {\n  _s();\n\n  const dispatch = useDispatch();\n  const convos = useSelector(state => state.convo.convos);\n  const {\n    token,\n    userId,\n    first_name,\n    last_name\n  } = useSelector(state => state.auth);\n  const [currentConvo, setCurrentConvo] = React.useState(null); //dummy data\n  //\n\n  useEffect(() => {\n    dispatch(getConvoList(token, userId));\n  }, [userId, token, dispatch]); // const convos = [...new Set(messages.map((item) => item.receiver))];\n  // const names = [...new Set(messages.map((item) => item.receiver_name))].filter(\n  //   (item) => item !== `${first_name} ${last_name}`\n  // );\n  // const renderConvos = (user1, user2) => {\n  //   if()\n  // }\n\n  const openConvo = convo => {\n    console.log(convo);\n    setCurrentConvo(convo);\n  };\n\n  console.log(convos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inbox__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inbox__senders\",\n        children: convos === null || convos === void 0 ? void 0 : convos.map(item => userId === item.user1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openConvo(item),\n          className: \"convo__partner\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: item.user2_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openConvo(item),\n          className: \"convo__partner\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: item.user1_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inbox__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox__head\",\n          children: userId === (currentConvo === null || currentConvo === void 0 ? void 0 : currentConvo.user1) ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: currentConvo === null || currentConvo === void 0 ? void 0 : currentConvo.user2_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: currentConvo === null || currentConvo === void 0 ? void 0 : currentConvo.user1_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox__body\",\n          children: currentConvo !== null && (currentConvo === null || currentConvo === void 0 ? void 0 : currentConvo.messages.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: item.user === userId ? \"inbox__message self\" : \"inbox__message\",\n            children: userId !== item.user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: `${process.env.REACT_APP_AXIOS_URL}${item.avatar}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this), item.message]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [item.message, /*#__PURE__*/_jsxDEV(Avatar, {\n                src: `${process.env.REACT_APP_AXIOS_URL}${item.avatar}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox__newMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Inbox, \"8Z2ccgaae1jzYyfzLazRGSupSm8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Inbox;\nexport default Inbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/containers/Inbox.js"],"names":["React","useEffect","getConvoList","useSelector","useDispatch","Typography","Avatar","Inbox","dispatch","convos","state","convo","token","userId","first_name","last_name","auth","currentConvo","setCurrentConvo","useState","openConvo","console","log","map","item","user1","user2_name","id","user1_name","messages","user","process","env","REACT_APP_AXIOS_URL","avatar","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getConvoList } from \"../features/convoSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nfunction Inbox() {\r\n  const dispatch = useDispatch();\r\n  const convos = useSelector((state) => state.convo.convos);\r\n  const { token, userId, first_name, last_name } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n  const [currentConvo, setCurrentConvo] = React.useState(null);\r\n  //dummy data\r\n  //\r\n\r\n  useEffect(() => {\r\n    dispatch(getConvoList(token, userId));\r\n  }, [userId, token, dispatch]);\r\n\r\n  // const convos = [...new Set(messages.map((item) => item.receiver))];\r\n  // const names = [...new Set(messages.map((item) => item.receiver_name))].filter(\r\n  //   (item) => item !== `${first_name} ${last_name}`\r\n  // );\r\n  // const renderConvos = (user1, user2) => {\r\n  //   if()\r\n  // }\r\n\r\n  const openConvo = (convo) => {\r\n    console.log(convo);\r\n    setCurrentConvo(convo);\r\n  };\r\n\r\n  console.log(convos);\r\n  return (\r\n    <div className=\"inbox\">\r\n      <div className=\"inbox__container\">\r\n        <div className=\"inbox__senders\">\r\n          {convos?.map((item) =>\r\n            userId === item.user1 ? (\r\n              <div\r\n                key={item.id}\r\n                onClick={() => openConvo(item)}\r\n                className=\"convo__partner\"\r\n              >\r\n                <Typography variant=\"subtitle2\">{item.user2_name}</Typography>\r\n              </div>\r\n            ) : (\r\n              <div\r\n                key={item.id}\r\n                onClick={() => openConvo(item)}\r\n                className=\"convo__partner\"\r\n              >\r\n                <Typography variant=\"subtitle2\">{item.user1_name}</Typography>\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className=\"inbox__content\">\r\n          <div className=\"inbox__head\">\r\n            {userId === currentConvo?.user1 ? (\r\n              <Typography variant=\"h6\">{currentConvo?.user2_name}</Typography>\r\n            ) : (\r\n              <Typography variant=\"h6\">{currentConvo?.user1_name}</Typography>\r\n            )}\r\n          </div>\r\n          <div className=\"inbox__body\">\r\n            {currentConvo !== null &&\r\n              currentConvo?.messages.map((item) => (\r\n                <div\r\n                  className={\r\n                    item.user === userId\r\n                      ? \"inbox__message self\"\r\n                      : \"inbox__message\"\r\n                  }\r\n                >\r\n                  {userId !== item.user ? (\r\n                    <>\r\n                      <Avatar\r\n                        src={`${process.env.REACT_APP_AXIOS_URL}${item.avatar}`}\r\n                      ></Avatar>\r\n                      {item.message}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      {item.message}\r\n                      <Avatar\r\n                        src={`${process.env.REACT_APP_AXIOS_URL}${item.avatar}`}\r\n                      ></Avatar>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div className=\"inbox__newMessage\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inbox;\r\n"]},"metadata":{},"sourceType":"module"}