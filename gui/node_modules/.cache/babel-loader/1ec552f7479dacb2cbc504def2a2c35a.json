{"ast":null,"code":"import { createSlice } from \"react-redux\";\nimport axios from \"axios\";\nexport const quizSlice = createSlice({\n  name: \"quiz\",\n  initialState: {\n    quizzes: [],\n    quizDetail: {},\n    loading: false,\n    error: null\n  },\n  reducers: {\n    getQuizzesStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getQuizzesSuccess: (state, action) => {\n      state.quizzes = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getQuizzesFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    getQuizDetailStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getQuizDetailSuccess: (state, action) => {\n      state.quizDetail = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getQuizDetailFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  getQuizzesFail,\n  getQuizzesStart,\n  getQuizzesSuccess,\n  getQuizDetailStart,\n  getQuizDetailFail,\n  getQuizDetailSuccess\n} = quizSlice.actions;\nexport const getQuizzes = token => {\n  return dispatch => {\n    dispatch(getQuizzesStart());\n    console.log(\"getQuizzes======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`http://127.0.0.1:8000/api/quizzes`).then(res => {\n      dispatch(getQuizzesSuccess(res.data));\n    }).catch(err => {\n      dispatch(getQuizzesFail(err.message));\n    });\n  };\n};\nexport const getQuizDetail = (token, id) => {\n  return dispatch => {\n    dispatch(getQuizDetailStart());\n    console.log(\"getQuizDetail======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`http://127.0.0.1:8000/api/quizzes/${id}`).then(res => {\n      dispatch(getQuizDetailSuccess(res.data));\n    }).catch(err => {\n      dispatch(getQuizDetailFail(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/features/quizSlice.js"],"names":["createSlice","axios","quizSlice","name","initialState","quizzes","quizDetail","loading","error","reducers","getQuizzesStart","state","getQuizzesSuccess","action","payload","getQuizzesFail","getQuizDetailStart","getQuizDetailSuccess","getQuizDetailFail","actions","getQuizzes","token","dispatch","console","log","defaults","headers","Authorization","get","then","res","data","catch","err","message","getQuizDetail","id"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;AACnCG,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,EADG;AAEZC,IAAAA,UAAU,EAAE,EAFA;AAGZC,IAAAA,OAAO,EAAE,KAHG;AAIZC,IAAAA,KAAK,EAAE;AAJK,GAFqB;AAQnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAGC,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAJO;AAKRI,IAAAA,iBAAiB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACpCF,MAAAA,KAAK,CAACN,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KATO;AAURO,IAAAA,cAAc,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACjCF,MAAAA,KAAK,CAACH,KAAN,GAAcK,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD,KAbO;AAcRS,IAAAA,kBAAkB,EAAGL,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAjBO;AAkBRS,IAAAA,oBAAoB,EAAE,CAACN,KAAD,EAAQE,MAAR,KAAmB;AACvCF,MAAAA,KAAK,CAACL,UAAN,GAAmBO,MAAM,CAACC,OAA1B;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAtBO;AAuBRU,IAAAA,iBAAiB,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAmB;AACpCF,MAAAA,KAAK,CAACH,KAAN,GAAcK,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD;AA1BO;AARyB,CAAD,CAA7B;AAsCP,OAAO,MAAM;AACXQ,EAAAA,cADW;AAEXL,EAAAA,eAFW;AAGXE,EAAAA,iBAHW;AAIXI,EAAAA,kBAJW;AAKXE,EAAAA,iBALW;AAMXD,EAAAA;AANW,IAOTf,SAAS,CAACiB,OAPP;AASP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACZ,eAAe,EAAhB,CAAR;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAvB,IAAAA,KAAK,CAACwB,QAAN,CAAeC,OAAf,GAAyB;AACvB,sBAAgB,kBADO;AAEvBC,MAAAA,aAAa,EAAG,SAAQN,KAAM;AAFP,KAAzB;AAIApB,IAAAA,KAAK,CACF2B,GADH,CACQ,mCADR,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbR,MAAAA,QAAQ,CAACV,iBAAiB,CAACkB,GAAG,CAACC,IAAL,CAAlB,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAACP,cAAc,CAACkB,GAAG,CAACC,OAAL,CAAf,CAAR;AACD,KAPH;AAQD,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,aAAa,GAAG,CAACd,KAAD,EAAQe,EAAR,KAAe;AAC1C,SAAQd,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAvB,IAAAA,KAAK,CAACwB,QAAN,CAAeC,OAAf,GAAyB;AACvB,sBAAgB,kBADO;AAEvBC,MAAAA,aAAa,EAAG,SAAQN,KAAM;AAFP,KAAzB;AAIApB,IAAAA,KAAK,CACF2B,GADH,CACQ,qCAAoCQ,EAAG,EAD/C,EAEGP,IAFH,CAESC,GAAD,IAAS;AACbR,MAAAA,QAAQ,CAACL,oBAAoB,CAACa,GAAG,CAACC,IAAL,CAArB,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAACJ,iBAAiB,CAACe,GAAG,CAACC,OAAL,CAAlB,CAAR;AACD,KAPH;AAQD,GAfD;AAgBD,CAjBM","sourcesContent":["import { createSlice } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nexport const quizSlice = createSlice({\r\n  name: \"quiz\",\r\n  initialState: {\r\n    quizzes: [],\r\n    quizDetail: {},\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    getQuizzesStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getQuizzesSuccess: (state, action) => {\r\n      state.quizzes = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getQuizzesFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    getQuizDetailStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getQuizDetailSuccess: (state, action) => {\r\n      state.quizDetail = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getQuizDetailFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getQuizzesFail,\r\n  getQuizzesStart,\r\n  getQuizzesSuccess,\r\n  getQuizDetailStart,\r\n  getQuizDetailFail,\r\n  getQuizDetailSuccess,\r\n} = quizSlice.actions;\r\n\r\nexport const getQuizzes = (token) => {\r\n  return (dispatch) => {\r\n    dispatch(getQuizzesStart());\r\n    console.log(\"getQuizzes======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/quizzes`)\r\n      .then((res) => {\r\n        dispatch(getQuizzesSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getQuizzesFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getQuizDetail = (token, id) => {\r\n  return (dispatch) => {\r\n    dispatch(getQuizDetailStart());\r\n    console.log(\"getQuizDetail======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/quizzes/${id}`)\r\n      .then((res) => {\r\n        dispatch(getQuizDetailSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getQuizDetailFail(err.message));\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}