{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\components\\\\CreateMessage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { getUserList } from \"../features/userSlice\";\nimport { FormControl, IconButton, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateMessage() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const {\n    token,\n    userId\n  } = useSelector(state => state.auth);\n  const userList = useSelector(state => state.user.users);\n  const [receiver, setReceiver] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const dispatch = useDispatch();\n\n  const handlePost = () => {\n    const formData = new FormData();\n    dispatch(createAnnouncement(token, formData));\n    dispatch(getAnnouncementList(token));\n    setOpen(false);\n  };\n\n  const handleContent = e => {\n    setContent(e.target.value);\n  };\n\n  const handleChangeReceiver = e => {\n    setReceiver(e.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getUserList(token));\n  }, [dispatch, token]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleClickOpen,\n      children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Messaging\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Send a Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"select-outlined-label\",\n            children: \"Grade Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            color: \"primary\",\n            labelId: \"select-outlined-label\",\n            id: \"select-outlined\",\n            value: userList,\n            onChange: handleChangeReceiver,\n            label: \"Grade Level\",\n            children: userList === null || userList === void 0 ? void 0 : userList.map(user => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: user.id,\n                children: user.full_name\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          id: \"content\",\n          label: \"Content\",\n          type: \"text\",\n          onChange: handleContent,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePost,\n          color: \"primary\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateMessage, \"BwqHzhQ+Y0dF9wZNe1b1BQkM1Go=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CreateMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMessage\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/components/CreateMessage.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useSelector","useDispatch","SendIcon","getUserList","FormControl","IconButton","InputLabel","MenuItem","Select","CreateMessage","open","setOpen","useState","token","userId","state","auth","userList","user","users","receiver","setReceiver","content","setContent","dispatch","handlePost","formData","FormData","createAnnouncement","getAnnouncementList","handleContent","e","target","value","handleChangeReceiver","handleClickOpen","handleClose","useEffect","map","id","full_name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,MALF,QAMO,mBANP;;;AAQA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAArC;AACA,QAAMC,QAAQ,GAAGjB,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACG,IAAN,CAAWC,KAAvB,CAA5B;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B7B,KAAK,CAACoB,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwB/B,KAAK,CAACoB,QAAN,CAAe,EAAf,CAA9B;AACA,QAAMY,QAAQ,GAAGvB,WAAW,EAA5B;;AAEA,QAAMwB,UAAU,GAAG,MAAM;AACvB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAH,IAAAA,QAAQ,CAACI,kBAAkB,CAACf,KAAD,EAAQa,QAAR,CAAnB,CAAR;AACAF,IAAAA,QAAQ,CAACK,mBAAmB,CAAChB,KAAD,CAApB,CAAR;AAEAF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAPD;;AASA,QAAMmB,aAAa,GAAIC,CAAD,IAAO;AAC3BR,IAAAA,UAAU,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,CAAD,IAAO;AAClCV,IAAAA,WAAW,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,QAAME,eAAe,GAAG,MAAM;AAC5BxB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMyB,WAAW,GAAG,MAAM;AACxBzB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA0B,EAAAA,SAAS,CAAC,MAAM;AACdb,IAAAA,QAAQ,CAACrB,WAAW,CAACU,KAAD,CAAZ,CAAR;AACD,GAFQ,EAEN,CAACW,QAAD,EAAWX,KAAX,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEsB,eAArB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEzB,IADR;AAEE,MAAA,OAAO,EAAE0B,WAFX;AAGE,yBAAgB,mBAHlB;AAAA,8BAKE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,aAAD;AAAA,gCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAC,UAArB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,KAAK,EAAC,SADR;AAEE,YAAA,OAAO,EAAC,uBAFV;AAGE,YAAA,EAAE,EAAC,iBAHL;AAIE,YAAA,KAAK,EAAEnB,QAJT;AAKE,YAAA,QAAQ,EAAEiB,oBALZ;AAME,YAAA,KAAK,EAAC,aANR;AAAA,sBAQGjB,QARH,aAQGA,QARH,uBAQGA,QAAQ,CAAEqB,GAAV,CAAepB,IAAD,IAAU;AACvB,kCACE,QAAC,QAAD;AAAwB,gBAAA,KAAK,EAAEA,IAAI,CAACqB,EAApC;AAAA,0BACGrB,IAAI,CAACsB;AADR,iBAAetB,IAAI,CAACqB,EAApB;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,aANA;AARH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAqBE,QAAC,SAAD;AACE,UAAA,MAAM,EAAC,OADT;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,KAAK,EAAC,SAHR;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,QAAQ,EAAET,aALZ;AAME,UAAA,SAAS;AANX;AAAA;AAAA;AAAA;AAAA,gBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAoCE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEM,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEX,UAAjB;AAA6B,UAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAoDD;;GAzFuBhB,a;UAEIT,W,EACTA,W,EAIAC,W;;;KAPKQ,a","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { getUserList } from \"../features/userSlice\";\r\nimport {\r\n  FormControl,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function CreateMessage() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const { token, userId } = useSelector((state) => state.auth);\r\n  const userList = useSelector((state) => state.user.users);\r\n\r\n  const [receiver, setReceiver] = React.useState(\"\");\r\n  const [content, setContent] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePost = () => {\r\n    const formData = new FormData();\r\n\r\n    dispatch(createAnnouncement(token, formData));\r\n    dispatch(getAnnouncementList(token));\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleContent = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const handleChangeReceiver = (e) => {\r\n    setReceiver(e.target.value);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList(token));\r\n  }, [dispatch, token]);\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleClickOpen}>\r\n        <SendIcon />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Messaging</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Send a Message</DialogContentText>\r\n          <FormControl variant=\"outlined\">\r\n            <InputLabel id=\"select-outlined-label\">Grade Level</InputLabel>\r\n            <Select\r\n              color=\"primary\"\r\n              labelId=\"select-outlined-label\"\r\n              id=\"select-outlined\"\r\n              value={userList}\r\n              onChange={handleChangeReceiver}\r\n              label=\"Grade Level\"\r\n            >\r\n              {userList?.map((user) => {\r\n                return (\r\n                  <MenuItem key={user.id} value={user.id}>\r\n                    {user.full_name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"content\"\r\n            label=\"Content\"\r\n            type=\"text\"\r\n            onChange={handleContent}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handlePost} color=\"primary\">\r\n            Send\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}