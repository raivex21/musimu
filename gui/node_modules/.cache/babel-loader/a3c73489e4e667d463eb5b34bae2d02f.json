{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\components\\\\MessageBoard.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, TextField, Typography } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getBoardMessages, createBoardMessage } from \"../features/boardSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MessageBoard(props) {\n  _s();\n\n  var _boardMessages$messag;\n\n  const dispatch = useDispatch();\n  const {\n    boardMessages,\n    error\n  } = useSelector(state => state.board);\n  const {\n    token,\n    userId\n  } = useSelector(state => state.auth);\n  const [seconds, setSeconds] = React.useState(0);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  console.log(boardMessages);\n  console.log(props.id);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds + 1);\n      dispatch(getBoardMessages(token, props.id));\n    }, 10000);\n    dispatch(getBoardMessages(token, props.id));\n    return () => clearInterval(interval);\n  }, [token, dispatch, props.id]);\n\n  const changeMessage = e => {\n    setNewMessage(e.target.value);\n  };\n\n  const sendMessage = () => {\n    const formData = {\n      message: newMessage,\n      user: userId,\n      board: props.id\n    };\n    dispatch(createBoardMessage(token, formData, props.id));\n    setNewMessage(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: error !== null && boardMessages.id === props.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageBoard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageBoard__header\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          children: [boardMessages.classroom_name, \" Message Board\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageBoard__body\",\n        children: (_boardMessages$messag = boardMessages.messages) === null || _boardMessages$messag === void 0 ? void 0 : _boardMessages$messag.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageBoard__message\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: `${process.env.REACT_APP_AXIOS_URL}${message.avatar}`,\n            children: \"J\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messageBoard__sender\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              children: message.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: message.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messageBoard__container\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: message.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageBoard__send\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: newMessage,\n          onChange: changeMessage,\n          placeholder: \"SEND MESSAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n\n_s(MessageBoard, \"6Y5JZrxOR6ZZuysXVhvhHhG2jP4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MessageBoard;\nexport default MessageBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageBoard\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/components/MessageBoard.js"],"names":["Avatar","TextField","Typography","React","useEffect","useSelector","useDispatch","getBoardMessages","createBoardMessage","MessageBoard","props","dispatch","boardMessages","error","state","board","token","userId","auth","seconds","setSeconds","useState","newMessage","setNewMessage","console","log","id","interval","setInterval","clearInterval","changeMessage","e","target","value","sendMessage","formData","message","user","classroom_name","messages","map","process","env","REACT_APP_AXIOS_URL","avatar","user_name","timestamp"],"mappings":"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","sourcesContent":["import { Avatar, TextField, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getBoardMessages, createBoardMessage } from \"../features/boardSlice\";\r\n\r\nfunction MessageBoard(props) {\r\n  const dispatch = useDispatch();\r\n  const { boardMessages, error } = useSelector((state) => state.board);\r\n  const { token, userId } = useSelector((state) => state.auth);\r\n  const [seconds, setSeconds] = React.useState(0);\r\n  const [newMessage, setNewMessage] = React.useState(\"\");\r\n\r\n  console.log(boardMessages);\r\n  console.log(props.id);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds((seconds) => seconds + 1);\r\n      dispatch(getBoardMessages(token, props.id));\r\n    }, 10000);\r\n    dispatch(getBoardMessages(token, props.id));\r\n    return () => clearInterval(interval);\r\n  }, [token, dispatch, props.id]);\r\n\r\n  const changeMessage = (e) => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n  const sendMessage = () => {\r\n    const formData = {\r\n      message: newMessage,\r\n      user: userId,\r\n      board: props.id,\r\n    };\r\n    dispatch(createBoardMessage(token, formData, props.id));\r\n    setNewMessage(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      {error !== null && boardMessages.id === props.id ? (\r\n        <div className=\"messageBoard\">\r\n          <div className=\"messageBoard__header\">\r\n            <Typography variant=\"subtitle2\">\r\n              {boardMessages.classroom_name} Message Board\r\n            </Typography>\r\n          </div>\r\n          <div className=\"messageBoard__body\">\r\n            {boardMessages.messages?.map((message) => (\r\n              <div key={message.id} className=\"messageBoard__message\">\r\n                <Avatar\r\n                  src={`${process.env.REACT_APP_AXIOS_URL}${message.avatar}`}\r\n                >\r\n                  J\r\n                </Avatar>\r\n                <div className=\"messageBoard__sender\">\r\n                  <Typography variant=\"subtitle2\">\r\n                    {message.user_name}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\">{message.timestamp}</Typography>\r\n                  <div className=\"messageBoard__container\">\r\n                    <Typography variant=\"body2\">{message.message}</Typography>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"messageBoard__send\">\r\n            <input\r\n              value={newMessage}\r\n              onChange={changeMessage}\r\n              placeholder=\"SEND MESSAGE\"\r\n            />\r\n            <button onClick={sendMessage}>Send</button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MessageBoard;\r\n"]},"metadata":{},"sourceType":"module"}