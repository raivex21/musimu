{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Desktop\\\\THESIS\\\\musimu\\\\gui\\\\src\\\\simulator\\\\Board.js\";\nimport React, { Component } from 'react';\nimport Row from \"./Row\";\nimport Timer from \"./Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ks1 = (cell, xValue, mx, my) => {\n      if (this.props.handle === 0) {\n        let currentSelected = xValue;\n        let row = this.state.row;\n        row[currentSelected][0].accidental = this.props.accidental;\n        this.setState({\n          row\n        });\n        this.ks2(cell, currentSelected, mx, my);\n      }\n    };\n\n    this.ks2 = (cell, currentSelected, mx, my, kind) => {\n      let type = 5;\n      let row = this.state.row;\n      console.log(row[currentSelected][0]);\n\n      if (this.props.handle === 0) {\n        if (kind === undefined) {\n          if (row[currentSelected][0].starting !== true) {\n            return;\n          } // --------------debuged--------------------\n          //all y in x ---- means -----  check column\n\n\n          if (row[currentSelected][0].accLocation[mx][my].my === false) {\n            row[currentSelected][0].accLocation[mx][my].my = true;\n            row[currentSelected][0].accLocation[mx][my].acc = row[currentSelected][0].accidental;\n            row[currentSelected][0].accLocation[mx][11].my = true;\n          } else {\n            let a = 0;\n            let current = [];\n\n            while (a < 9) {\n              if (row[currentSelected][0].accLocation[mx][a].my === true && my !== a) {\n                current.push(a);\n              }\n\n              a++;\n\n              if (a === 9) {\n                a = 0;\n                break;\n              }\n            }\n\n            let b = 0;\n            let currentNext = [];\n\n            if (mx !== 6) {\n              while (b < 9) {\n                if (row[currentSelected][0].accLocation[mx + 1][b].my === true) {\n                  currentNext.push(b);\n                }\n\n                b++;\n              }\n            }\n\n            if (mx === 6) {\n              row[currentSelected][0].accLocation[6][my].my = false;\n              console.log(\"a\");\n            }\n\n            if (current.length === 0 && currentNext.length === 0) {\n              row[currentSelected][0].accLocation[mx][my].my = false;\n              row[currentSelected][0].accLocation[mx][11].my = false;\n              console.log(\"b\");\n            }\n\n            if (current.length !== 0 && currentNext.length !== 0) {\n              row[currentSelected][0].accLocation[mx][my].my = false;\n              console.log(\"c\");\n            }\n\n            if (current.length !== 0 && currentNext.length === 0) {\n              row[currentSelected][0].accLocation[mx][my].my = false;\n              console.log(\"d\");\n            }\n          }\n        } //--------------------------------------------------Checking-----------------------------------------\n\n\n        let a = [];\n\n        for (let x = 0; x <= 6; x++) {\n          let y = 0;\n\n          while (y < 10) {\n            if (row[currentSelected][0].accLocation[x][y].my === true) {\n              a.push({\n                acc: row[currentSelected][0].accLocation[x][y].acc,\n                x: x,\n                y: y\n              });\n            }\n\n            y++;\n          }\n        }\n\n        let xDup = false;\n\n        for (let c = 0; c < a.length; c++) {\n          let xCount = [];\n          let i = 0;\n\n          while (i < a.length) {\n            if (a[i].x === c) {\n              xCount.push(c);\n            }\n\n            i++;\n          }\n\n          if (xCount.length === 0) {\n            break;\n          }\n\n          if (xCount.length > 1) {\n            xDup = true;\n            let error = 8;\n            let measure = row[currentSelected + 1][8].measure;\n            let accidental = row[currentSelected][0].accidental;\n            this.props.consoleWarningKS(type, measure, error, accidental, my, mx);\n          }\n\n          if (xDup === false) {\n            let error = 8;\n            let measure = row[currentSelected + 1][8].measure;\n            let accidental = row[currentSelected][0].accidental;\n            this.props.removeWarning(type, measure, error, accidental, my, mx);\n          }\n        } // ------------------------for y ------------------------------------------------\n\n\n        let yDup = false;\n        let y = 0;\n\n        while (y < 10) {\n          let yCount = [];\n\n          for (let i = 0; i < a.length; i++) {\n            if (a[i].y === y) {\n              yCount.push(i);\n            }\n          }\n\n          if (yCount.length > 1) {\n            yDup = true; // break;\n          }\n\n          y++;\n        }\n\n        if (yDup === true) {\n          let error = 9;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.consoleWarningKS(type, measure, error, accidental, my, mx);\n        } else {\n          let error = 9;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.removeWarning(type, measure, error, accidental, my, mx);\n        }\n\n        this.setState({\n          row\n        }); // -------------------------------CHECKING IF THE ACCIDENTALS ARE THE SAME ----------------------------\n\n        let mixed = false;\n\n        for (let i = 0; i <= a.length - 1; i++) {\n          if (a[0].acc !== a[i].acc) {\n            mixed = true;\n            break;\n          }\n        }\n\n        if (mixed === true) {\n          console.log(\"different\");\n          let error = 10;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.consoleWarningKS(type, measure, error, accidental);\n        } else {\n          let error = 10;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.removeWarning(type, measure, error, accidental);\n        } // ----------------------What Key Signature------------------------\n\n\n        if (row[currentSelected][0].clef === null) {\n          console.log(currentSelected, \"it's null\");\n          let error = 11;\n          let measure = row[currentSelected + 1][8].measure;\n          let accidental = row[currentSelected][0].accidental;\n          this.props.consoleWarningKS(type, measure, error, accidental);\n          return;\n        }\n\n        let clef = row[currentSelected][0].clef;\n        this.keySignatureClefCompare(clef, a, currentSelected);\n      } else {\n        console.log(\"Use Select tool to edit Key Signature\");\n      }\n    };\n\n    this.keySignatureClefCompare = (clef, a, currentSelected) => {\n      console.log(a); // -----------set Letters --------------------------\n\n      let row = this.state.row;\n      let letter = [\"G\", \"F\", \"E\", \"D\", \"C\", \"B\", \"A\"];\n      let picker = 0;\n      let round = 0;\n\n      if (clef === \"G\") {\n        round = 0;\n        picker = 0;\n      }\n\n      if (clef === \"F\") {\n        round = 5;\n        picker = 5;\n      }\n\n      for (let x = 0; x < 7; x++) {\n        for (let y = 0; y < 12; y++) {\n          row[currentSelected][0].accLocation[x][y].letter = letter[picker];\n          picker++;\n\n          if (picker === 7) {\n            picker = 0;\n          }\n\n          if (y === 11) {\n            picker = round;\n          }\n        }\n      }\n\n      let alpMap = [\"G\", \"D\", \"A\", \"E\", \"B\", \"F#\", \"C#\", \"F\", \"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\", \"C\"];\n      let keySeq = [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\", \"B\", \"E\", \"A\", \"D\", \"G\", \"C\", \"F\"];\n      let addUp = 0;\n      let sequence = [];\n\n      for (let i = 0; i < a.length; i++) {\n        console.log(row[currentSelected][0].accLocation[a[i].x][a[i].y].letter, a[i].acc);\n        sequence.push({\n          letter: row[currentSelected][0].accLocation[a[i].x][a[i].y].letter,\n          acc: a[i].acc\n        });\n      }\n\n      ;\n      let type = 5;\n      let error = 12;\n      let measure = row[currentSelected + 1][8].measure;\n\n      if (sequence.length === 0) {\n        this.props.removeWarning(type, measure, error);\n      } else {\n        if (a[0].acc === \"b\") {\n          addUp = 7;\n        }\n\n        for (let i = 0; i < a.length; i++) {\n          if (sequence[i].letter === keySeq[i + addUp]) {\n            console.log(sequence[i].letter, keySeq[i + addUp], \"Key of\", alpMap[i + addUp]);\n\n            if (i === a.length - 1) {\n              console.log(sequence[i].letter, keySeq[i], \"Final Key is in Key of\", alpMap[i + addUp]);\n              this.props.removeWarning(type, measure, error);\n              row[currentSelected][0].keySig = alpMap[i + addUp];\n              break;\n            }\n          } else {\n            console.log(\"unkown Key Signature\");\n            this.props.consoleWarningKS(type, measure, error);\n            break;\n          }\n        }\n      }\n\n      ;\n      console.log(sequence, a.length);\n      console.log(a.length);\n      this.setState({\n        row\n      });\n    };\n\n    this.createRow = (cell, rowX, kind) => {\n      // let currentIndex = this.state.currentIndex;\n      let currentIndex = null;\n\n      if (rowX !== undefined) {\n        currentIndex = rowX;\n      } else {\n        currentIndex = this.state.currentIndex;\n      }\n\n      let row = this.state.row;\n      let column = this.state.column;\n      row.splice(currentIndex, 0, []);\n\n      for (let y = 0; y < column; y++) {\n        if (y !== 0) {\n          if (y !== 8) {\n            row[currentIndex].push({\n              x: currentIndex,\n              y: y,\n              isOpen: false,\n              rest: false,\n              note: 0,\n              lineStaff: false,\n              // gives line on the cell if true -------------------------------\n              clickable: true,\n              // cell will unclicable if enabler is false ----------------------\n              starting: false,\n              firstRow: false\n            });\n          } else {\n            row[currentIndex].push({\n              x: currentIndex,\n              y: y,\n              isOpen: false,\n              rest: false,\n              note: 0,\n              measure: null,\n              lineStaff: false,\n              // gives line on the cell if true -------------------------------\n              clickable: true,\n              // cell will unclicable if enabler is false ----------------------\n              barline: false,\n              starting: false,\n              firstRow: false\n            });\n          }\n        } else {\n          row[currentIndex].push({\n            x: currentIndex,\n            y: y,\n            isOpen: false,\n            rest: false,\n            note: 0,\n            lineStaff: false,\n            // gives line on the cell if true -------------------------------\n            clickable: true,\n            // cell will unclicable if enabler is false ----------------------\n            select: true,\n            selectColumn: false,\n            starting: false,\n            firstRow: false\n          });\n        }\n      } // set design\n\n\n      for (let i = 4; i < column - 7; i++) {\n        if (i === 4 || i === 6 || i === 8 || i === 10 || i === 12) {\n          row[currentIndex][i].lineStaff = true;\n        }\n      }\n\n      if (kind === 4) {\n        this.incrementX();\n      }\n\n      if (row[currentIndex - 1][0].starting === true) {\n        for (let i = 0; i <= column - 1; i++) {\n          row[currentIndex][i].firstRow = true;\n        }\n      }\n\n      if (kind === 4) {\n        for (let i = 0; i <= column - 1; i++) {\n          row[currentIndex + 1][i].firstRow = false;\n        }\n      } // Make enabler true for the first column--------------SET DEFAULT--------------------------------- \n\n\n      this.increment();\n      this.setState({\n        row\n      });\n    };\n\n    this.insertStartingMeasure = cell => {\n      let x = this.state.currentSelected;\n      let row = this.state.row;\n\n      if (row[x][0].starting === true) {\n        console.log(\"This is already a starting measure\");\n        return;\n      }\n\n      if (row[x - 1][0].starting === true) {\n        if (x === row.length) {\n          console.log(\"Unable to Insert Another Starting Just next to Starting\");\n          return;\n        }\n\n        if (row.length !== x + 1) {\n          if (row[x + 1][0].starting === true) {\n            console.log(\"Unable to Insert Another Starting Just next to Starting\");\n            return;\n          }\n        }\n      }\n\n      if (x !== 0) {\n        console.log(x, row);\n        row.splice(x, 0, []);\n        row[x].push({\n          x: x,\n          starting: true,\n          clef: null,\n          // Time signature\n          up: null,\n          down: null,\n          // Key signature\n          keySig: null,\n          selectColumn: false,\n          barLength: null,\n          accidental: \"#\",\n          mx: 0,\n          my: 0,\n          accLocation: []\n        });\n        console.log(row[x]);\n\n        for (let i = 0; i < 7; i++) {\n          row[x][0].accLocation.push([]);\n\n          for (let y = 0; y < 12; y++) {\n            row[x][0].accLocation[i].push({\n              my: false,\n              acc: \"\",\n              letter: \"\"\n            });\n          }\n        }\n\n        this.increment();\n        row[x + 1][0].selectColumn = false;\n        console.log(row[x][0]);\n        row[x][0].selectColumn = true;\n        row[x + 1][8].barline = false;\n        this.setState({\n          row,\n          currentSelected: x\n        });\n        this.props.viewOptionOn();\n        console.log(this.state.row);\n        this.incrementX();\n        let kind = 3;\n        let rowX = null;\n        let measure = 1;\n        console.log(x);\n\n        for (let a = x - 1; a >= 1; a--) {\n          console.log(a - 1, row[a - 1][0]);\n\n          if (row[a - 1][0].starting === true) {\n            measure = row[a][8].measure + 1;\n            break;\n          }\n\n          if (row[a][8].barline === true) {\n            measure = row[a][8].measure + 1;\n            break;\n          }\n        }\n\n        row[x + 1][8].measure = measure;\n        this.setMeasureNum(x + 1, rowX, kind);\n\n        for (let i = 0; i <= this.state.column - 1; i++) {\n          row[x + 1][i].firstRow = true;\n        }\n\n        if (row[x + 1][0].note > 0) {\n          let kind = 7;\n          this.checkStartingClef(x, rowX, kind);\n        }\n      } else {\n        console.log(\"already set\");\n      }\n\n      console.log(this.state.row);\n    };\n\n    this.removeStartingMeasure = cell => {\n      let row = this.state.row;\n      let x = this.state.currentSelected;\n\n      if (x === 0) {\n        console.log(\"Cannot Delete The First Starting Measure\");\n        return;\n      }\n\n      row.splice(x, 1);\n      this.decrementX();\n      row[x][8].barline = true;\n\n      for (let i = 0; i <= this.state.column - 1; i++) {\n        row[x][i].firstRow = false;\n      }\n\n      this.setState({\n        row\n      });\n      console.log(x, this.state.row);\n    };\n\n    this.incrementX = cell => {\n      let x = this.state.currentSelected + 1;\n      let row = this.state.row;\n      let column = this.state.column;\n      let rowLength = row.length;\n      console.log(x);\n\n      if (x === row.length - 1) {\n        return;\n      }\n\n      for (let a = x; a < rowLength; a++) {\n        if (row[a][0].starting === false) {\n          for (let i = 0; i < column; i++) {\n            row[a][i].x = a;\n          }\n        } else {\n          row[a][0].x = a;\n        }\n      }\n\n      this.setState({\n        row\n      });\n    };\n\n    this.decrementX = cell => {\n      let x = this.state.currentSelected;\n      let row = this.state.row;\n      let column = this.state.column;\n      let rowLength = row.length;\n\n      for (let a = x; a < rowLength; a++) {\n        if (row[a][0].starting === false) {\n          for (let i = 0; i < column; i++) {\n            row[a][i].x = a;\n          }\n        } else {\n          row[a][0].x = a;\n        }\n      }\n\n      this.setState({\n        row\n      }); // console.log(rowLength)\n    };\n\n    this.clickLeft = cell => {\n      console.log(\"Clicked left\");\n\n      if (this.props.handle === 1) {\n        let row = this.state.row;\n        let rowX = cell.x;\n        let kind = 4;\n        let measure = row[cell.x][8].measure;\n        row[cell.x][8].measure = null;\n        this.createRow(cell, rowX, kind);\n        row[cell.x - 1][8].measure = measure;\n        row[cell.x - 1][cell.y].isOpen = true;\n        row[cell.x - 1][cell.y].rest = this.props.rest;\n\n        for (let i = 0; i <= this.state.column - 1; i++) {\n          row[cell.x - 1][i].note = this.props.note;\n        }\n\n        let x = cell.x;\n        kind = 6;\n        this.findStartingMeasure(x, kind);\n        this.setState({\n          row\n        });\n      }\n\n      if (this.props.handle === 2) {\n        console.log(\"Clicked left handle 2\");\n\n        if (this.state.row[cell.x - 1][0].starting === true) {\n          // THIS IS STARTING, CAN'T CLICK\n          console.log(\"this is starting measure\");\n          return;\n        }\n\n        let swt = true;\n        this.props.insertStartingMeasureDisabler(swt);\n        this.handle2(cell + 1); // bar\n      }\n    };\n\n    this.clickRight = cell => {\n      console.log(\"Clicked Right\", cell.x + 1);\n      let row = this.state.row;\n\n      if (this.props.handle === 0) {\n        if (cell.x + 1 !== row.length) {\n          console.log(\"Clicked left handle 2\");\n          let kind = 5;\n          let side = cell.x + 1;\n          this.handle0(cell, kind, side); // bar\n        }\n      }\n\n      if (this.props.handle === 1) {\n        let rowX = cell.x + 1;\n        this.createRow(cell, rowX);\n        row[cell.x + 1][cell.y].isOpen = true;\n        row[cell.x + 1][cell.y].rest = this.props.rest;\n\n        for (let i = 0; i <= this.state.column - 1; i++) {\n          row[cell.x + 1][i].note = this.props.note;\n        }\n\n        this.incrementX(cell);\n        this.setState({\n          row\n        });\n        let x = cell.x;\n        let kind = 6;\n        this.findStartingMeasure(x, kind);\n      }\n\n      if (this.props.handle === 2) {\n        let swt = true;\n        let kind = 5;\n        let side = cell.x + 1;\n        this.props.insertStartingMeasureDisabler(swt);\n        this.handle2(cell, kind, side); // bar\n      }\n    };\n\n    this.click = (cell, kind, mx, my) => {\n      let row = this.state.row;\n      let handle = this.props.handle;\n\n      if (handle === 0) {\n        let swt = false;\n        this.props.insertStartingMeasureDisabler(swt);\n        let side;\n        this.handle0(cell, kind, side, mx, my); // select\n      }\n\n      if (handle === 1) {\n        let swt = true;\n        this.props.insertStartingMeasureDisabler(swt);\n        this.handle1(cell); // notes\n      }\n\n      if (handle === 2) {\n        let swt = true;\n        this.props.insertStartingMeasureDisabler(swt);\n        this.handle2(cell); // bar\n      }\n\n      this.setState({\n        row\n      });\n    };\n\n    this.handle0 = (cell, kind, side, mx, my) => {\n      let row = this.state.row;\n      let xValue = cell.x;\n\n      if (kind === 5) {\n        xValue = side;\n      }\n\n      let currentSelected = this.state.currentSelected;\n      row[currentSelected][0].selectColumn = false;\n      row[xValue][0].selectColumn = true;\n\n      if (row[xValue][0].starting === true) {\n        this.props.viewOptionOn();\n      } else {\n        this.props.viewOptionOff();\n      }\n\n      this.setState({\n        x: xValue,\n        currentSelected: xValue\n      });\n\n      if (kind === 8) {\n        this.ks1(cell, xValue, mx, my);\n      }\n    };\n\n    this.handle1 = cell => {\n      // contain conlose -------------- passing------------\n      let row = this.state.row;\n      let currentCell = row[cell.x][cell.y]; // get x and y positions\n\n      let x = cell.x;\n      let note = this.props.note;\n      console.log(this.props);\n\n      if (row[x][0].starting === false) {\n        if (currentCell.isOpen === false) {\n          // 1. Find if one of the cells in current row has a True value for isOpen     \n          let found = row[x].findIndex(cell => {\n            if (cell.isOpen === true) return true;else {\n              return false;\n            }\n          }); // 2. deside if it is going to make another row next to it or not.\n\n          if (found === -1 && row.length - 1 === x) {\n            // if none\n            this.setState({\n              currentIndex: x\n            }); // this.createRow(); -----------------------------------------------------------------------------------\n          }\n\n          if (cell.x === 1) {\n            row[1][8].measure = 1;\n          }\n\n          currentCell.isOpen = true;\n          console.log(this.props.rest, currentCell.rest);\n          currentCell.rest = this.props.rest;\n          currentCell.note = note;\n          let kind = 6;\n          console.log(\"find Starting Measure\");\n          this.findStartingMeasure(x, kind); //the length of the note should be equal to it's column\n\n          row[x].findIndex(cell => {\n            cell.note = note;\n            return null;\n          });\n        } else {\n          // When Closing ------------------\n          currentCell.isOpen = false;\n          console.log(\"this will be CLOSE\");\n          let found = row[x].findIndex(cell => {\n            // find if there is true in isOpen from the specific row clicked\n            if (cell.isOpen === true) return true;else {\n              return false;\n            }\n          });\n\n          if (found === -1) {\n            console.log(x);\n\n            if (x !== 1) {\n              if (x + 1 !== row.length) {\n                if (row[x][8].barline === true) {\n                  // if x has barline but to be removes, put it in the next x\n                  if (row[x + 1][8].barline === false) {\n                    row[x + 1][8].barline = true;\n                    row[x + 1][8].measure = row[x][8].measure;\n                    row.splice(x, 1);\n                    this.decrementX(cell);\n                  } else {\n                    let a = 0;\n\n                    while (a <= this.state.column - 1) {\n                      row[x][a].note = 0;\n                      a++;\n                    }\n\n                    let type = 1;\n                    let error = 0;\n                    let measure = row[x][8].measure;\n                    this.props.consoleWarningTS(type, measure, error);\n                  }\n                } else {\n                  row.splice(x, 1);\n                  this.decrementX(cell);\n                  return;\n                }\n              }\n            }\n          }\n        }\n\n        this.setState({\n          x: x\n        });\n      } else {\n        console.log(\"this is a starting measure\");\n      }\n    };\n\n    this.handle2 = (cell, kind, side) => {\n      // create barline--------------- passing function with console\n      let x = cell.x;\n\n      if (kind === 5) {\n        x = side;\n      }\n\n      let row = this.state.row;\n      console.log(x, row.length);\n\n      if (x === row.length) {\n        console.log(\"This is the last row last. Use End Bar line\");\n        return;\n      }\n\n      if (x === 0 || row[x][0].starting === true) {\n        // THIS IS STARTING, CAN'T CLICK\n        console.log(\"this is starting measure\");\n      } else {\n        if (row[x - 1][0].starting === false) {\n          if (row[x - 1][0].barline === true) {\n            console.log(\"error: declaring barline without notes or rest between barlines\");\n          } else {\n            if (row[x][8].barline === false) {\n              //---- switch barline to TRUE\n              row[x][8].barline = true;\n              let kind = 1;\n              console.log(kind);\n              this.setState({\n                row\n              });\n              this.findStartingMeasure(x, kind); //  ------  findStartingMeasure => checkingStartingTS => console => setMeasureNum => measureLengthCalc\n            } else {\n              // ----------------switch barline to FALSE\n              row[x][8].barline = false;\n              row[x][8].measure = null;\n              let kind = 2;\n              this.setState({\n                row\n              });\n              this.findStartingMeasure(x, kind); //    ------  findStartingMeasure => checkingStartingTS => toLastNewMeasure => measureLengthCalc\n\n              let rowX;\n              this.setMeasureNum(x, rowX, kind);\n              let measure = 1;\n\n              for (let a = row.length - 1; a >= 1; a--) {\n                console.log(a, row[a][8].measure);\n\n                if (row[a][8].measure !== null) {\n                  console.log(row[a][8]);\n                  measure = row[a][8].measure + 1;\n                  break;\n                }\n              }\n\n              this.props.recalcuConsoleMeasure(measure);\n            }\n          }\n        }\n      }\n    };\n\n    this.setStarting = cell => {\n      // contain console ---------------------- passing function with console \n      let row = this.state.row;\n      let x = this.state.currentSelected;\n      row[x][0].clef = this.props.clef;\n      row[x][0].up = this.props.up;\n      row[x][0].down = this.props.down;\n      row[x][0].keySig = this.props.keySig; //-------FOR TS -----------------------------\n\n      if (row[x][0].up === null || row[x][0].down === null) {\n        console.log(\" TS not complete\");\n      } else {\n        //then\n        if (x === 0) {\n          row[x + 1][8].measure = 1;\n        }\n\n        let type = 3;\n        let error = 4;\n        let measure = row[x + 1][8].measure;\n        console.log(type, measure, error);\n        this.props.removeWarning(type, measure, error);\n        this.calcDownUp(x);\n        let rowX = x;\n        let kind = 1;\n        this.measureLengthCalc(x + 1, rowX, kind);\n      } //-------FOR Clef -----------------------------\n\n\n      if (row[x][0].Clef === null) {\n        console.log(\" clef not complete\");\n      } else {\n        let type = 4;\n        let error = 6;\n        let measure = row[x + 1][8].measure;\n        this.props.removeWarning(type, measure, error);\n        error = 7;\n        this.props.removeWarning(type, measure, error);\n        type = 5;\n        error = 11;\n        console.log(type, measure, error);\n        this.props.removeWarning(type, measure, error);\n        let currentSelected = x;\n        let kind = 8;\n        let mx = null;\n        let my = null;\n        this.ks2(cell, currentSelected, mx, my, kind);\n        row[x][0].keySig = \"C\";\n      }\n\n      this.setState({\n        row\n      });\n\n      for (x = 0; x < row.length - 1; x++) {\n        if (row[x][0].starting === true) {\n          let clef = row[x][0].clef;\n          let up = row[x][0].up;\n          let down = row[x][0].down;\n          let keySig = row[x][0].keySig;\n          console.log(row[x][0], clef, up, down, keySig);\n        }\n      }\n    };\n\n    this.findStartingMeasure = (x, kind) => {\n      console.log(x, kind, \"Get Starting Position's X axis\");\n      let row = this.state.row;\n      let rowX = 0; //  row[X] Position -------------\n\n      for (let i = x; i >= 0; i--) {\n        // find Starting\n        if (row[i][0].starting === true) {\n          rowX = i;\n          break;\n        }\n      } // -------------------------TS-----------------------------------\n\n\n      if (kind === 1) {\n        let kind = 1;\n        this.checkingStartingTS(x, rowX, kind);\n      }\n\n      if (kind === 2) {\n        let kind = 2;\n        this.toLastNewMeasure(x, rowX, kind);\n        this.measureLengthCalc(x, rowX, kind);\n      } // -------------------------KS-----------------------------------\n\n\n      if (kind === 6) {\n        let kind = 6;\n        this.checkStartingClef(x, rowX, kind);\n      }\n    };\n\n    this.toLastNewMeasure = (x, rowX, kind) => {\n      console.log(\"Get last clicable position's X axis\");\n      let row = this.state.row;\n\n      if (kind === 2) {\n        let barCount = 0;\n\n        for (let a = rowX; a <= row.length - 2; a++) {\n          if (row[a + 1][0].starting === false) {\n            if (row[a + 1][8].barline === true) {\n              barCount = barCount + 1;\n              console.log(row[a + 1][0].starting);\n            }\n          }\n        }\n\n        if (barCount === 0) {\n          let measure = row[rowX + 1][8].measure;\n          let type = 3;\n          let error = 4;\n          console.log(type, error, measure, row[rowX + 1][8].measure);\n          this.props.removeWarning(type, measure, error);\n        }\n\n        console.log(\"barcount =\", barCount);\n      }\n    };\n\n    this.checkingStartingTS = (x, rowX, kind) => {\n      console.log(x, rowX, \"Get Starting first measure's from left axis\");\n      let row = this.state.row;\n\n      if (kind === 1) {\n        let bLValrow = row[rowX][0].barLength;\n        let measure = row[rowX + 1][8].measure;\n        let type = 3;\n        let error = 4;\n\n        if (bLValrow === null) {\n          // Adding barline without declaring time signature for starting measure\n          let kind = 1;\n          console.log(type, error, measure, row[rowX + 1][8].measure);\n          this.setMeasureNum(x, rowX, kind); // --------------------measure numbers-----------\n\n          let up = row[rowX][0].up;\n          let down = row[rowX][0].down;\n          let barLength = row[rowX][0].barLength;\n          let totalNoteValue = row[rowX][0].totalNoteValue;\n          this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\n        } else {\n          // -----------------------if Up and Down are not Null \n          let kind = 1;\n          this.setMeasureNum(x, rowX, kind); // --------------------measure numbers-----------\n\n          console.log(\"hhh\");\n          this.measureLengthCalc(x, rowX, kind); //--------  proceed checking left and right measure\n        }\n      }\n\n      if (kind === 2) {\n        console.log(\"remove\");\n      }\n    };\n\n    this.setMeasureNum = (x, rowX, kind) => {\n      // set Measure Number\n      console.log(x, rowX, kind, \"Measure number or address\");\n      let row = this.state.row;\n      let measure = 1;\n      let kindHandler = 1;\n\n      if (kind === 3) {\n        kindHandler = 2;\n      }\n\n      for (let a = x - kindHandler; a >= 0; a--) {\n        if (a !== 0) {\n          if (row[a - 1][0].starting === true) {\n            measure = row[a][8].measure;\n            break;\n          }\n\n          if (row[a][8].barline === true) {\n            measure = row[a][8].measure;\n            break;\n          }\n        }\n      }\n\n      if (kind === 1) {\n        row[x][8].measure = measure + 1; // ------declare current measure number\n\n        measure = measure + 1;\n      }\n\n      if (kind === 3) {\n        measure = row[x][8].measure;\n      }\n\n      for (let b = x + 1; b <= row.length - 1; b++) {\n        if (row[b][0].starting === true) {\n          console.log(row[b + 1][8]);\n          row[b + 1][8].measure = measure + 1;\n          measure = measure + 1;\n          continue;\n        }\n\n        if (row[b][8].barline === true) {\n          row[b][8].measure = measure + 1;\n          measure = measure + 1;\n          continue;\n        }\n      }\n    };\n\n    this.measureLengthCalc = (x, rowX, kind) => {\n      // ------- get measure length   --- if kind 1, get measure length of left measure and right measure\n      let row = this.state.row;\n      let starting = x - 1;\n      let barLength = 0;\n      let newX = 1;\n      let measure = 1;\n      let loop = 1;\n      let up = null;\n      let down = null;\n      console.log(rowX, row[rowX]);\n      console.log(this.state.row);\n      barLength = row[rowX][0].barLength;\n      up = row[rowX][0].up;\n      down = row[rowX][0].down;\n\n      if (kind === 1) {\n        // if kind 1, need to do 2 loops\n        loop = row.length;\n      }\n\n      if (kind === 2) {\n        // if kind 1, need to do 2 loops\n        loop = row.length;\n      }\n\n      console.log(loop);\n\n      for (let l = 1; l <= loop; l++) {\n        // this is the loop       ------------ LOOP ------------\n        for (let n = starting; n >= 0; n--) {\n          // set the barLength\n          if (row[n][0].starting === true) {\n            barLength = row[n][0].barLength;\n            break;\n          }\n        }\n\n        console.log(\"loop number=\", l, \"Bar Length=\", barLength);\n\n        for (let n = starting; n >= 0; n--) {\n          // set the Strting POINT (newX) and measure   --- or The 1st column in  measure\n          if (row[n][0].starting === true) {\n            newX = n + 1;\n            measure = row[n + 1][8].measure;\n            break;\n          }\n\n          if (row[n][8].barline === true) {\n            newX = n;\n            measure = row[n][8].measure;\n            break;\n          }\n        }\n\n        console.log(x, starting, kind, \"Measure length Calc\", \"newX =\", newX, \"Measure=\", measure); //--------------------------------------------------\n\n        let ret = false;\n        let noteValue = [0]; // added Zero for reduce()\n\n        let nS = 0;\n        let nM = 0;\n        let nBL = barLength;\n\n        for (let b = newX; b <= row.length - 1; b++) {\n          if (row[b][0].starting === true) {\n            // break to the starting measure or a bar line\n            nS = b + 1;\n            nM = row[b + 1][8].measure;\n            console.log(row[b][0].barLength);\n            console.log(row[b][8], newX);\n            nBL = row[b][0].barLength;\n\n            if (row[b][0].barLength === null) {\n              // if the next starting measure's Time Siganture is NULL consoleWarn\n              for (let c = b; c <= row.length; c++) {\n                let type = 3;\n                let error = 4;\n                let measure = row[c][0].measure;\n                let up = row[c][0].up;\n                let barLength = row[c][0].barLength;\n                let down = row[c][0].down;\n                let totalNoteValue = row[rowX][0].totalNoteValue;\n                console.log(measure);\n\n                if (row[c][0].starting === true) {\n                  this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\n                } else {\n                  b = c;\n                  break;\n                }\n              }\n            }\n\n            break;\n          }\n\n          if (row[b][8].barline === true) {\n            nS = b;\n            nM = row[b][8].measure;\n            console.log(row[b][8], newX);\n\n            if (b !== newX) {\n              break;\n            }\n          }\n\n          if (row[b][0].note === 1) {\n            noteValue.push(4);\n          }\n\n          if (row[b][0].note === 2) {\n            noteValue.push(2);\n          }\n\n          if (row[b][0].note === 4) {\n            noteValue.push(1);\n          }\n\n          if (b === row.length - 1) {\n            ret = true;\n          }\n        }\n\n        let totalNoteValue = noteValue.reduce((accumulator, currentValue) => {\n          return accumulator + currentValue;\n        });\n        console.log(measure, barLength, \"vs\", totalNoteValue); // -------------------------\n\n        let type = 1;\n        console.log(barLength, totalNoteValue, kind);\n\n        if (barLength === null) {\n          starting = nS;\n          measure = nM;\n          barLength = nBL;\n          console.log(starting, measure, barLength);\n\n          if (ret === true) {\n            console.log(\"Done\");\n            return;\n          }\n\n          continue;\n        }\n\n        if (barLength > totalNoteValue) {\n          let error = 1;\n          this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\n          console.log(\"kulang\");\n        }\n\n        if (barLength < totalNoteValue) {\n          let error = 2;\n          this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\n          console.log(\"sobra\");\n        }\n\n        if (barLength === totalNoteValue) {\n          console.log(\"chakto\");\n          this.props.removeWarning(type, measure);\n        } // measure = nextMeasure\n        // barLength = nextBarLength\n\n\n        starting = nS;\n        measure = nM;\n        barLength = nBL;\n        console.log(starting, measure, barLength);\n\n        if (ret === true) {\n          console.log(\"Done\");\n          return;\n        }\n      }\n    };\n\n    this.calcDownUp = x => {\n      let row = this.state.row;\n      let up = this.props.up;\n      let down = this.props.down;\n      let calcDown = 0;\n      let c = 4;\n      let i = 0;\n      console.log(up, down);\n\n      while (calcDown !== 4 || i < 7) {\n        //current note value should be 4 && do while for 7 times only, limit to 7\n        calcDown = c * down;\n\n        if (calcDown !== 4) {\n          c = c / 2;\n        } else {\n          break;\n        }\n\n        i++;\n      }\n\n      let barLength = c * up;\n      console.log(barLength);\n      row[x][0].barLength = barLength;\n      this.setState({\n        row\n      });\n    };\n\n    this.valuePerMeasureCalc = (cell, h, x, m) => {\n      // contain console \n      console.log(\"valuePerMeasureCalc\", cell, h, x, m);\n      let row = this.state.row;\n      let currentX = 0;\n      let starting = 0;\n      let barline = 1;\n      let startingMeasure = 0; //--- THIS IS THE MEASURE\n\n      for (let i = currentX; i >= 1; i--) {\n        // find Starting Measure\n        if (row[i][0].starting === false) {\n          if (row[i][8].barline === true) {\n            // if found...\n            barline = i;\n            break;\n          } else {\n            continue;\n          }\n        } else {\n          barline = i + 1;\n          break;\n        }\n      }\n\n      startingMeasure = row[barline][8].measure;\n      let measure = startingMeasure;\n      console.log(m); //------------------------------------------------------------------------------------------------------------\n\n      let noteValue = [0]; // added Zero for reduce()\n\n      for (let i = barline; i <= row.length - 1 || row[i - 1][0].starting === true || row[i - 1][8].barline === true; i++) {\n        // find end of Measure \n        console.log(barline, measure);\n\n        if (row[i][0].starting === false) {\n          if (row[i][8].barline === false) {\n            if (row[i][0].note === 1) {\n              console.log(\"pushed 4\");\n              noteValue.push(4);\n            }\n\n            if (row[i][0].note === 2) {\n              console.log(\"pushed 2\");\n              noteValue.push(2);\n            }\n\n            if (row[i][0].note === 4) {\n              console.log(\"pushed 1\");\n              noteValue.push(1);\n            }\n          } else {\n            break;\n          }\n        } else {\n          break;\n        }\n      }\n\n      console.log(noteValue);\n      let barLength = row[starting][0].barLength;\n      let totalNoteValue = noteValue.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue;\n      });\n      console.log(startingMeasure, barLength, \"vs\", totalNoteValue);\n      let type = 1;\n      let up = row[starting][0].up;\n      let down = row[starting][0].down;\n\n      if (barLength > totalNoteValue) {\n        let error = 1;\n        this.props.consoleWarningTS(type, measure, error, up, down);\n        console.log(\"kulang\");\n        return;\n      }\n\n      if (barLength < totalNoteValue) {\n        let error = 2;\n        this.props.consoleWarningTS(type, measure, error, up, down);\n        console.log(\"sobra\");\n        return;\n      }\n\n      if (barLength === totalNoteValue) {\n        console.log(h, m);\n        console.log(\"chakto\");\n        this.props.removeWarning(type, measure, up, down);\n        return;\n      }\n\n      console.log(currentX, starting, barline, barLength, totalNoteValue, startingMeasure);\n    };\n\n    this.checkStartingClef = (x, rowX, kind) => {\n      let row = this.state.row;\n      let a = null;\n\n      if (kind === 6) {\n        a = rowX;\n      }\n\n      if (kind === 7) {\n        a = x;\n      }\n\n      console.log(row[a][0]);\n\n      if (row[a][0].clef === null) {\n        let type = 4;\n        let measure = row[a + 1][8].measure;\n        let error = 6;\n        this.props.consoleWarningClef(type, measure, error);\n      } else {\n        this.measureLengthCalc(x, rowX, kind);\n      }\n    };\n\n    this.insertStartingMeasure = this.insertStartingMeasure.bind(this);\n    this.setStarting = this.setStarting.bind(this);\n    this.removeStartingMeasure = this.removeStartingMeasure.bind(this);\n    this.state = {\n      currentIndex: 1,\n      row: [[]],\n      column: 20,\n      currentSelected: 0,\n      x: 0,\n      clef: 10,\n      // 10 = G-clef,\n      accidental: \"#\",\n      barLength: null,\n      measureLengthCalc: [],\n      buttonBool: true\n    };\n  }\n\n  createMeasureRow() {\n    let row = this.state.row;\n    row.splice(0, 1, []);\n    row[0].push({\n      x: 0,\n      starting: true,\n      clef: null,\n      // Time signature\n      up: null,\n      down: null,\n      // Key signature\n      keySig: null,\n      selectColumn: false,\n      barLength: null,\n      accidental: \"#\",\n      mx: 0,\n      my: 0,\n      letter: \"\",\n      accLocation: []\n    });\n    console.log(row[0]);\n\n    for (let i = 0; i < 7; i++) {\n      row[0][0].accLocation.push([]);\n\n      for (let y = 0; y < 12; y++) {\n        row[0][0].accLocation[i].push({\n          my: false,\n          acc: \"\",\n          letter: \"\"\n        });\n      }\n    } // set design      \n    // Make enabler true for the first column--------------SET DEFAULT--------------------------------- \n\n\n    this.setState({\n      row\n    });\n  }\n\n  increment() {\n    this.setState({\n      currentIndex: this.state.currentIndex + 1\n    });\n  }\n\n  decrement() {\n    this.setState({\n      currentIndex: this.state.currentIndex - 1\n    });\n  }\n\n  //----------------------------------------------------------------------------------------------------------------------------------------------\n  componentDidMount() {\n    this.createMeasureRow();\n    this.createRow();\n    this.measure1();\n    this.props.insertStartingMeasure(this.insertStartingMeasure);\n    this.props.setStarting(this.setStarting);\n    this.props.removeStartingMeasure(this.removeStartingMeasure);\n  }\n\n  measure1() {\n    let row = this.state.row;\n    row[1][8].measure = 1;\n    this.setState({\n      row\n    });\n  } //-----------------------------RENDER HERE------------------------------------\n\n\n  render() {\n    let rows = this.state.row.map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        cells: row,\n        click: this.click,\n        clickLeft: this.clickLeft,\n        clickRight: this.clickRight,\n        ks1: this.ks1,\n        ks2: this.ks2\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1422,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Timer, {\n          row: this.state.row,\n          column: this.state.column,\n          tempo: this.props.tempo,\n          timeSig: this.props.timeSig,\n          currentSelected: this.state.currentSelected,\n          startPauseSwitch: this.props.startPauseSwitch,\n          clockStop: this.props.clockStop,\n          volume: this.props.volume,\n          playerIcon: this.props.playerIcon,\n          consoleWarningClef: this.props.consoleWarningClef,\n          metronome: this.props.metronome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 9\n      }, this), rows]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1433,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/Raivex/Desktop/THESIS/musimu/gui/src/simulator/Board.js"],"names":["React","Component","Row","Timer","Board","constructor","props","ks1","cell","xValue","mx","my","handle","currentSelected","row","state","accidental","setState","ks2","kind","type","console","log","undefined","starting","accLocation","acc","a","current","push","b","currentNext","length","x","y","xDup","c","xCount","i","error","measure","consoleWarningKS","removeWarning","yDup","yCount","mixed","clef","keySignatureClefCompare","letter","picker","round","alpMap","keySeq","addUp","sequence","keySig","createRow","rowX","currentIndex","column","splice","isOpen","rest","note","lineStaff","clickable","firstRow","barline","select","selectColumn","incrementX","increment","insertStartingMeasure","up","down","barLength","viewOptionOn","setMeasureNum","checkStartingClef","removeStartingMeasure","decrementX","rowLength","clickLeft","findStartingMeasure","swt","insertStartingMeasureDisabler","handle2","clickRight","side","handle0","click","handle1","viewOptionOff","currentCell","found","findIndex","consoleWarningTS","recalcuConsoleMeasure","setStarting","calcDownUp","measureLengthCalc","Clef","checkingStartingTS","toLastNewMeasure","barCount","bLValrow","totalNoteValue","kindHandler","newX","loop","l","n","ret","noteValue","nS","nM","nBL","reduce","accumulator","currentValue","calcDown","valuePerMeasureCalc","h","m","currentX","startingMeasure","consoleWarningClef","bind","buttonBool","createMeasureRow","decrement","componentDidMount","measure1","render","rows","map","index","tempo","timeSig","startPauseSwitch","clockStop","volume","playerIcon","metronome"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEE,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAE5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyBvBC,GAzBuB,GAyBjB,CAACC,IAAD,EAAOC,MAAP,EAAeC,EAAf,EAAmBC,EAAnB,KAA0B;AAC9B,UAAI,KAAKL,KAAL,CAAWM,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,YAAIC,eAAe,GAAGJ,MAAtB;AACF,YAAIK,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACEA,QAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAAxB,GAAqC,KAAKV,KAAL,CAAWU,UAAhD;AACA,aAAKC,QAAL,CAAc;AAAEH,UAAAA;AAAF,SAAd;AACA,aAAKI,GAAL,CAASV,IAAT,EAAeK,eAAf,EAAgCH,EAAhC,EAAoCC,EAApC;AACD;AACF,KAjCsB;;AAAA,SAkCvBO,GAlCuB,GAkCjB,CAACV,IAAD,EAAOK,eAAP,EAAwBH,EAAxB,EAA4BC,EAA5B,EAAgCQ,IAAhC,KAAwC;AAC5C,UAAIC,IAAI,GAAG,CAAX;AACA,UAAIN,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,CAAZ;;AACE,UAAI,KAAKP,KAAL,CAAWM,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,YAAIO,IAAI,KAAKI,SAAb,EAAwB;AACtB,cAAIT,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBW,QAAxB,KAAqC,IAAzC,EAA+C;AAAE;AAAS,WADpC,CACsC;AAC9D;;;AAEI,cAAIV,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwCC,EAAxC,EAA4CA,EAA5C,KAAmD,KAAvD,EAA8D;AAC5DG,YAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwCC,EAAxC,EAA4CA,EAA5C,GAAiD,IAAjD;AACAG,YAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwCC,EAAxC,EAA4Ce,GAA5C,GAAkDZ,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAA1E;AACAF,YAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwC,EAAxC,EAA4CC,EAA5C,GAAiD,IAAjD;AACD,WAJD,MAMK;AACH,gBAAIgB,CAAC,GAAG,CAAR;AACA,gBAAIC,OAAO,GAAG,EAAd;;AACE,mBAAOD,CAAC,GAAG,CAAX,EAAc;AACZ,kBAAIb,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwCiB,CAAxC,EAA2ChB,EAA3C,KAAkD,IAAlD,IAA0DA,EAAE,KAAKgB,CAArE,EAAwE;AACtEC,gBAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACD;;AACDA,cAAAA,CAAC;;AACD,kBAAIA,CAAC,KAAK,CAAV,EAAa;AACXA,gBAAAA,CAAC,GAAG,CAAJ;AACA;AACD;AACF;;AACD,gBAAIG,CAAC,GAAG,CAAR;AACA,gBAAIC,WAAW,GAAG,EAAlB;;AACA,gBAAIrB,EAAE,KAAK,CAAX,EAAc;AACZ,qBAAOoB,CAAC,GAAG,CAAX,EAAc;AACZ,oBAAIhB,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAAE,GAAG,CAAzC,EAA4CoB,CAA5C,EAA+CnB,EAA/C,KAAsD,IAA1D,EAAgE;AAC9DoB,kBAAAA,WAAW,CAACF,IAAZ,CAAiBC,CAAjB;AACD;;AACDA,gBAAAA,CAAC;AACF;AACF;;AAED,gBAAIpB,EAAE,KAAK,CAAX,EAAc;AACZI,cAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoC,CAApC,EAAuCd,EAAvC,EAA2CA,EAA3C,GAAgD,KAAhD;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;;AAED,gBAAIM,OAAO,CAACI,MAAR,KAAmB,CAAnB,IAAwBD,WAAW,CAACC,MAAZ,KAAuB,CAAnD,EAAuD;AACrDlB,cAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwCC,EAAxC,EAA4CA,EAA5C,GAAiD,KAAjD;AACAG,cAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwC,EAAxC,EAA4CC,EAA5C,GAAiD,KAAjD;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;;AAED,gBAAIM,OAAO,CAACI,MAAR,KAAmB,CAAnB,IAAwBD,WAAW,CAACC,MAAZ,KAAuB,CAAnD,EAAuD;AACrDlB,cAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwCC,EAAxC,EAA4CA,EAA5C,GAAiD,KAAjD;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;;AACD,gBAAIM,OAAO,CAACI,MAAR,KAAmB,CAAnB,IAAwBD,WAAW,CAACC,MAAZ,KAAuB,CAAnD,EAAuD;AACrDlB,cAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCf,EAApC,EAAwCC,EAAxC,EAA4CA,EAA5C,GAAiD,KAAjD;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD;AACJ;AACJ,SAvD0B,CAwDzB;;;AACA,YAAIK,CAAC,GAAG,EAAR;;AACA,aAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA8B;AAC5B,cAAIC,CAAC,GAAG,CAAR;;AACA,iBAAOA,CAAC,GAAG,EAAX,EAAe;AACb,gBAAKpB,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCQ,CAApC,EAAuCC,CAAvC,EAA0CvB,EAA1C,KAAiD,IAAtD,EAA4D;AAC1DgB,cAAAA,CAAC,CAACE,IAAF,CAAO;AACLH,gBAAAA,GAAG,EAAEZ,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCQ,CAApC,EAAuCC,CAAvC,EAA0CR,GAD1C;AAELO,gBAAAA,CAAC,EAAEA,CAFE;AAGLC,gBAAAA,CAAC,EAAEA;AAHE,eAAP;AAMD;;AACDA,YAAAA,CAAC;AACF;AACF;;AAED,YAAIC,IAAI,GAAG,KAAX;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,CAAC,CAACK,MAAtB,EAA8BI,CAAC,EAA/B,EAAmC;AACjC,cAAIC,MAAM,GAAG,EAAb;AACA,cAAIC,CAAC,GAAG,CAAR;;AACE,iBAAOA,CAAC,GAAGX,CAAC,CAACK,MAAb,EAAqB;AACnB,gBAAIL,CAAC,CAACW,CAAD,CAAD,CAAKL,CAAL,KAAWG,CAAf,EAAkB;AAChBC,cAAAA,MAAM,CAACR,IAAP,CAAYO,CAAZ;AACD;;AACDE,YAAAA,CAAC;AACE;;AACP,cAAID,MAAM,CAACL,MAAP,KAAkB,CAAtB,EAAyB;AACvB;AACD;;AACD,cAAIK,MAAM,CAACL,MAAP,GAAgB,CAApB,EAAuB;AACnBG,YAAAA,IAAI,GAAG,IAAP;AACE,gBAAII,KAAK,GAAG,CAAZ;AACA,gBAAIC,OAAO,GAAG1B,GAAG,CAACD,eAAe,GAAG,CAAnB,CAAH,CAAyB,CAAzB,EAA4B2B,OAA1C;AACA,gBAAIxB,UAAU,GAAGF,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAAzC;AACA,iBAAKV,KAAL,CAAWmC,gBAAX,CAA4BrB,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDvB,UAAlD,EAA8DL,EAA9D,EAAkED,EAAlE;AAEH;;AACD,cAAIyB,IAAI,KAAK,KAAb,EAAoB;AAClB,gBAAII,KAAK,GAAG,CAAZ;AACA,gBAAIC,OAAO,GAAG1B,GAAG,CAACD,eAAe,GAAG,CAAnB,CAAH,CAAyB,CAAzB,EAA4B2B,OAA1C;AACA,gBAAIxB,UAAU,GAAGF,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAAzC;AACA,iBAAKV,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC,EAA+CvB,UAA/C,EAA2DL,EAA3D,EAA+DD,EAA/D;AACD;AACJ,SApGwB,CAsG3B;;;AACI,YAAIiC,IAAI,GAAG,KAAX;AACA,YAAIT,CAAC,GAAG,CAAR;;AACE,eAAOA,CAAC,GAAG,EAAX,EAAe;AACf,cAAIU,MAAM,GAAG,EAAb;;AACE,eAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,CAAC,CAACK,MAAtB,EAA8BM,CAAC,EAA/B,EAAmC;AACjC,gBAAIX,CAAC,CAACW,CAAD,CAAD,CAAKJ,CAAL,KAAWA,CAAf,EAAkB;AAChBU,cAAAA,MAAM,CAACf,IAAP,CAAYS,CAAZ;AACD;AACF;;AACC,cAAIM,MAAM,CAACZ,MAAP,GAAgB,CAApB,EAAuB;AACrBW,YAAAA,IAAI,GAAG,IAAP,CADqB,CAErB;AACD;;AAEDT,UAAAA,CAAC;AACF;;AACK,YAAIS,IAAI,KAAK,IAAb,EAAmB;AACjB,cAAIJ,KAAK,GAAG,CAAZ;AACA,cAAIC,OAAO,GAAG1B,GAAG,CAACD,eAAe,GAAG,CAAnB,CAAH,CAAyB,CAAzB,EAA4B2B,OAA1C;AACA,cAAIxB,UAAU,GAAGF,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAAzC;AACA,eAAKV,KAAL,CAAWmC,gBAAX,CAA4BrB,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDvB,UAAlD,EAA8DL,EAA9D,EAAkED,EAAlE;AACD,SALD,MAMK;AACH,cAAI6B,KAAK,GAAG,CAAZ;AACA,cAAIC,OAAO,GAAG1B,GAAG,CAACD,eAAe,GAAG,CAAnB,CAAH,CAAyB,CAAzB,EAA4B2B,OAA1C;AACA,cAAIxB,UAAU,GAAGF,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAAzC;AACA,eAAKV,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC,EAA+CvB,UAA/C,EAA2DL,EAA3D,EAA+DD,EAA/D;AACD;;AAEP,aAAKO,QAAL,CAAc;AAAEH,UAAAA;AAAF,SAAd,EApImB,CAqIzB;;AAEI,YAAI+B,KAAK,GAAI,KAAb;;AACA,aAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIX,CAAC,CAACK,MAAF,GAAW,CAAhC,EAAmCM,CAAC,EAApC,EAAyC;AACvC,cAAIX,CAAC,CAAC,CAAD,CAAD,CAAKD,GAAL,KAAaC,CAAC,CAACW,CAAD,CAAD,CAAKZ,GAAtB,EAA2B;AACzBmB,YAAAA,KAAK,GAAG,IAAR;AACA;AACD;AACF;;AACC,YAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBxB,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,cAAIiB,KAAK,GAAG,EAAZ;AACA,cAAIC,OAAO,GAAG1B,GAAG,CAACD,eAAe,GAAG,CAAnB,CAAH,CAAyB,CAAzB,EAA4B2B,OAA1C;AACA,cAAIxB,UAAU,GAAGF,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAAzC;AACA,eAAKV,KAAL,CAAWmC,gBAAX,CAA4BrB,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDvB,UAAlD;AACD,SAND,MAQH;AACH,cAAIuB,KAAK,GAAG,EAAZ;AACA,cAAIC,OAAO,GAAG1B,GAAG,CAACD,eAAe,GAAG,CAAnB,CAAH,CAAyB,CAAzB,EAA4B2B,OAA1C;AACA,cAAIxB,UAAU,GAAGF,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAAzC;AACA,eAAKV,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC,EAA+CvB,UAA/C;AACD,SA3J0B,CA6J/B;;;AACM,YAAIF,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBiC,IAAxB,KAAiC,IAArC,EAA2C;AACzCzB,UAAAA,OAAO,CAACC,GAAR,CAAYT,eAAZ,EAA6B,WAA7B;AACA,cAAI0B,KAAK,GAAG,EAAZ;AACA,cAAIC,OAAO,GAAG1B,GAAG,CAACD,eAAe,GAAG,CAAnB,CAAH,CAAyB,CAAzB,EAA4B2B,OAA1C;AACA,cAAIxB,UAAU,GAAGF,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBG,UAAzC;AACE,eAAKV,KAAL,CAAWmC,gBAAX,CAA4BrB,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDvB,UAAlD;AACA;AACH;;AACD,YAAI8B,IAAI,GAAGhC,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBiC,IAAnC;AACA,aAAKC,uBAAL,CAA6BD,IAA7B,EAAmCnB,CAAnC,EAAsCd,eAAtC;AACH,OAxKD,MA0KG;AACHQ,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD;AACF,KAnNsB;;AAAA,SAoNvByB,uBApNuB,GAoNG,CAACD,IAAD,EAAOnB,CAAP,EAAUd,eAAV,KAA8B;AACtDQ,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ,EADsD,CAEtD;;AACA,UAAIb,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAIkC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAAb;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACE,UAAIJ,IAAI,KAAK,GAAb,EAAkB;AAChBI,QAAAA,KAAK,GAAG,CAAR;AACAD,QAAAA,MAAM,GAAG,CAAT;AACD;;AACD,UAAIH,IAAI,KAAK,GAAb,EAAkB;AAChBI,QAAAA,KAAK,GAAG,CAAR;AACAD,QAAAA,MAAM,GAAG,CAAT;AACD;;AAID,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BpB,UAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCQ,CAApC,EAAuCC,CAAvC,EAA0Cc,MAA1C,GAAmDA,MAAM,CAACC,MAAD,CAAzD;AACAA,UAAAA,MAAM;;AACN,cAAIA,MAAM,KAAK,CAAf,EAAkB;AAChBA,YAAAA,MAAM,GAAG,CAAT;AACD;;AACD,cAAIf,CAAC,KAAK,EAAV,EAAc;AACZe,YAAAA,MAAM,GAAGC,KAAT;AACD;AACF;AACF;;AACH,UAAIC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,GAAtC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,GAA/E,CAAb;AACA,UAAIC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE,CAAb;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,QAAQ,GAAG,EAAf;;AAEE,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEX,CAAC,CAACK,MAArB,EAA6BM,CAAC,EAA9B,EAAkC;AAChCjB,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCE,CAAC,CAACW,CAAD,CAAD,CAAKL,CAAzC,EAA4CN,CAAC,CAACW,CAAD,CAAD,CAAKJ,CAAjD,EAAoDc,MAAhE,EAAwErB,CAAC,CAACW,CAAD,CAAD,CAAKZ,GAA7E;AACA4B,QAAAA,QAAQ,CAACzB,IAAT,CAAc;AACZmB,UAAAA,MAAM,EAAElC,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBY,WAAxB,CAAoCE,CAAC,CAACW,CAAD,CAAD,CAAKL,CAAzC,EAA4CN,CAAC,CAACW,CAAD,CAAD,CAAKJ,CAAjD,EAAoDc,MADhD;AAEZtB,UAAAA,GAAG,EAAEC,CAAC,CAACW,CAAD,CAAD,CAAKZ;AAFE,SAAd;AAID;;AAAA;AAED,UAAIN,IAAI,GAAG,CAAX;AACA,UAAImB,KAAK,GAAG,EAAZ;AACA,UAAIC,OAAO,GAAG1B,GAAG,CAACD,eAAe,GAAG,CAAnB,CAAH,CAAyB,CAAzB,EAA4B2B,OAA1C;;AAEA,UAAIc,QAAQ,CAACtB,MAAT,KAAoB,CAAxB,EAA2B;AACzB,aAAK1B,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC;AACD,OAFD,MAGK;AACH,YAAIZ,CAAC,CAAC,CAAD,CAAD,CAAKD,GAAL,KAAa,GAAjB,EAAsB;AACrB2B,UAAAA,KAAK,GAAG,CAAR;AACA;;AACC,aAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAEX,CAAC,CAACK,MAArB,EAA6BM,CAAC,EAA9B,EAAkC;AAChC,cAAIgB,QAAQ,CAAChB,CAAD,CAAR,CAAYU,MAAZ,KAAuBI,MAAM,CAACd,CAAC,GAAGe,KAAL,CAAjC,EAA8C;AAC5ChC,YAAAA,OAAO,CAACC,GAAR,CAAYgC,QAAQ,CAAChB,CAAD,CAAR,CAAYU,MAAxB,EAAgCI,MAAM,CAACd,CAAC,GAAGe,KAAL,CAAtC,EAAmD,QAAnD,EAA6DF,MAAM,CAACb,CAAC,GAAGe,KAAL,CAAnE;;AAEA,gBAAIf,CAAC,KAAKX,CAAC,CAACK,MAAF,GAAW,CAArB,EAAwB;AACtBX,cAAAA,OAAO,CAACC,GAAR,CAAYgC,QAAQ,CAAChB,CAAD,CAAR,CAAYU,MAAxB,EAAgCI,MAAM,CAACd,CAAD,CAAtC,EAA2C,wBAA3C,EAAqEa,MAAM,CAACb,CAAC,GAAGe,KAAL,CAA3E;AACA,mBAAK/C,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC;AACAzB,cAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwB0C,MAAxB,GAAiCJ,MAAM,CAACb,CAAC,GAAGe,KAAL,CAAvC;AACA;AACD;AAEF,WAVD,MAWK;AACHhC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,iBAAKhB,KAAL,CAAWmC,gBAAX,CAA4BrB,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C;AACA;AACD;AACF;AACJ;;AAAA;AAEDlB,MAAAA,OAAO,CAACC,GAAR,CAAYgC,QAAZ,EAAsB3B,CAAC,CAACK,MAAxB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,CAACK,MAAd;AACJ,WAAKf,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AAGC,KAnSsB;;AAAA,SAoSvB0C,SApSuB,GAoSb,CAAChD,IAAD,EAAOiD,IAAP,EAAatC,IAAb,KAAqB;AAE7B;AAEA,UAAIuC,YAAY,GAAG,IAAnB;;AACE,UAAID,IAAI,KAAKlC,SAAb,EAAwB;AACtBmC,QAAAA,YAAY,GAAGD,IAAf;AACD,OAFD,MAGK;AACHC,QAAAA,YAAY,GAAG,KAAK3C,KAAL,CAAW2C,YAA1B;AACD;;AACH,UAAI5C,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAI6C,MAAM,GAAG,KAAK5C,KAAL,CAAW4C,MAAxB;AAEE7C,MAAAA,GAAG,CAAC8C,MAAJ,CAAWF,YAAX,EAAyB,CAAzB,EAA4B,EAA5B;;AACE,WAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,MAApB,EAA4BzB,CAAC,EAA7B,EAAiC;AAC/B,YAAIA,CAAC,KAAK,CAAV,EAAc;AACZ,cAAIA,CAAC,KAAK,CAAV,EAAa;AACXpB,YAAAA,GAAG,CAAC4C,YAAD,CAAH,CAAkB7B,IAAlB,CAAuB;AACrBI,cAAAA,CAAC,EAAEyB,YADkB;AAErBxB,cAAAA,CAAC,EAAEA,CAFkB;AAIrB2B,cAAAA,MAAM,EAAE,KAJa;AAKrBC,cAAAA,IAAI,EAAE,KALe;AAMrBC,cAAAA,IAAI,EAAE,CANe;AAOrBC,cAAAA,SAAS,EAAE,KAPU;AAOH;AAClBC,cAAAA,SAAS,EAAE,IARU;AAQJ;AACjBzC,cAAAA,QAAQ,EAAE,KATW;AAUrB0C,cAAAA,QAAQ,EAAE;AAVW,aAAvB;AAaD,WAdD,MAeK;AACHpD,YAAAA,GAAG,CAAC4C,YAAD,CAAH,CAAkB7B,IAAlB,CAAuB;AACrBI,cAAAA,CAAC,EAAEyB,YADkB;AAErBxB,cAAAA,CAAC,EAAEA,CAFkB;AAIrB2B,cAAAA,MAAM,EAAE,KAJa;AAKrBC,cAAAA,IAAI,EAAE,KALe;AAMrBC,cAAAA,IAAI,EAAE,CANe;AAOrBvB,cAAAA,OAAO,EAAE,IAPY;AAQrBwB,cAAAA,SAAS,EAAE,KARU;AAQH;AAClBC,cAAAA,SAAS,EAAE,IATU;AASJ;AACjBE,cAAAA,OAAO,EAAE,KAVY;AAWrB3C,cAAAA,QAAQ,EAAE,KAXW;AAYrB0C,cAAAA,QAAQ,EAAE;AAZW,aAAvB;AAeD;AACF,SAjCD,MAmCK;AACHpD,UAAAA,GAAG,CAAC4C,YAAD,CAAH,CAAkB7B,IAAlB,CAAuB;AACrBI,YAAAA,CAAC,EAAEyB,YADkB;AAErBxB,YAAAA,CAAC,EAAEA,CAFkB;AAIrB2B,YAAAA,MAAM,EAAE,KAJa;AAKrBC,YAAAA,IAAI,EAAE,KALe;AAOrBC,YAAAA,IAAI,EAAE,CAPe;AAQrBC,YAAAA,SAAS,EAAE,KARU;AAQH;AAClBC,YAAAA,SAAS,EAAE,IATU;AASJ;AAEjBG,YAAAA,MAAM,EAAE,IAXa;AAarBC,YAAAA,YAAY,EAAE,KAbO;AAcrB7C,YAAAA,QAAQ,EAAE,KAdW;AAerB0C,YAAAA,QAAQ,EAAE;AAfW,WAAvB;AAmBD;AACF,OAxEwB,CA0EzB;;;AACA,WAAK,IAAI5B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,MAAM,GAAG,CAA7B,EAAgCrB,CAAC,EAAjC,EAAqC;AAEnC,YAAGA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAAjB,IAAsBA,CAAC,KAAK,CAA5B,IAAiCA,CAAC,KAAK,EAAvC,IAA6CA,CAAC,KAAK,EAAtD,EAA2D;AACzDxB,UAAAA,GAAG,CAAC4C,YAAD,CAAH,CAAkBpB,CAAlB,EAAqB0B,SAArB,GAAgC,IAAhC;AACD;AACF;;AAED,UAAK7C,IAAI,KAAK,CAAd,EAAiB;AACf,aAAKmD,UAAL;AACD;;AACD,UAAIxD,GAAG,CAAC4C,YAAY,GAAG,CAAhB,CAAH,CAAsB,CAAtB,EAAyBlC,QAAzB,KAAsC,IAA1C,EAAgD;AAC9C,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIqB,MAAM,GAAG,CAA9B,EAAiCrB,CAAC,EAAlC,EAAsC;AACpCxB,UAAAA,GAAG,CAAC4C,YAAD,CAAH,CAAkBpB,CAAlB,EAAqB4B,QAArB,GAAgC,IAAhC;AACD;AACF;;AACD,UAAI/C,IAAI,KAAK,CAAb,EAAgB;AACd,aAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIqB,MAAM,GAAG,CAA9B,EAAiCrB,CAAC,EAAlC,EAAsC;AACpCxB,UAAAA,GAAG,CAAC4C,YAAY,GAAG,CAAhB,CAAH,CAAsBpB,CAAtB,EAAyB4B,QAAzB,GAAoC,KAApC;AACD;AACF,OA9FwB,CAgG7B;;;AAEE,WAAKK,SAAL;AACA,WAAKtD,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KAxYsB;;AAAA,SAqbvB0D,qBArbuB,GAqbEhE,IAAD,IAAU;AAEhC,UAAIyB,CAAC,GAAG,KAAKlB,KAAL,CAAWF,eAAnB;AACA,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;;AAEA,UAAIA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUT,QAAV,KAAsB,IAA1B,EAAgC;AAC9BH,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA;AACD;;AAED,UAAIR,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcT,QAAd,KAA0B,IAA9B,EAAoC;AAClC,YAAIS,CAAC,KAAKnB,GAAG,CAACkB,MAAd,EAAsB;AACpBX,UAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACA;AACD;;AACD,YAAIR,GAAG,CAACkB,MAAJ,KAAeC,CAAC,GAAG,CAAvB,EAA0B;AAExB,cAAInB,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcT,QAAd,KAA0B,IAA9B,EAAqC;AACnCH,YAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ;AACA;AACD;AACF;AACF;;AAEC,UAAIW,CAAC,KAAK,CAAV,EAAa;AAEbZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ,EAAenB,GAAf;AACEA,QAAAA,GAAG,CAAC8C,MAAJ,CAAW3B,CAAX,EAAc,CAAd,EAAiB,EAAjB;AAEMnB,QAAAA,GAAG,CAACmB,CAAD,CAAH,CAAOJ,IAAP,CAAY;AACVI,UAAAA,CAAC,EAAEA,CADO;AAEVT,UAAAA,QAAQ,EAAE,IAFA;AAIVsB,UAAAA,IAAI,EAAE,IAJI;AAMV;AAEA2B,UAAAA,EAAE,EAAE,IARM;AASVC,UAAAA,IAAI,EAAE,IATI;AAUV;AACAnB,UAAAA,MAAM,EAAE,IAXE;AAaVc,UAAAA,YAAY,EAAE,KAbJ;AAcVM,UAAAA,SAAS,EAAE,IAdD;AAgBV3D,UAAAA,UAAU,EAAE,GAhBF;AAiBVN,UAAAA,EAAE,EAAE,CAjBM;AAkBVC,UAAAA,EAAE,EAAE,CAlBM;AAoBVc,UAAAA,WAAW,EAAE;AApBH,SAAZ;AAsBVJ,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACmB,CAAD,CAAf;;AACU,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BxB,UAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUR,WAAV,CAAsBI,IAAtB,CAA2B,EAA3B;;AACA,eAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BpB,YAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUR,WAAV,CAAsBa,CAAtB,EAAyBT,IAAzB,CAA8B;AAC1BlB,cAAAA,EAAE,EAAE,KADsB;AAE1Be,cAAAA,GAAG,EAAE,EAFqB;AAG1BsB,cAAAA,MAAM,EAAE;AAHkB,aAA9B;AAKC;AACJ;;AAEP,aAAKuB,SAAL;AAEAzD,QAAAA,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcoC,YAAd,GAA6B,KAA7B;AAAoChD,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,CAAZ;AACpCnB,QAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUoC,YAAV,GAAyB,IAAzB;AACAvD,QAAAA,GAAG,CAACmB,CAAC,GAAI,CAAN,CAAH,CAAY,CAAZ,EAAekC,OAAf,GAAwB,KAAxB;AAEA,aAAKlD,QAAL,CAAc;AACZH,UAAAA,GADY;AAEZD,UAAAA,eAAe,EAAEoB;AAFL,SAAd;AAIA,aAAK3B,KAAL,CAAWsE,YAAX;AACAvD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWD,GAAvB;AACA,aAAKwD,UAAL;AAEA,YAAInD,IAAI,GAAG,CAAX;AACA,YAAIsC,IAAI,GAAG,IAAX;AACA,YAAIjB,OAAO,GAAG,CAAd;AACNnB,QAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;;AACM,aAAK,IAAIN,CAAC,GAAGM,CAAC,GAAG,CAAjB,EAAoBN,CAAC,IAAI,CAAzB,EAA4BA,CAAC,EAA7B,EAAiC;AAC/BN,UAAAA,OAAO,CAACC,GAAR,CAAYK,CAAC,GAAG,CAAhB,EAAkBb,GAAG,CAACa,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,CAAlB;;AACE,cAAIb,GAAG,CAACa,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcH,QAAd,KAA2B,IAA/B,EAAqC;AACnCgB,YAAAA,OAAO,GAAG1B,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUa,OAAV,GAAoB,CAA9B;AACA;AACD;;AAED,cAAI1B,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUwC,OAAV,KAAsB,IAA1B,EAAgC;AAC9B3B,YAAAA,OAAO,GAAG1B,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUa,OAAV,GAAoB,CAA9B;AACA;AACD;AACF;;AACD1B,QAAAA,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcO,OAAd,GAAwBA,OAAxB;AACA,aAAKqC,aAAL,CAAmB5C,CAAC,GAAG,CAAvB,EAA0BwB,IAA1B,EAAgCtC,IAAhC;;AAEA,aAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKvB,KAAL,CAAW4C,MAAX,GAAoB,CAAzC,EAA4CrB,CAAC,EAA7C,EAAiD;AAC/CxB,UAAAA,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAWK,CAAX,EAAc4B,QAAd,GAAwB,IAAxB;AACD;;AAED,YAAIpD,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAc8B,IAAd,GAAqB,CAAzB,EAA4B;AAC1B,cAAI5C,IAAI,GAAG,CAAX;AACA,eAAK2D,iBAAL,CAAuB7C,CAAvB,EAA0BwB,IAA1B,EAAgCtC,IAAhC;AACD;AACJ,OAhFD,MAiFK;AACHE,QAAAA,OAAO,CAACC,GAAR,CAAa,aAAb;AACD;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAa,KAAKP,KAAL,CAAWD,GAAxB;AACH,KAliBsB;;AAAA,SAmiBvBiE,qBAniBuB,GAmiBEvE,IAAD,IAAU;AAClC,UAAIM,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAImB,CAAC,GAAG,KAAKlB,KAAL,CAAWF,eAAnB;;AAEE,UAAIoB,CAAC,KAAK,CAAV,EAAa;AACXZ,QAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACA;AACD;;AACGR,MAAAA,GAAG,CAAC8C,MAAJ,CAAW3B,CAAX,EAAc,CAAd;AAEA,WAAK+C,UAAL;AACAlE,MAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUkC,OAAV,GAAoB,IAApB;;AAGA,WAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKvB,KAAL,CAAW4C,MAAX,GAAoB,CAAzC,EAA4CrB,CAAC,EAA7C,EAAiD;AAC/CxB,QAAAA,GAAG,CAACmB,CAAD,CAAH,CAAOK,CAAP,EAAU4B,QAAV,GAAoB,KAApB;AACD;;AAGD,WAAKjD,QAAL,CAAe;AAAEH,QAAAA;AAAF,OAAf;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ,EAAe,KAAKlB,KAAL,CAAWD,GAA1B;AACL,KAxjBsB;;AAAA,SAqkBvBwD,UArkBuB,GAqkBV9D,IAAI,IAAI;AAEnB,UAAIyB,CAAC,GAAG,KAAKlB,KAAL,CAAWF,eAAX,GAA6B,CAArC;AACA,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAI6C,MAAM,GAAG,KAAK5C,KAAL,CAAW4C,MAAxB;AACA,UAAIsB,SAAS,GAAGnE,GAAG,CAACkB,MAApB;AACFX,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;;AACE,UAAIA,CAAC,KAAKnB,GAAG,CAACkB,MAAJ,GAAY,CAAtB,EAAyB;AACtB;AACF;;AAED,WAAK,IAAIL,CAAC,GAAGM,CAAb,EAAgBN,CAAC,GAAGsD,SAApB,EAAgCtD,CAAC,EAAjC,EAAqC;AACnC,YAAIb,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUH,QAAV,KAAuB,KAA3B,EAAkC;AAChC,eAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,MAApB,EAA6BrB,CAAC,EAA9B,EAAkC;AAChCxB,YAAAA,GAAG,CAACa,CAAD,CAAH,CAAOW,CAAP,EAAUL,CAAV,GAAcN,CAAd;AACD;AACF,SAJD,MAKK;AACHb,UAAAA,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUM,CAAV,GAAcN,CAAd;AACD;AACF;;AACD,WAAKV,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACD,KA3lBsB;;AAAA,SA4lBvBkE,UA5lBuB,GA4lBVxE,IAAI,IAAI;AAEnB,UAAIyB,CAAC,GAAG,KAAKlB,KAAL,CAAWF,eAAnB;AACA,UAAIC,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAI6C,MAAM,GAAG,KAAK5C,KAAL,CAAW4C,MAAxB;AACA,UAAIsB,SAAS,GAAGnE,GAAG,CAACkB,MAApB;;AAEA,WAAK,IAAIL,CAAC,GAAGM,CAAb,EAAgBN,CAAC,GAAGsD,SAApB,EAAgCtD,CAAC,EAAjC,EAAqC;AACnC,YAAIb,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUH,QAAV,KAAuB,KAA3B,EAAkC;AAChC,eAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,MAApB,EAA6BrB,CAAC,EAA9B,EAAkC;AAChCxB,YAAAA,GAAG,CAACa,CAAD,CAAH,CAAOW,CAAP,EAAUL,CAAV,GAAcN,CAAd;AACD;AACF,SAJD,MAKK;AACHb,UAAAA,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUM,CAAV,GAAcN,CAAd;AACD;AACF;;AAED,WAAKV,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd,EAlBmB,CAoBrB;AACC,KAjnBsB;;AAAA,SAknBvBoE,SAlnBuB,GAknBX1E,IAAI,IAAI;AAClBa,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AAEA,UAAI,KAAKhB,KAAL,CAAWM,MAAX,KAAsB,CAA1B,EAA6B;AAEzB,YAAIE,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,YAAI2C,IAAI,GAAGjD,IAAI,CAACyB,CAAhB;AACA,YAAId,IAAI,GAAG,CAAX;AACA,YAAIqB,OAAO,GAAG1B,GAAG,CAACN,IAAI,CAACyB,CAAN,CAAH,CAAY,CAAZ,EAAeO,OAA7B;AAEA1B,QAAAA,GAAG,CAACN,IAAI,CAACyB,CAAN,CAAH,CAAY,CAAZ,EAAeO,OAAf,GAAyB,IAAzB;AAEE,aAAKgB,SAAL,CAAehD,IAAf,EAAqBiD,IAArB,EAA2BtC,IAA3B;AAEFL,QAAAA,GAAG,CAACN,IAAI,CAACyB,CAAL,GAAS,CAAV,CAAH,CAAgB,CAAhB,EAAmBO,OAAnB,GAA6BA,OAA7B;AACA1B,QAAAA,GAAG,CAACN,IAAI,CAACyB,CAAL,GAAS,CAAV,CAAH,CAAgBzB,IAAI,CAAC0B,CAArB,EAAwB2B,MAAxB,GAAiC,IAAjC;AACA/C,QAAAA,GAAG,CAACN,IAAI,CAACyB,CAAL,GAAS,CAAV,CAAH,CAAgBzB,IAAI,CAAC0B,CAArB,EAAwB4B,IAAxB,GAA+B,KAAKxD,KAAL,CAAWwD,IAA1C;;AACE,aAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKvB,KAAL,CAAW4C,MAAX,GAAoB,CAAzC,EAA4CrB,CAAC,EAA7C,EAAiD;AAC/CxB,UAAAA,GAAG,CAACN,IAAI,CAACyB,CAAL,GAAS,CAAV,CAAH,CAAgBK,CAAhB,EAAmByB,IAAnB,GAA0B,KAAKzD,KAAL,CAAWyD,IAArC;AACD;;AACD,YAAI9B,CAAC,GAAGzB,IAAI,CAACyB,CAAb;AACAd,QAAAA,IAAI,GAAG,CAAP;AACA,aAAKgE,mBAAL,CAAyBlD,CAAzB,EAA4Bd,IAA5B;AACJ,aAAKF,QAAL,CAAc;AAAEH,UAAAA;AAAF,SAAd;AACD;;AAED,UAAI,KAAKR,KAAL,CAAWM,MAAX,KAAsB,CAA1B,EAA6B;AAC3BS,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,YAAI,KAAKP,KAAL,CAAWD,GAAX,CAAeN,IAAI,CAACyB,CAAL,GAAS,CAAxB,EAA2B,CAA3B,EAA8BT,QAA9B,KAA2C,IAA/C,EAAqD;AAAE;AACrDH,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACF;AACC;;AACD,YAAI8D,GAAG,GAAG,IAAV;AACA,aAAK9E,KAAL,CAAW+E,6BAAX,CAAyCD,GAAzC;AACA,aAAKE,OAAL,CAAa9E,IAAI,GAAG,CAApB,EAR2B,CAQH;AACzB;AACF,KAtpBsB;;AAAA,SAupBvB+E,UAvpBuB,GAupBV/E,IAAI,IAAI;AACnBa,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA8Bd,IAAI,CAACyB,CAAL,GAAS,CAAvC;AAEA,UAAInB,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;;AACA,UAAI,KAAKR,KAAL,CAAWM,MAAX,KAAsB,CAA1B,EAA6B;AACzB,YAAIJ,IAAI,CAACyB,CAAL,GAAS,CAAT,KAAenB,GAAG,CAACkB,MAAvB,EAA+B;AAC7BX,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,cAAIH,IAAI,GAAG,CAAX;AACA,cAAIqE,IAAI,GAAGhF,IAAI,CAACyB,CAAL,GAAS,CAApB;AACA,eAAKwD,OAAL,CAAajF,IAAb,EAAmBW,IAAnB,EAAyBqE,IAAzB,EAJ6B,CAIG;AACjC;AACJ;;AACD,UAAI,KAAKlF,KAAL,CAAWM,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,YAAI6C,IAAI,GAAGjD,IAAI,CAACyB,CAAL,GAAS,CAApB;AAEE,aAAKuB,SAAL,CAAehD,IAAf,EAAqBiD,IAArB;AAEA3C,QAAAA,GAAG,CAACN,IAAI,CAACyB,CAAL,GAAS,CAAV,CAAH,CAAgBzB,IAAI,CAAC0B,CAArB,EAAwB2B,MAAxB,GAAiC,IAAjC;AACA/C,QAAAA,GAAG,CAACN,IAAI,CAACyB,CAAL,GAAS,CAAV,CAAH,CAAgBzB,IAAI,CAAC0B,CAArB,EAAwB4B,IAAxB,GAA+B,KAAKxD,KAAL,CAAWwD,IAA1C;;AAEE,aAAK,IAAIxB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKvB,KAAL,CAAW4C,MAAX,GAAoB,CAAzC,EAA4CrB,CAAC,EAA7C,EAAiD;AAC/CxB,UAAAA,GAAG,CAACN,IAAI,CAACyB,CAAL,GAAS,CAAV,CAAH,CAAgBK,CAAhB,EAAmByB,IAAnB,GAA0B,KAAKzD,KAAL,CAAWyD,IAArC;AACD;;AAED,aAAKO,UAAL,CAAgB9D,IAAhB;AACA,aAAKS,QAAL,CAAc;AAAEH,UAAAA;AAAF,SAAd;AACA,YAAImB,CAAC,GAAGzB,IAAI,CAACyB,CAAb;AACA,YAAId,IAAI,GAAG,CAAX;AACA,aAAKgE,mBAAL,CAAyBlD,CAAzB,EAA4Bd,IAA5B;AACL;;AAED,UAAI,KAAKb,KAAL,CAAWM,MAAX,KAAsB,CAA1B,EAA6B;AAE3B,YAAIwE,GAAG,GAAG,IAAV;AACA,YAAIjE,IAAI,GAAG,CAAX;AACA,YAAIqE,IAAI,GAAGhF,IAAI,CAACyB,CAAL,GAAS,CAApB;AACA,aAAK3B,KAAL,CAAW+E,6BAAX,CAAyCD,GAAzC;AACA,aAAKE,OAAL,CAAa9E,IAAb,EAAmBW,IAAnB,EAAyBqE,IAAzB,EAN2B,CAMK;AAEjC;AAEF,KAhsBsB;;AAAA,SAisBvBE,KAjsBuB,GAisBf,CAAClF,IAAD,EAAOW,IAAP,EAAaT,EAAb,EAAiBC,EAAjB,KAAwB;AAE9B,UAAIG,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAIF,MAAM,GAAG,KAAKN,KAAL,CAAWM,MAAxB;;AACE,UAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,YAAIwE,GAAG,GAAG,KAAV;AACA,aAAK9E,KAAL,CAAW+E,6BAAX,CAAyCD,GAAzC;AACA,YAAII,IAAJ;AACA,aAAKC,OAAL,CAAajF,IAAb,EAAmBW,IAAnB,EAAyBqE,IAAzB,EAA+B9E,EAA/B,EAAmCC,EAAnC,EAJgB,CAIuB;AACxC;;AAEC,UAAIC,MAAM,KAAK,CAAf,EAAkB;AAChB,YAAIwE,GAAG,GAAG,IAAV;AACA,aAAK9E,KAAL,CAAW+E,6BAAX,CAAyCD,GAAzC;AACA,aAAKO,OAAL,CAAanF,IAAb,EAHgB,CAGI;AACrB;;AAEC,UAAII,MAAM,KAAK,CAAf,EAAkB;AAChB,YAAIwE,GAAG,GAAG,IAAV;AACA,aAAK9E,KAAL,CAAW+E,6BAAX,CAAyCD,GAAzC;AACA,aAAKE,OAAL,CAAa9E,IAAb,EAHgB,CAGI;AACrB;;AAEP,WAAKS,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACD,KAztBsB;;AAAA,SA0tBvB2E,OA1tBuB,GA0tBb,CAACjF,IAAD,EAAOW,IAAP,EAAaqE,IAAb,EAAmB9E,EAAnB,EAAuBC,EAAvB,KAA8B;AAEtC,UAAIG,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAIL,MAAM,GAAGD,IAAI,CAACyB,CAAlB;;AACE,UAAId,IAAI,KAAK,CAAb,EAAgB;AACdV,QAAAA,MAAM,GAAG+E,IAAT;AACD;;AACD,UAAI3E,eAAe,GAAG,KAAKE,KAAL,CAAWF,eAAjC;AACEC,MAAAA,GAAG,CAACD,eAAD,CAAH,CAAqB,CAArB,EAAwBwD,YAAxB,GAAuC,KAAvC;AACAvD,MAAAA,GAAG,CAACL,MAAD,CAAH,CAAY,CAAZ,EAAe4D,YAAf,GAA8B,IAA9B;;AAEE,UAAIvD,GAAG,CAACL,MAAD,CAAH,CAAY,CAAZ,EAAee,QAAf,KAA4B,IAAhC,EAAsC;AACpC,aAAKlB,KAAL,CAAWsE,YAAX;AACD,OAFD,MAGO;AACH,aAAKtE,KAAL,CAAWsF,aAAX;AACD;;AACC,WAAK3E,QAAL,CAAc;AACZgB,QAAAA,CAAC,EAAExB,MADS;AAEZI,QAAAA,eAAe,EAAEJ;AAFL,OAAd;;AAKJ,UAAIU,IAAI,KAAK,CAAb,EAAgB;AACd,aAAKZ,GAAL,CAASC,IAAT,EAAeC,MAAf,EAAuBC,EAAvB,EAA2BC,EAA3B;AACD;AAER,KApvBsB;;AAAA,SAqvBvBgF,OArvBuB,GAqvBbnF,IAAI,IAAI;AAAE;AAClB,UAAIM,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAI+E,WAAW,GAAG/E,GAAG,CAACN,IAAI,CAACyB,CAAN,CAAH,CAAYzB,IAAI,CAAC0B,CAAjB,CAAlB,CAFgB,CAEuB;;AACvC,UAAID,CAAC,GAAGzB,IAAI,CAACyB,CAAb;AACA,UAAI8B,IAAI,GAAG,KAAKzD,KAAL,CAAWyD,IAAtB;AACA1C,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB;;AAEA,UAAIQ,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUT,QAAV,KAAuB,KAA3B,EAAkC;AAE9B,YAAIqE,WAAW,CAAChC,MAAZ,KAAuB,KAA3B,EAAkC;AACtC;AACM,cAAIiC,KAAK,GAAGhF,GAAG,CAACmB,CAAD,CAAH,CAAO8D,SAAP,CAAiBvF,IAAI,IAAI;AACnC,gBAAIA,IAAI,CAACqD,MAAL,KAAgB,IAApB,EACE,OAAO,IAAP,CADF,KAEK;AAAC,qBAAO,KAAP;AAAc;AACrB,WAJW,CAAZ,CAFgC,CAOtC;;AACQ,cAAIiC,KAAK,KAAK,CAAC,CAAX,IAAgBhF,GAAG,CAACkB,MAAJ,GAAa,CAAb,KAAmBC,CAAvC,EAAyC;AAAE;AACvC,iBAAKhB,QAAL,CAAc;AACZyC,cAAAA,YAAY,EAAEzB;AADF,aAAd,EADqC,CAIrC;AACH;;AACD,cAAIzB,IAAI,CAACyB,CAAL,KAAW,CAAf,EAAkB;AAChBnB,YAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAU0B,OAAV,GAAoB,CAApB;AACD;;AAECqD,UAAAA,WAAW,CAAChC,MAAZ,GAAqB,IAArB;AACAxC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWwD,IAAvB,EAA6B+B,WAAW,CAAC/B,IAAzC;AACA+B,UAAAA,WAAW,CAAC/B,IAAZ,GAAmB,KAAKxD,KAAL,CAAWwD,IAA9B;AACA+B,UAAAA,WAAW,CAAC9B,IAAZ,GAAmBA,IAAnB;AACA,cAAI5C,IAAI,GAAG,CAAX;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,eAAK6D,mBAAL,CAAyBlD,CAAzB,EAA4Bd,IAA5B,EAxB4B,CAyBhC;;AACAL,UAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO8D,SAAP,CAAiBvF,IAAI,IAAI;AACvBA,YAAAA,IAAI,CAACuD,IAAL,GAAYA,IAAZ;AACA,mBAAO,IAAP;AACD,WAHD;AAID,SA9BD,MAgCK;AAAE;AACL8B,UAAAA,WAAW,CAAChC,MAAZ,GAAqB,KAArB;AACAxC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACE,cAAIwE,KAAK,GAAGhF,GAAG,CAACmB,CAAD,CAAH,CAAO8D,SAAP,CAAiBvF,IAAI,IAAI;AAAG;AACtC,gBAAIA,IAAI,CAACqD,MAAL,KAAgB,IAApB,EACE,OAAO,IAAP,CADF,KAEK;AAAC,qBAAO,KAAP;AAAc;AACrB,WAJW,CAAZ;;AAKE,cAAIiC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAClBzE,YAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ;;AACE,gBAAIA,CAAC,KAAK,CAAV,EAAa;AACX,kBAAIA,CAAC,GAAG,CAAJ,KAAUnB,GAAG,CAACkB,MAAlB,EAA0B;AACxB,oBAAIlB,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUkC,OAAV,KAAsB,IAA1B,EAAgC;AAAC;AAE/B,sBAAIrD,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAckC,OAAd,KAA0B,KAA9B,EAAqC;AACnCrD,oBAAAA,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAckC,OAAd,GAAwB,IAAxB;AACArD,oBAAAA,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcO,OAAd,GAAwB1B,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUO,OAAlC;AACA1B,oBAAAA,GAAG,CAAC8C,MAAJ,CAAW3B,CAAX,EAAc,CAAd;AACA,yBAAK+C,UAAL,CAAgBxE,IAAhB;AACD,mBALD,MAMK;AACH,wBAAImB,CAAC,GAAG,CAAR;;AACA,2BAAOA,CAAC,IAAI,KAAKZ,KAAL,CAAW4C,MAAX,GAAoB,CAAhC,EAAmC;AACjC7C,sBAAAA,GAAG,CAACmB,CAAD,CAAH,CAAON,CAAP,EAAUoC,IAAV,GAAiB,CAAjB;AACApC,sBAAAA,CAAC;AACF;;AACD,wBAAIP,IAAI,GAAG,CAAX;AACA,wBAAImB,KAAK,GAAG,CAAZ;AACA,wBAAIC,OAAO,GAAG1B,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUO,OAAxB;AACA,yBAAKlC,KAAL,CAAW0F,gBAAX,CAA4B5E,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C;AACD;AACF,iBAnBD,MAqBK;AACHzB,kBAAAA,GAAG,CAAC8C,MAAJ,CAAW3B,CAAX,EAAc,CAAd;AACA,uBAAK+C,UAAL,CAAgBxE,IAAhB;AACA;AACD;AACF;AACF;AACF;AACN;;AACD,aAAKS,QAAL,CAAc;AACZgB,UAAAA,CAAC,EAAEA;AADS,SAAd;AAGH,OA/ED,MAiFK;AACHZ,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;AAEF,KAj1BsB;;AAAA,SAk1BvBgE,OAl1BuB,GAk1Bb,CAAC9E,IAAD,EAAOW,IAAP,EAAaqE,IAAb,KAAsB;AAAE;AAChC,UAAIvD,CAAC,GAAGzB,IAAI,CAACyB,CAAb;;AACA,UAAId,IAAI,KAAK,CAAb,EAAgB;AACdc,QAAAA,CAAC,GAAGuD,IAAJ;AACD;;AACD,UAAI1E,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACFO,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ,EAAenB,GAAG,CAACkB,MAAnB;;AACE,UAAIC,CAAC,KAAKnB,GAAG,CAACkB,MAAd,EAAwB;AACtBX,QAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACE;AAEH;;AACC,UAAIW,CAAC,KAAK,CAAN,IAAWnB,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUT,QAAV,KAAuB,IAAtC,EAA4C;AAAE;AAC5CH,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAED,OAHD,MAIK;AACH,YAAKR,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcT,QAAd,KAA2B,KAAhC,EAAuC;AACrC,cAAKV,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAckC,OAAd,KAA0B,IAA/B,EAAsC;AACpC9C,YAAAA,OAAO,CAACC,GAAR,CAAY,iEAAZ;AACD,WAFD,MAGI;AACI,gBAAIR,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUkC,OAAV,KAAsB,KAA1B,EAAiC;AAAI;AACnCrD,cAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUkC,OAAV,GAAmB,IAAnB;AACA,kBAAIhD,IAAI,GAAG,CAAX;AACAE,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,mBAAKF,QAAL,CAAc;AAAEH,gBAAAA;AAAF,eAAd;AACA,mBAAKqE,mBAAL,CAAyBlD,CAAzB,EAA4Bd,IAA5B,EAL+B,CAKM;AACtC,aAND,MAOK;AAAY;AACfL,cAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUkC,OAAV,GAAoB,KAApB;AACArD,cAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUO,OAAV,GAAoB,IAApB;AACA,kBAAIrB,IAAI,GAAG,CAAX;AACA,mBAAKF,QAAL,CAAc;AAAEH,gBAAAA;AAAF,eAAd;AACA,mBAAKqE,mBAAL,CAAyBlD,CAAzB,EAA4Bd,IAA5B,EALG,CAKgC;;AACnC,kBAAIsC,IAAJ;AACA,mBAAKoB,aAAL,CAAmB5C,CAAnB,EAAsBwB,IAAtB,EAA4BtC,IAA5B;AACA,kBAAIqB,OAAO,GAAG,CAAd;;AACA,mBAAK,IAAIb,CAAC,GAAGb,GAAG,CAACkB,MAAJ,GAAa,CAA1B,EAA6BL,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACxCN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ,EAAeb,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUa,OAAzB;;AACA,oBAAI1B,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUa,OAAV,KAAsB,IAA1B,EAAgC;AAC9BnB,kBAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,CAAZ;AACAa,kBAAAA,OAAO,GAAG1B,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUa,OAAV,GAAoB,CAA9B;AACA;AACD;AACF;;AACD,mBAAKlC,KAAL,CAAW2F,qBAAX,CAAiCzD,OAAjC;AAED;AACF;AACF;AACJ;AACR,KAt4BsB;;AAAA,SAu4BvB0D,WAv4BuB,GAu4BT1F,IAAI,IAAI;AAAE;AACtB,UAAIM,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAImB,CAAC,GAAG,KAAKlB,KAAL,CAAWF,eAAnB;AACAC,MAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUa,IAAV,GAAiB,KAAKxC,KAAL,CAAWwC,IAA5B;AAAkChC,MAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUwC,EAAV,GAAe,KAAKnE,KAAL,CAAWmE,EAA1B;AAA8B3D,MAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUyC,IAAV,GAAiB,KAAKpE,KAAL,CAAWoE,IAA5B;AAAkC5D,MAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUsB,MAAV,GAAmB,KAAKjD,KAAL,CAAWiD,MAA9B,CAH9E,CAInB;;AACC,UAAIzC,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUwC,EAAV,KAAiB,IAAjB,IAAyB3D,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUyC,IAAV,KAAmB,IAAhD,EAAsD;AACpDrD,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,OAFD,MAGK;AACH;AACA,YAAIW,CAAC,KAAK,CAAV,EAAa;AACXnB,UAAAA,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcO,OAAd,GAAwB,CAAxB;AAED;;AAED,YAAIpB,IAAI,GAAG,CAAX;AACA,YAAImB,KAAK,GAAG,CAAZ;AACA,YAAIC,OAAO,GAAG1B,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcO,OAA5B;AACAnB,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBoB,OAAlB,EAA2BD,KAA3B;AACE,aAAKjC,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC;AAEF,aAAK4D,UAAL,CAAgBlE,CAAhB;AACA,YAAIwB,IAAI,GAAGxB,CAAX;AACA,YAAId,IAAI,GAAG,CAAX;AACE,aAAKiF,iBAAL,CAAwBnE,CAAC,GAAG,CAA5B,EAA+BwB,IAA/B,EAAqCtC,IAArC;AAEH,OA1BiB,CA2BnB;;;AACG,UAAIL,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUoE,IAAV,KAAkB,IAAtB,EAA4B;AAC1BhF,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,OAFD,MAGK;AACH,YAAIF,IAAI,GAAG,CAAX;AACA,YAAImB,KAAK,GAAG,CAAZ;AACA,YAAIC,OAAO,GAAG1B,GAAG,CAACmB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcO,OAA5B;AACA,aAAKlC,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC;AACAA,QAAAA,KAAK,GAAG,CAAR;AACA,aAAKjC,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC;AACEnB,QAAAA,IAAI,GAAG,CAAP;AACAmB,QAAAA,KAAK,GAAG,EAAR;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBoB,OAAlB,EAA2BD,KAA3B;AACA,aAAKjC,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC;AACE,YAAI1B,eAAe,GAAGoB,CAAtB;AACA,YAAId,IAAI,GAAG,CAAX;AACA,YAAIT,EAAE,GAAG,IAAT;AACA,YAAIC,EAAE,GAAG,IAAT;AACE,aAAKO,GAAL,CAASV,IAAT,EAAeK,eAAf,EAAgCH,EAAhC,EAAoCC,EAApC,EAAwCQ,IAAxC;AAENL,QAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUsB,MAAV,GAAmB,GAAnB;AACD;;AAEJ,WAAKtC,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;;AAEH,WAAKmB,CAAC,GAAE,CAAR,EAAWA,CAAC,GAAGnB,GAAG,CAACkB,MAAJ,GAAa,CAA5B,EAA+BC,CAAC,EAAhC,EAAoC;AAClC,YAAInB,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUT,QAAV,KAAuB,IAA3B,EAAiC;AAC/B,cAAIsB,IAAI,GAAGhC,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUa,IAArB;AACA,cAAI2B,EAAE,GAAG3D,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUwC,EAAnB;AACA,cAAIC,IAAI,GAAG5D,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUyC,IAArB;AACA,cAAInB,MAAM,GAAIzC,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUsB,MAAxB;AACAlC,UAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,CAAZ,EAAsBa,IAAtB,EAA4B2B,EAA5B,EAAgCC,IAAhC,EAAsCnB,MAAtC;AACD;AACF;AACA,KAr8BsB;;AAAA,SAs8BvB4B,mBAt8BuB,GAs8BD,CAAClD,CAAD,EAAId,IAAJ,KAAa;AACjCE,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ,EAAed,IAAf,EAAqB,gCAArB;AACA,UAAIL,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAI2C,IAAI,GAAG,CAAX,CAHiC,CAGlB;;AACf,WAAK,IAAInB,CAAC,GAAGL,CAAb,EAAgBK,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAAE;AAE7B,YAAIxB,GAAG,CAACwB,CAAD,CAAH,CAAO,CAAP,EAAUd,QAAV,KAAuB,IAA3B,EAAiC;AAC/BiC,UAAAA,IAAI,GAAGnB,CAAP;AACA;AACD;AACF,OAVgC,CAWjC;;;AACM,UAAInB,IAAI,KAAK,CAAb,EAAgB;AACd,YAAIA,IAAI,GAAG,CAAX;AACA,aAAKmF,kBAAL,CAAwBrE,CAAxB,EAA2BwB,IAA3B,EAAiCtC,IAAjC;AACD;;AACD,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACd,YAAIA,IAAI,GAAG,CAAX;AACA,aAAKoF,gBAAL,CAAsBtE,CAAtB,EAAyBwB,IAAzB,EAA+BtC,IAA/B;AACA,aAAKiF,iBAAL,CAAwBnE,CAAxB,EAA2BwB,IAA3B,EAAiCtC,IAAjC;AACD,OApB0B,CAqBjC;;;AACA,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACd,YAAIA,IAAI,GAAG,CAAX;AACA,aAAK2D,iBAAL,CAAuB7C,CAAvB,EAA0BwB,IAA1B,EAAgCtC,IAAhC;AACD;AAEF,KAj+BsB;;AAAA,SAm+BvBoF,gBAn+BuB,GAm+BN,CAACtE,CAAD,EAAIwB,IAAJ,EAAUtC,IAAV,KAAkB;AACjCE,MAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,UAAIR,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;;AAEE,UAAIK,IAAI,KAAK,CAAb,EAAgB;AACd,YAAIqF,QAAQ,GAAG,CAAf;;AACE,aAAK,IAAI7E,CAAC,GAAG8B,IAAb,EAAmB9B,CAAC,IAAGb,GAAG,CAACkB,MAAJ,GAAa,CAApC,EAAuCL,CAAC,EAAxC,EAA4C;AAE1C,cAAIb,GAAG,CAACa,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcH,QAAd,KAA2B,KAA/B,EAAsC;AACpC,gBAAIV,GAAG,CAACa,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcwC,OAAd,KAA0B,IAA9B,EAAmC;AACjCqC,cAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAtB;AACAnF,cAAAA,OAAO,CAACC,GAAR,CAAaR,GAAG,CAACa,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcH,QAA3B;AACD;AACF;AACF;;AAED,YAAIgF,QAAQ,KAAK,CAAjB,EAAoB;AAClB,cAAIhE,OAAO,GAAG1B,GAAG,CAAC2C,IAAI,GAAG,CAAR,CAAH,CAAc,CAAd,EAAiBjB,OAA/B;AACA,cAAIpB,IAAI,GAAG,CAAX;AACA,cAAImB,KAAK,GAAG,CAAZ;AACAlB,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBmB,KAAlB,EAAyBC,OAAzB,EAAmC1B,GAAG,CAAC2C,IAAI,GAAG,CAAR,CAAH,CAAc,CAAd,EAAiBjB,OAApD;AAEA,eAAKlC,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCD,KAAxC;AACD;;AACDlB,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BkF,QAA1B;AAED;AACN,KA9/BsB;;AAAA,SA+/BvBF,kBA//BuB,GA+/BH,CAACrE,CAAD,EAAIwB,IAAJ,EAAUtC,IAAV,KAAiB;AACnCE,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ,EAAewB,IAAf,EAAqB,6CAArB;AACA,UAAI3C,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;;AACE,UAAIK,IAAI,KAAK,CAAb,EAAgB;AACd,YAAIsF,QAAQ,GAAG3F,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAakB,SAA5B;AACA,YAAInC,OAAO,GAAG1B,GAAG,CAAC2C,IAAI,GAAG,CAAR,CAAH,CAAc,CAAd,EAAiBjB,OAA/B;AACA,YAAIpB,IAAI,GAAG,CAAX;AACA,YAAImB,KAAK,GAAG,CAAZ;;AACE,YAAIkE,QAAQ,KAAK,IAAjB,EAAuB;AAAG;AACxB,cAAItF,IAAI,GAAG,CAAX;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkBmB,KAAlB,EAAyBC,OAAzB,EAAmC1B,GAAG,CAAC2C,IAAI,GAAG,CAAR,CAAH,CAAc,CAAd,EAAiBjB,OAApD;AACA,eAAKqC,aAAL,CAAmB5C,CAAnB,EAAsBwB,IAAtB,EAA4BtC,IAA5B,EAHqB,CAGa;;AAClC,cAAIsD,EAAE,GAAG3D,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAagB,EAAtB;AACA,cAAIC,IAAI,GAAG5D,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAaiB,IAAxB;AACA,cAAIC,SAAS,GAAG7D,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAakB,SAA7B;AACA,cAAI+B,cAAc,GAAG5F,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAaiD,cAAlC;AACA,eAAKpG,KAAL,CAAW0F,gBAAX,CAA4B5E,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDkC,EAAlD,EAAsDC,IAAtD,EAA4DC,SAA5D,EAAuE+B,cAAvE;AACD,SATD,MAWK;AAAC;AACJ,cAAIvF,IAAI,GAAG,CAAX;AACA,eAAK0D,aAAL,CAAmB5C,CAAnB,EAAsBwB,IAAtB,EAA4BtC,IAA5B,EAFG,CAE+B;;AAClCE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,eAAK8E,iBAAL,CAAuBnE,CAAvB,EAA0BwB,IAA1B,EAAgCtC,IAAhC,EAJG,CAIwC;AAC5C;AACJ;;AACD,UAAIA,IAAI,KAAK,CAAb,EAAgB;AACdE,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAED;AACJ,KA7hCsB;;AAAA,SA8hCvBuD,aA9hCuB,GA8hCP,CAAC5C,CAAD,EAAIwB,IAAJ,EAAUtC,IAAV,KAAmB;AAAE;AACnCE,MAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ,EAAewB,IAAf,EAAqBtC,IAArB,EAA2B,2BAA3B;AACA,UAAIL,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAI0B,OAAO,GAAG,CAAd;AACA,UAAImE,WAAW,GAAG,CAAlB;;AACA,UAAIxF,IAAI,KAAK,CAAb,EAAgB;AACdwF,QAAAA,WAAW,GAAG,CAAd;AACD;;AACH,WAAI,IAAIhF,CAAC,GAAGM,CAAC,GAAG0E,WAAhB,EAA6BhF,CAAC,IAAI,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACxC,YAAIA,CAAC,KAAK,CAAV,EAAY;AACV,cAAIb,GAAG,CAACa,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcH,QAAd,KAA2B,IAA/B,EAAqC;AACnCgB,YAAAA,OAAO,GAAG1B,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUa,OAApB;AACA;AACD;;AACD,cAAI1B,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUwC,OAAV,KAAsB,IAA1B,EAAgC;AAC9B3B,YAAAA,OAAO,GAAG1B,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUa,OAApB;AACA;AACD;AACF;AACF;;AACD,UAAIrB,IAAI,KAAK,CAAb,EAAgB;AAChBL,QAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUO,OAAV,GAAoBA,OAAO,GAAG,CAA9B,CADgB,CACgB;;AAChCA,QAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACC;;AAED,UAAIrB,IAAI,KAAK,CAAb,EAAgB;AACdqB,QAAAA,OAAO,GAAG1B,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAUO,OAApB;AACD;;AAED,WAAI,IAAIV,CAAC,GAAGG,CAAC,GAAG,CAAhB,EAAmBH,CAAC,IAAIhB,GAAG,CAACkB,MAAJ,GAAa,CAArC,EAAwCF,CAAC,EAAzC,EAA6C;AAC3C,YAAIhB,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUN,QAAV,KAAuB,IAA3B,EAAiC;AAC/BH,UAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACgB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,CAAZ;AACAhB,UAAAA,GAAG,CAACgB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcU,OAAd,GAAwBA,OAAO,GAAG,CAAlC;AACAA,UAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACA;AACD;;AAED,YAAI1B,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUqC,OAAV,KAAsB,IAA1B,EAAgC;AAC9BrD,UAAAA,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUU,OAAV,GAAoBA,OAAO,GAAG,CAA9B;AACAA,UAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACA;AACD;AAEF;AAEA,KA3kCsB;;AAAA,SA4kCvB4D,iBA5kCuB,GA4kCH,CAACnE,CAAD,EAAIwB,IAAJ,EAAUtC,IAAV,KAAmB;AAAE;AAEvC,UAAIL,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AAEA,UAAIU,QAAQ,GAAGS,CAAC,GAAC,CAAjB;AACA,UAAI0C,SAAS,GAAG,CAAhB;AACA,UAAIiC,IAAI,GAAG,CAAX;AACA,UAAIpE,OAAO,GAAG,CAAd;AACA,UAAIqE,IAAI,GAAG,CAAX;AACA,UAAIpC,EAAE,GAAG,IAAT;AACA,UAAIC,IAAI,GAAG,IAAX;AAEArD,MAAAA,OAAO,CAACC,GAAR,CAAYmC,IAAZ,EAAkB3C,GAAG,CAAC2C,IAAD,CAArB;AACApC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWD,GAAvB;AACE6D,MAAAA,SAAS,GAAG7D,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAakB,SAAzB;AACAF,MAAAA,EAAE,GAAG3D,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAagB,EAAlB;AACAC,MAAAA,IAAI,GAAG5D,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAaiB,IAApB;;AACF,UAAIvD,IAAI,KAAK,CAAb,EAAgB;AAAE;AAChB0F,QAAAA,IAAI,GAAG/F,GAAG,CAACkB,MAAX;AACD;;AACD,UAAIb,IAAI,KAAK,CAAb,EAAgB;AAAE;AAChB0F,QAAAA,IAAI,GAAG/F,GAAG,CAACkB,MAAX;AACD;;AAEGX,MAAAA,OAAO,CAACC,GAAR,CAAYuF,IAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,IAArB,EAA2BC,CAAC,EAA5B,EAAgC;AAAE;AAGhC,aAAK,IAAIC,CAAC,GAAGvF,QAAb,EAAuBuF,CAAC,IAAI,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAAE;AACpC,cAAIjG,GAAG,CAACiG,CAAD,CAAH,CAAO,CAAP,EAAUvF,QAAV,KAAuB,IAA3B,EAAiC;AAC/BmD,YAAAA,SAAS,GAAG7D,GAAG,CAACiG,CAAD,CAAH,CAAO,CAAP,EAAUpC,SAAtB;AACA;AACD;AACF;;AACDtD,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BwF,CAA5B,EAA+B,aAA/B,EAA8CnC,SAA9C;;AACA,aAAK,IAAIoC,CAAC,GAAGvF,QAAb,EAAuBuF,CAAC,IAAI,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAAE;AACpC,cAAIjG,GAAG,CAACiG,CAAD,CAAH,CAAO,CAAP,EAAUvF,QAAV,KAAuB,IAA3B,EAAiC;AAC/BoF,YAAAA,IAAI,GAAGG,CAAC,GAAG,CAAX;AACAvE,YAAAA,OAAO,GAAG1B,GAAG,CAACiG,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcvE,OAAxB;AACA;AACD;;AACD,cAAI1B,GAAG,CAACiG,CAAD,CAAH,CAAO,CAAP,EAAU5C,OAAV,KAAsB,IAA1B,EAAgC;AAC9ByC,YAAAA,IAAI,GAAGG,CAAP;AACAvE,YAAAA,OAAO,GAAG1B,GAAG,CAACiG,CAAD,CAAH,CAAO,CAAP,EAAUvE,OAApB;AACA;AACD;AACF;;AAEDnB,QAAAA,OAAO,CAACC,GAAR,CAAYW,CAAZ,EAAeT,QAAf,EAAyBL,IAAzB,EAA+B,qBAA/B,EAAqD,QAArD,EAA+DyF,IAA/D,EAAqE,UAArE,EAAgFpE,OAAhF,EAvB8B,CAwBlB;;AAChB,YAAIwE,GAAG,GAAG,KAAV;AACA,YAAIC,SAAS,GAAG,CAAC,CAAD,CAAhB,CA1BkC,CA0Bb;;AACrB,YAAIC,EAAE,GAAG,CAAT;AACA,YAAIC,EAAE,GAAG,CAAT;AACA,YAAIC,GAAG,GAAGzC,SAAV;;AAEE,aAAK,IAAI7C,CAAC,GAAG8E,IAAb,EAAmB9E,CAAC,IAAIhB,GAAG,CAACkB,MAAJ,GAAa,CAArC,EAAwCF,CAAC,EAAzC,EAA6C;AAC3C,cAAIhB,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUN,QAAV,KAAuB,IAA3B,EAAgC;AAAE;AAEhC0F,YAAAA,EAAE,GAAGpF,CAAC,GAAG,CAAT;AACAqF,YAAAA,EAAE,GAAGrG,GAAG,CAACgB,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAcU,OAAnB;AACAnB,YAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAU6C,SAAtB;AACAtD,YAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,CAAZ,EAAuB8E,IAAvB;AACAQ,YAAAA,GAAG,GAAGtG,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAU6C,SAAhB;;AACA,gBAAI7D,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAU6C,SAAV,KAAwB,IAA5B,EAAkC;AAAE;AAClC,mBAAK,IAAIvC,CAAC,GAAGN,CAAb,EAAgBM,CAAC,IAAItB,GAAG,CAACkB,MAAzB,EAAiCI,CAAC,EAAlC,EAAsC;AACpC,oBAAIhB,IAAI,GAAG,CAAX;AACA,oBAAImB,KAAK,GAAG,CAAZ;AACA,oBAAIC,OAAO,GAAG1B,GAAG,CAACsB,CAAD,CAAH,CAAO,CAAP,EAAUI,OAAxB;AACA,oBAAIiC,EAAE,GAAG3D,GAAG,CAACsB,CAAD,CAAH,CAAO,CAAP,EAAUqC,EAAnB;AACA,oBAAIE,SAAS,GAAG7D,GAAG,CAACsB,CAAD,CAAH,CAAO,CAAP,EAAUuC,SAA1B;AACA,oBAAID,IAAI,GAAG5D,GAAG,CAACsB,CAAD,CAAH,CAAO,CAAP,EAAUsC,IAArB;AACA,oBAAIgC,cAAc,GAAG5F,GAAG,CAAC2C,IAAD,CAAH,CAAU,CAAV,EAAaiD,cAAlC;AACArF,gBAAAA,OAAO,CAACC,GAAR,CAAYkB,OAAZ;;AACE,oBAAI1B,GAAG,CAACsB,CAAD,CAAH,CAAO,CAAP,EAAUZ,QAAV,KAAuB,IAA3B,EAAiC;AAC/B,uBAAKlB,KAAL,CAAW0F,gBAAX,CAA4B5E,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDkC,EAAlD,EAAsDC,IAAtD,EAA4DC,SAA5D,EAAuE+B,cAAvE;AACD,iBAFD,MAGK;AACH5E,kBAAAA,CAAC,GAAGM,CAAJ;AACA;AACD;AACJ;AACF;;AAED;AACD;;AACD,cAAItB,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUqC,OAAV,KAAsB,IAA1B,EAAgC;AAC9B+C,YAAAA,EAAE,GAAGpF,CAAL;AACAqF,YAAAA,EAAE,GAAGrG,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUU,OAAf;AACAnB,YAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,CAAZ,EAAuB8E,IAAvB;;AACA,gBAAI9E,CAAC,KAAK8E,IAAV,EAAgB;AACd;AACD;AACF;;AAED,cAAI9F,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUiC,IAAV,KAAmB,CAAvB,EAA0B;AACxBkD,YAAAA,SAAS,CAACpF,IAAV,CAAe,CAAf;AACD;;AACD,cAAIf,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUiC,IAAV,KAAoB,CAAxB,EAA2B;AACzBkD,YAAAA,SAAS,CAACpF,IAAV,CAAe,CAAf;AACD;;AACD,cAAIf,GAAG,CAACgB,CAAD,CAAH,CAAO,CAAP,EAAUiC,IAAV,KAAmB,CAAvB,EAA0B;AACxBkD,YAAAA,SAAS,CAACpF,IAAV,CAAe,CAAf;AACD;;AAED,cAAIC,CAAC,KAAKhB,GAAG,CAACkB,MAAJ,GAAa,CAAvB,EAA0B;AACxBgF,YAAAA,GAAG,GAAG,IAAN;AACD;AACF;;AACH,YAAIN,cAAc,GAAGO,SAAS,CAACI,MAAV,CAAiB,CAACC,WAAD,EAAcC,YAAd,KAAgC;AACpE,iBAAOD,WAAW,GAAGC,YAArB;AACD,SAFoB,CAArB;AAIElG,QAAAA,OAAO,CAACC,GAAR,CAAYkB,OAAZ,EAAqBmC,SAArB,EAAgC,IAAhC,EAAsC+B,cAAtC,EAxFgC,CAyFhC;;AAEF,YAAItF,IAAI,GAAG,CAAX;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAaqD,SAAb,EAAwB+B,cAAxB,EAAwCvF,IAAxC;;AACA,YAAIwD,SAAS,KAAK,IAAlB,EAAwB;AACtBnD,UAAAA,QAAQ,GAAG0F,EAAX;AACA1E,UAAAA,OAAO,GAAG2E,EAAV;AACAxC,UAAAA,SAAS,GAAGyC,GAAZ;AACA/F,UAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ,EAAsBgB,OAAtB,EAA+BmC,SAA/B;;AACA,cAAIqC,GAAG,KAAK,IAAZ,EAAkB;AAChB3F,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;AACD;;AACD;AACD;;AAED,YAAIqD,SAAS,GAAG+B,cAAhB,EAAgC;AAC9B,cAAInE,KAAK,GAAG,CAAZ;AACI,eAAKjC,KAAL,CAAW0F,gBAAX,CAA4B5E,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDkC,EAAlD,EAAsDC,IAAtD,EAA4DC,SAA5D,EAAuE+B,cAAvE;AACJrF,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AACD,YAAIqD,SAAS,GAAG+B,cAAhB,EAAgC;AAC9B,cAAInE,KAAK,GAAG,CAAZ;AACI,eAAKjC,KAAL,CAAW0F,gBAAX,CAA4B5E,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDkC,EAAlD,EAAsDC,IAAtD,EAA4DC,SAA5D,EAAuE+B,cAAvE;AACJrF,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAED;;AACD,YAAIqD,SAAS,KAAK+B,cAAlB,EAAkC;AAChCrF,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,eAAKhB,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B;AACD,SAvH+B,CA0HhC;AACA;;;AACAhB,QAAAA,QAAQ,GAAG0F,EAAX;AACA1E,QAAAA,OAAO,GAAG2E,EAAV;AACAxC,QAAAA,SAAS,GAAGyC,GAAZ;AACA/F,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ,EAAsBgB,OAAtB,EAA+BmC,SAA/B;;AACA,YAAIqC,GAAG,KAAK,IAAZ,EAAkB;AAChB3F,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;AACD;AACJ;AACF,KA1uCsB;;AAAA,SA2uCvB6E,UA3uCuB,GA2uCTlE,CAAD,IAAO;AAClB,UAAInB,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAI2D,EAAE,GAAG,KAAKnE,KAAL,CAAWmE,EAApB;AACA,UAAIC,IAAI,GAAG,KAAKpE,KAAL,CAAWoE,IAAtB;AACA,UAAI8C,QAAQ,GAAG,CAAf;AACA,UAAIpF,CAAC,GAAG,CAAR;AACA,UAAIE,CAAC,GAAG,CAAR;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYmD,EAAZ,EAAeC,IAAf;;AACA,aAAO8C,QAAQ,KAAK,CAAb,IAAkBlF,CAAC,GAAG,CAA7B,EAAgC;AAAE;AAC9BkF,QAAAA,QAAQ,GAAIpF,CAAC,GAAGsC,IAAhB;;AACA,YAAI8C,QAAQ,KAAK,CAAjB,EAAoB;AAChBpF,UAAAA,CAAC,GAAGA,CAAC,GAAC,CAAN;AACD,SAFH,MAGO;AACH;AACD;;AACDE,QAAAA,CAAC;AACF;;AACH,UAAIqC,SAAS,GAAGvC,CAAC,GAAGqC,EAApB;AACApD,MAAAA,OAAO,CAACC,GAAR,CAAYqD,SAAZ;AACA7D,MAAAA,GAAG,CAACmB,CAAD,CAAH,CAAO,CAAP,EAAU0C,SAAV,GAAsBA,SAAtB;AACA,WAAK1D,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KAjwCsB;;AAAA,SAkwCvB2G,mBAlwCuB,GAkwCD,CAACjH,IAAD,EAAOkH,CAAP,EAAUzF,CAAV,EAAa0F,CAAb,KAAmB;AAAE;AACzCtG,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCd,IAAnC,EAAyCkH,CAAzC,EAA4CzF,CAA5C,EAA+C0F,CAA/C;AACA,UAAI7G,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAI8G,QAAQ,GAAG,CAAf;AACA,UAAIpG,QAAQ,GAAG,CAAf;AACA,UAAI2C,OAAO,GAAG,CAAd;AACA,UAAI0D,eAAe,GAAG,CAAtB,CANuC,CAMb;;AAExB,WAAK,IAAIvF,CAAC,GAAGsF,QAAb,EAAuBtF,CAAC,IAAI,CAA5B,EAA+BA,CAAC,EAAhC,EAAoC;AAAE;AACpC,YAAIxB,GAAG,CAACwB,CAAD,CAAH,CAAO,CAAP,EAAUd,QAAV,KAAuB,KAA3B,EAAkC;AAChC,cAAGV,GAAG,CAACwB,CAAD,CAAH,CAAO,CAAP,EAAU6B,OAAV,KAAsB,IAAzB,EAA+B;AAAE;AAC/BA,YAAAA,OAAO,GAAG7B,CAAV;AACA;AACD,WAHD,MAIK;AACH;AACD;AACF,SARD,MASK;AACH6B,UAAAA,OAAO,GAAG7B,CAAC,GAAG,CAAd;AACA;AACD;AACF;;AACDuF,MAAAA,eAAe,GAAG/G,GAAG,CAACqD,OAAD,CAAH,CAAa,CAAb,EAAgB3B,OAAlC;AACA,UAAIA,OAAO,GAAGqF,eAAd;AAEAxG,MAAAA,OAAO,CAACC,GAAR,CAAYqG,CAAZ,EA1BqC,CA4BvC;;AACI,UAAIV,SAAS,GAAG,CAAC,CAAD,CAAhB,CA7BmC,CA6Bd;;AACrB,WAAK,IAAI3E,CAAC,GAAG6B,OAAb,EAAsB7B,CAAC,IAAIxB,GAAG,CAACkB,MAAJ,GAAa,CAAlB,IAAuBlB,GAAG,CAACwB,CAAC,GAAE,CAAJ,CAAH,CAAU,CAAV,EAAad,QAAb,KAA0B,IAAjD,IAAyDV,GAAG,CAACwB,CAAC,GAAC,CAAH,CAAH,CAAS,CAAT,EAAY6B,OAAZ,KAAwB,IAAvG,EAA6G7B,CAAC,EAA9G,EAAkH;AAAE;AAClHjB,QAAAA,OAAO,CAACC,GAAR,CAAY6C,OAAZ,EAAqB3B,OAArB;;AACA,YAAI1B,GAAG,CAACwB,CAAD,CAAH,CAAO,CAAP,EAAUd,QAAV,KAAuB,KAA3B,EAAkC;AAChC,cAAIV,GAAG,CAACwB,CAAD,CAAH,CAAO,CAAP,EAAU6B,OAAV,KAAsB,KAA1B,EAAiC;AAC3B,gBAAIrD,GAAG,CAACwB,CAAD,CAAH,CAAO,CAAP,EAAUyB,IAAV,KAAmB,CAAvB,EAA0B;AACxB1C,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA2F,cAAAA,SAAS,CAACpF,IAAV,CAAe,CAAf;AACD;;AACD,gBAAIf,GAAG,CAACwB,CAAD,CAAH,CAAO,CAAP,EAAUyB,IAAV,KAAoB,CAAxB,EAA2B;AACzB1C,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA2F,cAAAA,SAAS,CAACpF,IAAV,CAAe,CAAf;AACD;;AACD,gBAAIf,GAAG,CAACwB,CAAD,CAAH,CAAO,CAAP,EAAUyB,IAAV,KAAmB,CAAvB,EAA0B;AACxB1C,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA2F,cAAAA,SAAS,CAACpF,IAAV,CAAe,CAAf;AACD;AACJ,WAbH,MAcO;AACH;AACD;AACF,SAlBH,MAmBO;AACD;AACD;AACN;;AACDR,MAAAA,OAAO,CAACC,GAAR,CAAY2F,SAAZ;AACA,UAAItC,SAAS,GAAG7D,GAAG,CAACU,QAAD,CAAH,CAAc,CAAd,EAAiBmD,SAAjC;AACA,UAAI+B,cAAc,GAAGO,SAAS,CAACI,MAAV,CAAiB,CAACC,WAAD,EAAcC,YAAd,KAAgC;AACpE,eAAOD,WAAW,GAAGC,YAArB;AACD,OAFoB,CAArB;AAGAlG,MAAAA,OAAO,CAACC,GAAR,CAAYuG,eAAZ,EAA6BlD,SAA7B,EAAuC,IAAvC,EAA6C+B,cAA7C;AACA,UAAItF,IAAI,GAAG,CAAX;AACA,UAAIqD,EAAE,GAAG3D,GAAG,CAACU,QAAD,CAAH,CAAc,CAAd,EAAiBiD,EAA1B;AACA,UAAIC,IAAI,GAAG5D,GAAG,CAACU,QAAD,CAAH,CAAc,CAAd,EAAiBkD,IAA5B;;AACA,UAAIC,SAAS,GAAG+B,cAAhB,EAAgC;AAC9B,YAAInE,KAAK,GAAG,CAAZ;AACI,aAAKjC,KAAL,CAAW0F,gBAAX,CAA4B5E,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDkC,EAAlD,EAAsDC,IAAtD;AACJrD,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;AACD;;AACD,UAAIqD,SAAS,GAAG+B,cAAhB,EAAgC;AAC9B,YAAInE,KAAK,GAAG,CAAZ;AACI,aAAKjC,KAAL,CAAW0F,gBAAX,CAA4B5E,IAA5B,EAAkCoB,OAAlC,EAA2CD,KAA3C,EAAkDkC,EAAlD,EAAsDC,IAAtD;AACJrD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;AACD;;AACD,UAAIqD,SAAS,KAAK+B,cAAlB,EAAkC;AAChCrF,QAAAA,OAAO,CAACC,GAAR,CAAYoG,CAAZ,EAAeC,CAAf;AAEAtG,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAKhB,KAAL,CAAWoC,aAAX,CAAyBtB,IAAzB,EAA+BoB,OAA/B,EAAwCiC,EAAxC,EAA4CC,IAA5C;AACA;AACD;;AACGrD,MAAAA,OAAO,CAACC,GAAR,CAAYsG,QAAZ,EAAsBpG,QAAtB,EAAgC2C,OAAhC,EAAyCQ,SAAzC,EAAoD+B,cAApD,EAAoEmB,eAApE;AACT,KAt1CsB;;AAAA,SAy1CvB/C,iBAz1CuB,GAy1CH,CAAC7C,CAAD,EAAIwB,IAAJ,EAAUtC,IAAV,KAAmB;AACrC,UAAIL,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACA,UAAIa,CAAC,GAAG,IAAR;;AACA,UAAIR,IAAI,KAAK,CAAb,EAAgB;AACdQ,QAAAA,CAAC,GAAG8B,IAAJ;AACD;;AACD,UAAItC,IAAI,KAAK,CAAb,EAAgB;AACdQ,QAAAA,CAAC,GAAGM,CAAJ;AACD;;AACHZ,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,CAAZ;;AACE,UAAIb,GAAG,CAACa,CAAD,CAAH,CAAO,CAAP,EAAUmB,IAAV,KAAmB,IAAvB,EAA6B;AAEzB,YAAI1B,IAAI,GAAG,CAAX;AACA,YAAIoB,OAAO,GAAG1B,GAAG,CAACa,CAAC,GAAG,CAAL,CAAH,CAAW,CAAX,EAAca,OAA5B;AACA,YAAID,KAAK,GAAG,CAAZ;AACA,aAAKjC,KAAL,CAAWwH,kBAAX,CAA8B1G,IAA9B,EAAoCoB,OAApC,EAA6CD,KAA7C;AAEH,OAPD,MAQK;AACH,aAAK6D,iBAAL,CAAuBnE,CAAvB,EAA0BwB,IAA1B,EAAgCtC,IAAhC;AACD;AACF,KA92CsB;;AAGjB,SAAKqD,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BuD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAK7B,WAAL,GAAmB,KAAKA,WAAL,CAAiB6B,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKhD,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BgD,IAA3B,CAAgC,IAAhC,CAA7B;AAEA,SAAKhH,KAAL,GAAa;AAEX2C,MAAAA,YAAY,EAAE,CAFH;AAGX5C,MAAAA,GAAG,EAAE,CAAC,EAAD,CAHM;AAIX6C,MAAAA,MAAM,EAAG,EAJE;AAKX9C,MAAAA,eAAe,EAAE,CALN;AAMXoB,MAAAA,CAAC,EAAE,CANQ;AAQXa,MAAAA,IAAI,EAAE,EARK;AAQD;AACV9B,MAAAA,UAAU,EAAE,GATD;AAUX2D,MAAAA,SAAS,EAAE,IAVA;AAWXyB,MAAAA,iBAAiB,EAAE,EAXR;AAaX4B,MAAAA,UAAU,EAAE;AAbD,KAAb;AAgBD;;AAkXLC,EAAAA,gBAAgB,GAAG;AACjB,QAAInH,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AAEEA,IAAAA,GAAG,CAAC8C,MAAJ,CAAW,CAAX,EAAc,CAAd,EAAiB,EAAjB;AACM9C,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAOe,IAAP,CAAY;AACVI,MAAAA,CAAC,EAAE,CADO;AAEVT,MAAAA,QAAQ,EAAE,IAFA;AAIVsB,MAAAA,IAAI,EAAE,IAJI;AAMV;AAEA2B,MAAAA,EAAE,EAAE,IARM;AASVC,MAAAA,IAAI,EAAE,IATI;AAUV;AACAnB,MAAAA,MAAM,EAAE,IAXE;AAaVc,MAAAA,YAAY,EAAE,KAbJ;AAcVM,MAAAA,SAAS,EAAE,IAdD;AAgBV3D,MAAAA,UAAU,EAAE,GAhBF;AAiBVN,MAAAA,EAAE,EAAE,CAjBM;AAkBVC,MAAAA,EAAE,EAAE,CAlBM;AAmBVqC,MAAAA,MAAM,EAAE,EAnBE;AAoBVvB,MAAAA,WAAW,EAAE;AApBH,KAAZ;AAsBVJ,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAAC,CAAD,CAAf;;AACU,SAAK,IAAIwB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BxB,MAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAUW,WAAV,CAAsBI,IAAtB,CAA2B,EAA3B;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BpB,QAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAUW,WAAV,CAAsBa,CAAtB,EAAyBT,IAAzB,CAA8B;AAC1BlB,UAAAA,EAAE,EAAE,KADsB;AAE1Be,UAAAA,GAAG,EAAE,EAFqB;AAG1BsB,UAAAA,MAAM,EAAE;AAHkB,SAA9B;AAKC;AACJ,KApCQ,CAsCb;AAEJ;;;AAEE,SAAK/B,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACH;;AAqIDyD,EAAAA,SAAS,GAAG;AAER,SAAKtD,QAAL,CAAc;AACZyC,MAAAA,YAAY,EAAE,KAAK3C,KAAL,CAAW2C,YAAX,GAA0B;AAD5B,KAAd;AAGH;;AACDwE,EAAAA,SAAS,GAAG;AAEV,SAAKjH,QAAL,CAAc;AACZyC,MAAAA,YAAY,EAAE,KAAK3C,KAAL,CAAW2C,YAAX,GAA0B;AAD5B,KAAd;AAGD;;AA4yBD;AAEAyE,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,gBAAL;AACA,SAAKzE,SAAL;AACA,SAAK4E,QAAL;AACA,SAAK9H,KAAL,CAAWkE,qBAAX,CAAiC,KAAKA,qBAAtC;AACA,SAAKlE,KAAL,CAAW4F,WAAX,CAAuB,KAAKA,WAA5B;AACA,SAAK5F,KAAL,CAAWyE,qBAAX,CAAiC,KAAKA,qBAAtC;AACD;;AAEDqD,EAAAA,QAAQ,GAAG;AACT,QAAItH,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAArB;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,CAAO,CAAP,EAAU0B,OAAV,GAAoB,CAApB;AACA,SAAKvB,QAAL,CAAc;AAAEH,MAAAA;AAAF,KAAd;AACD,GAj4C+B,CAm4C9B;;;AACAuH,EAAAA,MAAM,GAAG;AAEP,QAAIC,IAAI,GAAG,KAAKvH,KAAL,CAAWD,GAAX,CAAeyH,GAAf,CAAmB,CAACzH,GAAD,EAAK0H,KAAL,KAAe;AAE3C,0BACE,QAAC,GAAD;AACE,QAAA,KAAK,EAAG1H,GADV;AAGE,QAAA,KAAK,EAAG,KAAK4E,KAHf;AAIE,QAAA,SAAS,EAAG,KAAKR,SAJnB;AAKE,QAAA,UAAU,EAAG,KAAKK,UALpB;AAME,QAAA,GAAG,EAAE,KAAKhF,GANZ;AAOE,QAAA,GAAG,EAAE,KAAKW;AAPZ,SAEQsH,KAFR;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAbU,CAAX;AAcE,wBAAQ;AAAK,MAAA,SAAS,EAAE,KAAhB;AAAA,8BACN;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,GAAG,EAAE,KAAKzH,KAAL,CAAWD,GADlB;AAEE,UAAA,MAAM,EAAE,KAAKC,KAAL,CAAW4C,MAFrB;AAGE,UAAA,KAAK,EAAE,KAAKrD,KAAL,CAAWmI,KAHpB;AAIE,UAAA,OAAO,EAAG,KAAKnI,KAAL,CAAWoI,OAJvB;AAKE,UAAA,eAAe,EAAG,KAAK3H,KAAL,CAAWF,eAL/B;AAME,UAAA,gBAAgB,EAAI,KAAKP,KAAL,CAAWqI,gBANjC;AAOE,UAAA,SAAS,EAAI,KAAKrI,KAAL,CAAWsI,SAP1B;AAQE,UAAA,MAAM,EAAI,KAAKtI,KAAL,CAAWuI,MARvB;AASE,UAAA,UAAU,EAAE,KAAKvI,KAAL,CAAWwI,UATzB;AAUE,UAAA,kBAAkB,EAAI,KAAKxI,KAAL,CAAWwH,kBAVnC;AAWE,UAAA,SAAS,EAAI,KAAKxH,KAAL,CAAWyI;AAX1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADM,EAiBLT,IAjBK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAoBH;;AAx6C6B;;AA26ChC,eAAelI,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Row from \"./Row\";\r\nimport Timer from \"./Timer\";\r\n\r\n  class Board extends Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      \r\n      this.insertStartingMeasure = this.insertStartingMeasure.bind(this);\r\n      this.setStarting = this.setStarting.bind(this);\r\n      this.removeStartingMeasure = this.removeStartingMeasure.bind(this);\r\n\r\n      this.state = {\r\n        \r\n        currentIndex: 1,\r\n        row: [[]],\r\n        column : 20,\r\n        currentSelected: 0,\r\n        x: 0,\r\n\r\n        clef: 10, // 10 = G-clef,\r\n        accidental: \"#\",\r\n        barLength: null,\r\n        measureLengthCalc: [],\r\n\r\n        buttonBool: true, \r\n\r\n      }\r\n    }\r\n\r\nks1 = (cell, xValue, mx, my) => {\r\n  if (this.props.handle === 0) { \r\n    let currentSelected = xValue;\r\n  let row = this.state.row;\r\n    row[currentSelected][0].accidental = this.props.accidental;\r\n    this.setState({ row })\r\n    this.ks2(cell, currentSelected, mx, my)\r\n  }\r\n};\r\nks2 = (cell, currentSelected, mx, my, kind) =>{\r\n  let type = 5;\r\n  let row = this.state.row\r\n  console.log(row[currentSelected][0])\r\n    if (this.props.handle === 0) { \r\n      if (kind === undefined) {\r\n        if (row[currentSelected][0].starting !== true) { return; }  // --------------debuged--------------------\r\n      //all y in x ---- means -----  check column\r\n      \r\n          if (row[currentSelected][0].accLocation[mx][my].my === false) {\r\n            row[currentSelected][0].accLocation[mx][my].my = true;\r\n            row[currentSelected][0].accLocation[mx][my].acc = row[currentSelected][0].accidental;\r\n            row[currentSelected][0].accLocation[mx][11].my = true;\r\n          }\r\n          \r\n          else {\r\n            let a = 0;\r\n            let current = [];\r\n              while (a < 9) {\r\n                if (row[currentSelected][0].accLocation[mx][a].my === true && my !== a) {\r\n                  current.push(a)\r\n                }\r\n                a++;\r\n                if (a === 9) {\r\n                  a = 0;\r\n                  break;\r\n                }\r\n              }\r\n              let b = 0;\r\n              let currentNext = [];\r\n              if (mx !== 6) {\r\n                while (b < 9) {\r\n                  if (row[currentSelected][0].accLocation[mx + 1][b].my === true) {\r\n                    currentNext.push(b)\r\n                  }\r\n                  b++;\r\n                }\r\n              }\r\n              \r\n              if (mx === 6) {\r\n                row[currentSelected][0].accLocation[6][my].my = false;\r\n                console.log(\"a\")\r\n              }\r\n\r\n              if (current.length === 0 && currentNext.length === 0 ) {\r\n                row[currentSelected][0].accLocation[mx][my].my = false;\r\n                row[currentSelected][0].accLocation[mx][11].my = false;\r\n                console.log(\"b\")\r\n              }\r\n\r\n              if (current.length !== 0 && currentNext.length !== 0 ) {\r\n                row[currentSelected][0].accLocation[mx][my].my = false;\r\n                console.log(\"c\")\r\n              }\r\n              if (current.length !== 0 && currentNext.length === 0 ) {\r\n                row[currentSelected][0].accLocation[mx][my].my = false;\r\n                console.log(\"d\")\r\n              }\r\n          }\r\n      }\r\n        //--------------------------------------------------Checking-----------------------------------------\r\n        let a = [];\r\n        for (let x = 0; x <= 6; x++ ) {\r\n          let y = 0\r\n          while (y < 10) {\r\n            if ( row[currentSelected][0].accLocation[x][y].my === true) {\r\n              a.push({\r\n                acc: row[currentSelected][0].accLocation[x][y].acc,\r\n                x: x,\r\n                y: y,\r\n                }\r\n              );        \r\n            }\r\n            y++;\r\n          }\r\n        }\r\n\r\n        let xDup = false;\r\n        for (let c = 0; c < a.length; c++) {\r\n          let xCount = [];\r\n          let i = 0;\r\n            while (i < a.length) {\r\n              if (a[i].x === c) {\r\n                xCount.push(c)\r\n              }\r\n              i++;\r\n                }\r\n          if (xCount.length === 0) {\r\n            break;\r\n          }\r\n          if (xCount.length > 1) {\r\n              xDup = true;\r\n                let error = 8;\r\n                let measure = row[currentSelected + 1][8].measure;\r\n                let accidental = row[currentSelected][0].accidental;\r\n                this.props.consoleWarningKS(type, measure, error, accidental, my, mx)\r\n\r\n            }\r\n            if (xDup === false) {\r\n              let error = 8;\r\n              let measure = row[currentSelected + 1][8].measure;\r\n              let accidental = row[currentSelected][0].accidental;\r\n              this.props.removeWarning(type, measure, error, accidental, my, mx)\r\n            }\r\n        }\r\n\r\n      // ------------------------for y ------------------------------------------------\r\n          let yDup = false\r\n          let y = 0;\r\n            while (y < 10) {\r\n            let yCount = [];\r\n              for (let i = 0; i < a.length; i++) {\r\n                if (a[i].y === y) {\r\n                  yCount.push(i)\r\n                }\r\n              }\r\n                if (yCount.length > 1) {\r\n                  yDup = true\r\n                  // break;\r\n                }\r\n\r\n                y++;\r\n              }\r\n                    if (yDup === true) {\r\n                      let error = 9;\r\n                      let measure = row[currentSelected + 1][8].measure;\r\n                      let accidental = row[currentSelected][0].accidental;\r\n                      this.props.consoleWarningKS(type, measure, error, accidental, my, mx)\r\n                    }\r\n                    else {\r\n                      let error = 9;\r\n                      let measure = row[currentSelected + 1][8].measure;\r\n                      let accidental = row[currentSelected][0].accidental;\r\n                      this.props.removeWarning(type, measure, error, accidental, my, mx)\r\n                    }\r\n\r\n              this.setState({ row })\r\n        // -------------------------------CHECKING IF THE ACCIDENTALS ARE THE SAME ----------------------------\r\n        \r\n            let mixed  = false;\r\n            for (let i = 0; i <= a.length - 1; i++ ) {\r\n              if (a[0].acc !== a[i].acc) {\r\n                mixed = true;\r\n                break;\r\n              }\r\n            }\r\n              if (mixed === true) {\r\n                console.log(\"different\")\r\n                let error = 10;\r\n                let measure = row[currentSelected + 1][8].measure;\r\n                let accidental = row[currentSelected][0].accidental;\r\n                this.props.consoleWarningKS(type, measure, error, accidental)\r\n              }\r\n\r\n      else {\r\n        let error = 10;\r\n        let measure = row[currentSelected + 1][8].measure;\r\n        let accidental = row[currentSelected][0].accidental;\r\n        this.props.removeWarning(type, measure, error, accidental)\r\n      }\r\n\r\n  // ----------------------What Key Signature------------------------\r\n        if (row[currentSelected][0].clef === null) {\r\n          console.log(currentSelected, \"it's null\")\r\n          let error = 11\r\n          let measure = row[currentSelected + 1][8].measure\r\n          let accidental = row[currentSelected][0].accidental;\r\n            this.props.consoleWarningKS(type, measure, error, accidental)\r\n            return;\r\n        }\r\n        let clef = row[currentSelected][0].clef;\r\n        this.keySignatureClefCompare(clef, a, currentSelected)\r\n    }\r\n\r\n  else {\r\n    console.log(\"Use Select tool to edit Key Signature\")\r\n  }\r\n};\r\nkeySignatureClefCompare = (clef, a, currentSelected) => {\r\n  console.log(a)\r\n  // -----------set Letters --------------------------\r\n  let row = this.state.row\r\n  let letter = [\"G\", \"F\", \"E\", \"D\", \"C\", \"B\", \"A\"]\r\n  let picker = 0;\r\n  let round = 0;\r\n    if (clef === \"G\") {\r\n      round = 0;\r\n      picker = 0;\r\n    }\r\n    if (clef === \"F\") {\r\n      round = 5;\r\n      picker = 5;\r\n    }\r\n    \r\n  \r\n  \r\n    for (let x = 0; x < 7; x++) {\r\n      for (let y = 0; y < 12; y++) {\r\n        row[currentSelected][0].accLocation[x][y].letter = letter[picker];\r\n        picker++;\r\n        if (picker === 7) {\r\n          picker = 0;\r\n        }\r\n        if (y === 11) {\r\n          picker = round;\r\n        }\r\n      }\r\n    }\r\n  let alpMap = [\"G\", \"D\", \"A\", \"E\", \"B\", \"F#\", \"C#\", \"F\", \"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\", \"C\"];\r\n  let keySeq = [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\", \"B\", \"E\", \"A\", \"D\", \"G\", \"C\", \"F\"];\r\n  let addUp = 0;\r\n  let sequence = [];\r\n\r\n    for (let i = 0; i< a.length; i++) {\r\n      console.log(row[currentSelected][0].accLocation[a[i].x][a[i].y].letter, a[i].acc)\r\n      sequence.push({\r\n        letter: row[currentSelected][0].accLocation[a[i].x][a[i].y].letter,\r\n        acc: a[i].acc,\r\n      })\r\n    };\r\n\r\n    let type = 5;\r\n    let error = 12;\r\n    let measure = row[currentSelected + 1][8].measure\r\n\r\n    if (sequence.length === 0) {\r\n      this.props.removeWarning(type, measure, error)\r\n    }\r\n    else {\r\n      if (a[0].acc === \"b\") {\r\n       addUp = 7;\r\n      }\r\n        for (let i = 0; i< a.length; i++) {\r\n          if (sequence[i].letter === keySeq[i + addUp]) {\r\n            console.log(sequence[i].letter, keySeq[i + addUp], \"Key of\", alpMap[i + addUp]);\r\n\r\n            if (i === a.length - 1) {\r\n              console.log(sequence[i].letter, keySeq[i], \"Final Key is in Key of\", alpMap[i + addUp])\r\n              this.props.removeWarning(type, measure, error)\r\n              row[currentSelected][0].keySig = alpMap[i + addUp];\r\n              break;\r\n            }\r\n\r\n          }\r\n          else {\r\n            console.log(\"unkown Key Signature\")\r\n            this.props.consoleWarningKS(type, measure, error,)\r\n            break;\r\n          }\r\n        }\r\n    };\r\n\r\n    console.log(sequence, a.length)\r\n    console.log(a.length)\r\nthis.setState({ row })\r\n\r\n\r\n};\r\ncreateRow=(cell, rowX, kind)=> {\r\n\r\n  // let currentIndex = this.state.currentIndex;\r\n\r\n  let currentIndex = null;\r\n    if (rowX !== undefined) {\r\n      currentIndex = rowX\r\n    }\r\n    else {\r\n      currentIndex = this.state.currentIndex;\r\n    }\r\n  let row = this.state.row;\r\n  let column = this.state.column;\r\n\r\n    row.splice(currentIndex, 0, []);\r\n      for (let y = 0; y < column; y++) {   \r\n        if (y !== 0 ) {\r\n          if (y !== 8) {\r\n            row[currentIndex].push({\r\n              x: currentIndex,\r\n              y: y,\r\n\r\n              isOpen: false,\r\n              rest: false,\r\n              note: 0,\r\n              lineStaff: false, // gives line on the cell if true -------------------------------\r\n              clickable: true, // cell will unclicable if enabler is false ----------------------\r\n              starting: false,\r\n              firstRow: false,\r\n              \r\n            });\r\n          }\r\n          else {\r\n            row[currentIndex].push({\r\n              x: currentIndex,\r\n              y: y,\r\n  \r\n              isOpen: false,\r\n              rest: false,\r\n              note: 0,\r\n              measure: null,\r\n              lineStaff: false, // gives line on the cell if true -------------------------------\r\n              clickable: true, // cell will unclicable if enabler is false ----------------------\r\n              barline: false,\r\n              starting: false,\r\n              firstRow: false,\r\n              \r\n            });\r\n          }\r\n        }\r\n\r\n        else {\r\n          row[currentIndex].push({\r\n            x: currentIndex,\r\n            y: y,\r\n\r\n            isOpen: false,\r\n            rest: false,\r\n\r\n            note: 0,\r\n            lineStaff: false, // gives line on the cell if true -------------------------------\r\n            clickable: true, // cell will unclicable if enabler is false ----------------------\r\n\r\n            select: true,\r\n            \r\n            selectColumn: false,\r\n            starting: false,\r\n            firstRow: false,\r\n            \r\n          });\r\n\r\n        }\r\n      }\r\n\r\n      // set design\r\n      for (let i = 4; i < column - 7; i++) {\r\n\r\n        if(i === 4 || i === 6 || i === 8 || i === 10 || i === 12 ) {\r\n          row[currentIndex][i].lineStaff =true\r\n        }\r\n      }\r\n\r\n      if ( kind === 4) {\r\n        this.incrementX();\r\n      }\r\n      if (row[currentIndex - 1][0].starting === true) {\r\n        for (let i = 0; i <= column - 1; i++) {\r\n          row[currentIndex][i].firstRow = true\r\n        }\r\n      }\r\n      if (kind === 4) {\r\n        for (let i = 0; i <= column - 1; i++) {\r\n          row[currentIndex + 1][i].firstRow = false\r\n        }\r\n      }\r\n\r\n  // Make enabler true for the first column--------------SET DEFAULT--------------------------------- \r\n    \r\n    this.increment();\r\n    this.setState({ row });\r\n};\r\ncreateMeasureRow() {\r\n  let row = this.state.row;\r\n\r\n    row.splice(0, 1, []);  \r\n          row[0].push({\r\n            x: 0,\r\n            starting: true,\r\n\r\n            clef: null,\r\n\r\n            // Time signature\r\n\r\n            up: null,\r\n            down: null,\r\n            // Key signature\r\n            keySig: null,\r\n\r\n            selectColumn: false,\r\n            barLength: null,\r\n            \r\n            accidental: \"#\",\r\n            mx: 0,\r\n            my: 0,\r\n            letter: \"\",\r\n            accLocation: [],\r\n          });\r\nconsole.log(row[0])\r\n          for (let i = 0; i < 7; i++) {\r\n            row[0][0].accLocation.push([])\r\n            for (let y = 0; y < 12; y++) {   \r\n              row[0][0].accLocation[i].push({\r\n                  my: false,\r\n                  acc: \"\",\r\n                  letter: \"\",\r\n                });\r\n              }\r\n          }\r\n\r\n      // set design      \r\n\r\n  // Make enabler true for the first column--------------SET DEFAULT--------------------------------- \r\n    \r\n    this.setState({ row });\r\n};\r\ninsertStartingMeasure = (cell) => {\r\n  \r\n  let x = this.state.currentSelected;\r\n  let row = this.state.row;\r\n\r\n  if (row[x][0].starting ===true) {\r\n    console.log(\"This is already a starting measure\")\r\n    return;\r\n  }\r\n\r\n  if (row[x - 1][0].starting ===true) {\r\n    if (x === row.length) { \r\n      console.log(\"Unable to Insert Another Starting Just next to Starting\")\r\n      return;\r\n    }\r\n    if( row.length !== x + 1) {\r\n\r\n      if( row[x + 1][0].starting ===true ) {\r\n        console.log(\"Unable to Insert Another Starting Just next to Starting\")\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n    if (x !== 0) {    \r\n\r\n    console.log(x, row)\r\n      row.splice(x, 0, []);\r\n          \r\n            row[x].push({\r\n              x: x,\r\n              starting: true,\r\n\r\n              clef: null,\r\n\r\n              // Time signature\r\n\r\n              up: null,\r\n              down: null,\r\n              // Key signature\r\n              keySig: null,\r\n\r\n              selectColumn: false,\r\n              barLength: null,\r\n\r\n              accidental: \"#\",\r\n              mx: 0,\r\n              my: 0,\r\n              \r\n              accLocation: [],\r\n            });\r\n  console.log(row[x])\r\n            for (let i = 0; i < 7; i++) {\r\n              row[x][0].accLocation.push([])\r\n              for (let y = 0; y < 12; y++) {   \r\n                row[x][0].accLocation[i].push({\r\n                    my: false,\r\n                    acc: \"\",\r\n                    letter: \"\",\r\n                  });\r\n                }\r\n            }\r\n\r\n      this.increment();\r\n\r\n      row[x + 1][0].selectColumn = false; console.log(row[x][0])\r\n      row[x][0].selectColumn = true;\r\n      row[x +  1][8].barline =false;\r\n        \r\n      this.setState({ \r\n        row,\r\n        currentSelected: x, \r\n      });  \r\n      this.props.viewOptionOn();\r\n      console.log(this.state.row)\r\n      this.incrementX();\r\n\r\n      let kind = 3\r\n      let rowX = null;\r\n      let measure = 1;\r\nconsole.log(x)\r\n      for (let a = x - 1; a >= 1; a--) {\r\n        console.log(a - 1,row[a - 1][0])\r\n          if (row[a - 1][0].starting === true) {\r\n            measure = row[a][8].measure + 1\r\n            break;\r\n          }\r\n\r\n          if (row[a][8].barline === true) {\r\n            measure = row[a][8].measure + 1\r\n            break;\r\n          }\r\n        }\r\n        row[x + 1][8].measure = measure\r\n        this.setMeasureNum(x + 1, rowX, kind);\r\n\r\n        for (let i = 0; i <= this.state.column - 1; i++) {\r\n          row[x + 1][i].firstRow =true\r\n        }\r\n\r\n        if (row[x + 1][0].note > 0) {\r\n          let kind = 7\r\n          this.checkStartingClef(x, rowX, kind);\r\n        }\r\n    }\r\n    else {\r\n      console.log (\"already set\");\r\n    }\r\n    console.log (this.state.row);\r\n};\r\nremoveStartingMeasure = (cell) => {\r\nlet row = this.state.row\r\nlet x = this.state.currentSelected\r\n\r\n  if (x === 0) {\r\n    console.log(\"Cannot Delete The First Starting Measure\")\r\n    return;\r\n  }\r\n      row.splice(x, 1,)\r\n      \r\n      this.decrementX();  \r\n      row[x][8].barline = true\r\n\r\n      \r\n      for (let i = 0; i <= this.state.column - 1; i++) {\r\n        row[x][i].firstRow =false\r\n      }\r\n\r\n\r\n      this.setState ({ row })\r\n      console.log(x, this.state.row)\r\n};\r\nincrement() {\r\n\r\n    this.setState({\r\n      currentIndex: this.state.currentIndex + 1,\r\n    })\r\n};\r\ndecrement() {\r\n\r\n  this.setState({\r\n    currentIndex: this.state.currentIndex - 1,\r\n  })  \r\n};\r\nincrementX = cell => {\r\n\r\n  let x = this.state.currentSelected + 1;\r\n  let row = this.state.row;\r\n  let column = this.state.column;\r\n  let rowLength = row.length;\r\nconsole.log(x)\r\n  if (x === row.length -1 ){\r\n     return\r\n  }\r\n\r\n  for (let a = x; a < rowLength ; a++) {\r\n    if (row[a][0].starting === false) {\r\n      for (let i = 0; i < column ; i++) {\r\n        row[a][i].x = a;\r\n      }\r\n    }\r\n    else {\r\n      row[a][0].x = a;\r\n    }\r\n  }\r\n  this.setState({ row })\r\n};\r\ndecrementX = cell => {\r\n\r\n  let x = this.state.currentSelected;\r\n  let row = this.state.row;\r\n  let column = this.state.column;\r\n  let rowLength = row.length;\r\n\r\n  for (let a = x; a < rowLength ; a++) {\r\n    if (row[a][0].starting === false) {\r\n      for (let i = 0; i < column ; i++) {\r\n        row[a][i].x = a;\r\n      }\r\n    }\r\n    else {\r\n      row[a][0].x = a;\r\n    }\r\n  }\r\n\r\n  this.setState({ row })\r\n\r\n// console.log(rowLength)\r\n};\r\nclickLeft = cell => {\r\n  console.log(\"Clicked left\")\r\n\r\n  if (this.props.handle === 1) {\r\n      \r\n      let row = this.state.row;\r\n      let rowX = cell.x;\r\n      let kind = 4;\r\n      let measure = row[cell.x][8].measure;\r\n      \r\n      row[cell.x][8].measure = null\r\n\r\n        this.createRow(cell, rowX, kind)\r\n\r\n      row[cell.x - 1][8].measure = measure\r\n      row[cell.x - 1][cell.y].isOpen = true\r\n      row[cell.x - 1][cell.y].rest = this.props.rest;\r\n        for (let i = 0; i <= this.state.column - 1; i++) {\r\n          row[cell.x - 1][i].note = this.props.note\r\n        }\r\n        let x = cell.x;\r\n        kind = 6;\r\n        this.findStartingMeasure(x, kind);\r\n    this.setState({ row })\r\n  }\r\n\r\n  if (this.props.handle === 2) {\r\n    console.log(\"Clicked left handle 2\")\r\n    if (this.state.row[cell.x - 1][0].starting === true) { // THIS IS STARTING, CAN'T CLICK\r\n      console.log(\"this is starting measure\")\r\n    return;\r\n    } \r\n    let swt = true;\r\n    this.props.insertStartingMeasureDisabler(swt);\r\n    this.handle2(cell + 1); // bar\r\n  }\r\n};\r\nclickRight = cell => {\r\n  console.log(\"Clicked Right\" , cell.x + 1)\r\n\r\n  let row = this.state.row;\r\n  if (this.props.handle === 0) {\r\n      if (cell.x + 1 !== row.length) {\r\n        console.log(\"Clicked left handle 2\")\r\n        let kind = 5;\r\n        let side = cell.x + 1\r\n        this.handle0(cell, kind, side); // bar\r\n      }\r\n  }\r\n  if (this.props.handle === 1) {\r\n    let rowX = cell.x + 1;\r\n\r\n      this.createRow(cell, rowX)\r\n\r\n      row[cell.x + 1][cell.y].isOpen = true\r\n      row[cell.x + 1][cell.y].rest = this.props.rest;\r\n\r\n        for (let i = 0; i <= this.state.column - 1; i++) {\r\n          row[cell.x + 1][i].note = this.props.note\r\n        }\r\n\r\n        this.incrementX(cell);\r\n        this.setState({ row });\r\n        let x = cell.x;\r\n        let kind = 6;\r\n        this.findStartingMeasure(x, kind);\r\n  }\r\n\r\n  if (this.props.handle === 2) {\r\n\r\n    let swt = true;\r\n    let kind = 5;\r\n    let side = cell.x + 1\r\n    this.props.insertStartingMeasureDisabler(swt);\r\n    this.handle2(cell, kind, side); // bar\r\n  \r\n  }\r\n\r\n};\r\nclick = (cell, kind, mx, my) => {\r\n  \r\n  let row = this.state.row;\r\n  let handle = this.props.handle;\r\n    if (handle === 0) {\r\n      let swt = false;\r\n      this.props.insertStartingMeasureDisabler(swt);\r\n      let side;\r\n      this.handle0(cell, kind, side, mx, my);// select\r\n    }\r\n    \r\n      if (handle === 1) {\r\n        let swt = true;\r\n        this.props.insertStartingMeasureDisabler(swt);\r\n        this.handle1(cell); // notes\r\n      }\r\n          \r\n        if (handle === 2) {\r\n          let swt = true;\r\n          this.props.insertStartingMeasureDisabler(swt);\r\n          this.handle2(cell); // bar\r\n        }\r\n\r\n  this.setState({ row });\r\n};\r\nhandle0 = (cell, kind, side, mx, my) => {\r\n\r\n  let row = this.state.row;\r\n  let xValue = cell.x;\r\n    if (kind === 5) {\r\n      xValue = side\r\n    }\r\n    let currentSelected = this.state.currentSelected;\r\n      row[currentSelected][0].selectColumn = false; \r\n      row[xValue][0].selectColumn = true; \r\n\r\n        if (row[xValue][0].starting === true) {\r\n          this.props.viewOptionOn();\r\n        }\r\n          else {\r\n            this.props.viewOptionOff();\r\n          }\r\n            this.setState({\r\n              x: xValue,\r\n              currentSelected: xValue,\r\n            });\r\n\r\n        if (kind === 8) {\r\n          this.ks1(cell, xValue, mx, my);\r\n        }\r\n\r\n};\r\nhandle1 = cell => { // contain conlose -------------- passing------------\r\n  let row = this.state.row;\r\n  let currentCell = row[cell.x][cell.y]; // get x and y positions\r\n  let x = cell.x;\r\n  let note = this.props.note;\r\n  console.log(this.props)\r\n\r\n  if (row[x][0].starting === false) {\r\n\r\n      if (currentCell.isOpen === false) {\r\n  // 1. Find if one of the cells in current row has a True value for isOpen     \r\n        let found = row[x].findIndex(cell => {\r\n          if (cell.isOpen === true)\r\n            return true;\r\n          else {return false;}\r\n        });\r\n  // 2. deside if it is going to make another row next to it or not.\r\n          if (found === -1 && row.length - 1 === x){ // if none\r\n              this.setState({\r\n                currentIndex: x\r\n              })\r\n              // this.createRow(); -----------------------------------------------------------------------------------\r\n          }\r\n          if (cell.x === 1) {\r\n            row[1][8].measure = 1;\r\n          }\r\n\r\n            currentCell.isOpen = true;\r\n            console.log(this.props.rest, currentCell.rest)\r\n            currentCell.rest = this.props.rest;\r\n            currentCell.note = note;\r\n            let kind = 6;\r\n            console.log(\"find Starting Measure\")\r\n            this.findStartingMeasure(x, kind);\r\n        //the length of the note should be equal to it's column\r\n        row[x].findIndex(cell => {\r\n          cell.note = note;\r\n          return null;\r\n        });\r\n      }\r\n      \r\n      else { // When Closing ------------------\r\n        currentCell.isOpen = false;\r\n        console.log(\"this will be CLOSE\")\r\n          let found = row[x].findIndex(cell => {  // find if there is true in isOpen from the specific row clicked\r\n            if (cell.isOpen === true)\r\n              return true;\r\n            else {return false;}  \r\n          });\r\n            if (found === -1) {\r\n            console.log(x)\r\n              if (x !== 1) {\r\n                if (x + 1 !== row.length) {\r\n                  if (row[x][8].barline === true) {// if x has barline but to be removes, put it in the next x\r\n\r\n                    if (row[x + 1][8].barline === false) {\r\n                      row[x + 1][8].barline = true;\r\n                      row[x + 1][8].measure = row[x][8].measure;\r\n                      row.splice(x, 1);\r\n                      this.decrementX(cell);\r\n                    }\r\n                    else {\r\n                      let a = 0 \r\n                      while (a <= this.state.column - 1) {\r\n                        row[x][a].note = 0;\r\n                        a++;\r\n                      }\r\n                      let type = 1;\r\n                      let error = 0;\r\n                      let measure = row[x][8].measure;\r\n                      this.props.consoleWarningTS(type, measure, error);\r\n                    }\r\n                  }\r\n\r\n                  else {\r\n                    row.splice(x, 1);\r\n                    this.decrementX(cell);\r\n                    return;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n      }\r\n      this.setState({\r\n        x: x,  \r\n      })\r\n  }\r\n\r\n  else {\r\n    console.log(\"this is a starting measure\")\r\n  }\r\n\r\n};  \r\nhandle2 = (cell, kind, side) => { // create barline--------------- passing function with console\r\n  let x = cell.x;\r\n  if (kind === 5) {\r\n    x = side\r\n  }\r\n  let row = this.state.row;\r\nconsole.log(x, row.length)\r\n  if (x === row.length  ) {\r\n    console.log(\"This is the last row last. Use End Bar line\") \r\n      return;\r\n    \r\n  }\r\n    if (x === 0 || row[x][0].starting === true) { // THIS IS STARTING, CAN'T CLICK\r\n      console.log(\"this is starting measure\")\r\n\r\n    } \r\n    else {\r\n      if ( row[x - 1][0].starting === false) {\r\n        if ( row[x - 1][0].barline === true ) {\r\n          console.log(\"error: declaring barline without notes or rest between barlines\")    \r\n        }\r\n        else{\r\n                if (row[x][8].barline === false) {   //---- switch barline to TRUE\r\n                  row[x][8].barline =true;\r\n                  let kind = 1\r\n                  console.log(kind)\r\n                  this.setState({ row })\r\n                  this.findStartingMeasure(x, kind);   //  ------  findStartingMeasure => checkingStartingTS => console => setMeasureNum => measureLengthCalc\r\n                }\r\n                else {           // ----------------switch barline to FALSE\r\n                  row[x][8].barline = false;\r\n                  row[x][8].measure = null;\r\n                  let kind = 2\r\n                  this.setState({ row })\r\n                  this.findStartingMeasure(x, kind); //    ------  findStartingMeasure => checkingStartingTS => toLastNewMeasure => measureLengthCalc\r\n                  let rowX \r\n                  this.setMeasureNum(x, rowX, kind);\r\n                  let measure = 1\r\n                  for (let a = row.length - 1; a >= 1; a--) {\r\n                    console.log(a, row[a][8].measure)\r\n                    if (row[a][8].measure !== null) {\r\n                      console.log(row[a][8])\r\n                      measure = row[a][8].measure + 1\r\n                      break;\r\n                    }\r\n                  }\r\n                  this.props.recalcuConsoleMeasure(measure);\r\n\r\n                }\r\n              }\r\n            }\r\n        } \r\n};\r\nsetStarting = cell => { // contain console ---------------------- passing function with console \r\n  let row = this.state.row;\r\n  let x = this.state.currentSelected;\r\n  row[x][0].clef = this.props.clef; row[x][0].up = this.props.up; row[x][0].down = this.props.down; row[x][0].keySig = this.props.keySig; \r\n   //-------FOR TS -----------------------------\r\n    if (row[x][0].up === null || row[x][0].down === null) {  \r\n      console.log(\" TS not complete\")\r\n    }\r\n    else {\r\n      //then\r\n      if (x === 0) {\r\n        row[x + 1][8].measure = 1\r\n      \r\n      }\r\n\r\n      let type = 3;\r\n      let error = 4;\r\n      let measure = row[x + 1][8].measure\r\n      console.log(type, measure, error)\r\n        this.props.removeWarning(type, measure, error)\r\n\r\n      this.calcDownUp(x);\r\n      let rowX = x\r\n      let kind = 1\r\n        this.measureLengthCalc (x + 1, rowX, kind);\r\n\r\n    }\r\n   //-------FOR Clef -----------------------------\r\n      if (row[x][0].Clef=== null) {  \r\n        console.log(\" clef not complete\")\r\n      }\r\n      else {\r\n        let type = 4;\r\n        let error = 6;\r\n        let measure = row[x + 1][8].measure\r\n        this.props.removeWarning(type, measure, error)\r\n        error = 7\r\n        this.props.removeWarning(type, measure, error)\r\n          type = 5\r\n          error = 11;\r\n          console.log(type, measure, error)\r\n          this.props.removeWarning(type, measure, error)\r\n            let currentSelected = x;\r\n            let kind = 8;\r\n            let mx = null;\r\n            let my = null;\r\n              this.ks2(cell, currentSelected, mx, my, kind)\r\n\r\n        row[x][0].keySig = \"C\";\r\n      }\r\n\r\n   this.setState({ row })\r\n\r\nfor (x= 0; x < row.length - 1; x++ ){\r\n  if (row[x][0].starting === true) {\r\n    let clef = row[x][0].clef\r\n    let up = row[x][0].up\r\n    let down = row[x][0].down\r\n    let keySig =  row[x][0].keySig\r\n    console.log(row[x][0],clef, up, down, keySig)\r\n  }\r\n}\r\n};\r\nfindStartingMeasure = (x, kind) => {\r\n  console.log(x, kind, \"Get Starting Position's X axis\")\r\n  let row = this.state.row\r\n  let rowX = 0;  //  row[X] Position -------------\r\n  for (let i = x; i >= 0; i--) { // find Starting\r\n  \r\n    if (row[i][0].starting === true) {\r\n      rowX = i\r\n      break;\r\n    }\r\n  }\r\n  // -------------------------TS-----------------------------------\r\n        if (kind === 1) {\r\n          let kind = 1\r\n          this.checkingStartingTS(x, rowX, kind);\r\n        }\r\n        if (kind === 2) {\r\n          let kind = 2;\r\n          this.toLastNewMeasure(x, rowX, kind);\r\n          this.measureLengthCalc (x, rowX, kind)\r\n        }\r\n  // -------------------------KS-----------------------------------\r\n  if (kind === 6) {\r\n    let kind = 6\r\n    this.checkStartingClef(x, rowX, kind);\r\n  }\r\n\r\n};\r\n//----------------------------------------------------TS----------------------------------------------------------------------------------------\r\ntoLastNewMeasure=(x, rowX, kind)=> {\r\n  console.log(\"Get last clicable position's X axis\")\r\n  let row = this.state.row\r\n\r\n    if (kind === 2) {\r\n      let barCount = 0\r\n        for (let a = rowX; a<= row.length - 2; a++) {\r\n\r\n          if (row[a + 1][0].starting === false) {\r\n            if (row[a + 1][8].barline === true){\r\n              barCount = barCount + 1;\r\n              console.log( row[a + 1][0].starting )\r\n            }          \r\n          }\r\n        } \r\n\r\n        if (barCount === 0) {\r\n          let measure = row[rowX + 1][8].measure\r\n          let type = 3;\r\n          let error = 4;\r\n          console.log(type, error, measure,  row[rowX + 1][8].measure)\r\n          \r\n          this.props.removeWarning(type, measure, error)\r\n        }\r\n        console.log(\"barcount =\", barCount )\r\n\r\n      }\r\n};\r\ncheckingStartingTS =(x, rowX, kind)=>{\r\n  console.log(x, rowX, \"Get Starting first measure's from left axis\")\r\n  let row = this.state.row\r\n    if (kind === 1) {\r\n      let bLValrow = row[rowX][0].barLength;\r\n      let measure = row[rowX + 1][8].measure;\r\n      let type = 3;\r\n      let error = 4;\r\n        if (bLValrow === null) {  // Adding barline without declaring time signature for starting measure\r\n          let kind = 1;\r\n          console.log(type, error, measure,  row[rowX + 1][8].measure)\r\n          this.setMeasureNum(x, rowX, kind);// --------------------measure numbers-----------\r\n          let up = row[rowX][0].up;\r\n          let down = row[rowX][0].down;\r\n          let barLength = row[rowX][0].barLength;\r\n          let totalNoteValue = row[rowX][0].totalNoteValue;\r\n          this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue)\r\n        }\r\n\r\n        else {// -----------------------if Up and Down are not Null \r\n          let kind = 1\r\n          this.setMeasureNum(x, rowX, kind);// --------------------measure numbers-----------\r\n          console.log(\"hhh\")\r\n          this.measureLengthCalc(x, rowX, kind);     //--------  proceed checking left and right measure\r\n        }\r\n    }\r\n    if (kind === 2) {\r\n      console.log(\"remove\")\r\n      \r\n    }\r\n};\r\nsetMeasureNum = (x, rowX, kind) => { // set Measure Number\r\n  console.log(x, rowX, kind, \"Measure number or address\")\r\n  let row = this.state.row;\r\n  let measure = 1;\r\n  let kindHandler = 1\r\n  if (kind === 3) {\r\n    kindHandler = 2;\r\n  }\r\nfor(let a = x - kindHandler; a >= 0; a--) {\r\n  if (a !== 0){\r\n    if (row[a - 1][0].starting === true) {\r\n      measure = row[a][8].measure\r\n      break;\r\n    }\r\n    if (row[a][8].barline === true) {\r\n      measure = row[a][8].measure;\r\n      break\r\n    }\r\n  }\r\n}\r\nif (kind === 1) {\r\nrow[x][8].measure = measure + 1 // ------declare current measure number\r\nmeasure = measure + 1\r\n}\r\n\r\nif (kind === 3) {\r\n  measure = row[x][8].measure\r\n}\r\n\r\nfor(let b = x + 1; b <= row.length - 1; b++) {\r\n  if (row[b][0].starting === true) {\r\n    console.log(row[b + 1][8])\r\n    row[b + 1][8].measure = measure + 1\r\n    measure = measure + 1\r\n    continue;\r\n  }\r\n\r\n  if (row[b][8].barline === true) {\r\n    row[b][8].measure = measure + 1\r\n    measure = measure + 1\r\n    continue;\r\n  }\r\n\r\n}\r\n\r\n};\r\nmeasureLengthCalc = (x, rowX, kind) => { // ------- get measure length   --- if kind 1, get measure length of left measure and right measure\r\n\r\n  let row = this.state.row;\r\n  \r\n  let starting = x-1;\r\n  let barLength = 0;\r\n  let newX = 1;\r\n  let measure = 1\r\n  let loop = 1;\r\n  let up = null;\r\n  let down = null;\r\n\r\n  console.log(rowX, row[rowX])\r\n  console.log(this.state.row)\r\n    barLength = row[rowX][0].barLength\r\n    up = row[rowX][0].up\r\n    down = row[rowX][0].down\r\n  if (kind === 1) { // if kind 1, need to do 2 loops\r\n    loop = row.length\r\n  }\r\n  if (kind === 2) { // if kind 1, need to do 2 loops\r\n    loop = row.length\r\n  }\r\n     \r\n      console.log(loop)\r\n      for (let l = 1; l <= loop; l++) { // this is the loop       ------------ LOOP ------------\r\n\r\n\r\n        for (let n = starting; n >= 0; n--) { // set the barLength\r\n          if (row[n][0].starting === true) { \r\n            barLength = row[n][0].barLength\r\n            break;\r\n          }\r\n        }\r\n        console.log(\"loop number=\", l, \"Bar Length=\", barLength) \r\n        for (let n = starting; n >= 0; n--) { // set the Strting POINT (newX) and measure   --- or The 1st column in  measure\r\n          if (row[n][0].starting === true) {\r\n            newX = n + 1\r\n            measure = row[n + 1][8].measure\r\n            break;\r\n          }\r\n          if (row[n][8].barline === true) {\r\n            newX = n\r\n            measure = row[n][8].measure\r\n            break;\r\n          }\r\n        }\r\n        \r\n        console.log(x, starting, kind, \"Measure length Calc\",\"newX =\", newX, \"Measure=\",measure)\r\n                    //--------------------------------------------------\r\n    let ret = false\r\n    let noteValue = [0]; // added Zero for reduce()\r\n    let nS = 0\r\n    let nM = 0\r\n    let nBL = barLength\r\n\r\n      for (let b = newX; b <= row.length - 1; b++) {\r\n        if (row[b][0].starting === true){ // break to the starting measure or a bar line\r\n\r\n          nS = b + 1        \r\n          nM = row[b + 1][8].measure\r\n          console.log(row[b][0].barLength)\r\n          console.log(row[b][8], newX)\r\n          nBL = row[b][0].barLength\r\n          if (row[b][0].barLength === null) { // if the next starting measure's Time Siganture is NULL consoleWarn\r\n            for (let c = b; c <= row.length; c++) {\r\n              let type = 3;\r\n              let error = 4;\r\n              let measure = row[c][0].measure\r\n              let up = row[c][0].up\r\n              let barLength = row[c][0].barLength\r\n              let down = row[c][0].down\r\n              let totalNoteValue = row[rowX][0].totalNoteValue\r\n              console.log(measure)\r\n                if (row[c][0].starting === true) {\r\n                  this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue)\r\n                }\r\n                else {\r\n                  b = c\r\n                  break;\r\n                }\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n        if (row[b][8].barline === true) {\r\n          nS = b\r\n          nM = row[b][8].measure\r\n          console.log(row[b][8], newX)\r\n          if (b !== newX) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (row[b][0].note === 1) {\r\n          noteValue.push(4);\r\n        }  \r\n        if (row[b][0].note  === 2) {\r\n          noteValue.push(2);\r\n        }\r\n        if (row[b][0].note === 4) {\r\n          noteValue.push(1);\r\n        }\r\n\r\n        if (b === row.length - 1) {\r\n          ret = true\r\n        }\r\n      }\r\n    let totalNoteValue = noteValue.reduce((accumulator, currentValue ) => {\r\n      return accumulator + currentValue;\r\n    });\r\n\r\n      console.log(measure, barLength, \"vs\", totalNoteValue)\r\n      // -------------------------\r\n\r\n    let type = 1;\r\n      console.log (barLength, totalNoteValue, kind)\r\n      if (barLength === null) {\r\n        starting = nS\r\n        measure = nM\r\n        barLength = nBL\r\n        console.log(starting, measure, barLength)\r\n        if (ret === true) {\r\n          console.log(\"Done\")\r\n          return;\r\n        }\r\n        continue;\r\n      }\r\n\r\n      if (barLength > totalNoteValue) {\r\n        let error = 1\r\n            this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\r\n        console.log(\"kulang\")  \r\n      }\r\n      if (barLength < totalNoteValue) {\r\n        let error = 2\r\n            this.props.consoleWarningTS(type, measure, error, up, down, barLength, totalNoteValue);\r\n        console.log(\"sobra\")\r\n\r\n      }\r\n      if (barLength === totalNoteValue) {\r\n        console.log(\"chakto\")\r\n        this.props.removeWarning(type, measure);\r\n      }\r\n\r\n\r\n      // measure = nextMeasure\r\n      // barLength = nextBarLength\r\n      starting = nS\r\n      measure = nM\r\n      barLength = nBL\r\n      console.log(starting, measure, barLength)\r\n      if (ret === true) {\r\n        console.log(\"Done\")\r\n        return;\r\n      }\r\n  }\r\n};\r\ncalcDownUp = (x) => {\r\n  let row = this.state.row\r\n  let up = this.props.up;\r\n  let down = this.props.down;\r\n  let calcDown = 0;\r\n  let c = 4;\r\n  let i = 0;\r\n  console.log(up,down)\r\n  while (calcDown !== 4 || i < 7) { //current note value should be 4 && do while for 7 times only, limit to 7\r\n      calcDown =  c * down;\r\n      if (calcDown !== 4) {\r\n          c = c/2;\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n        i++;\r\n      }\r\n    let barLength = c * up; \r\n    console.log(barLength)\r\n    row[x][0].barLength = barLength;\r\n    this.setState({ row })\r\n};\r\nvaluePerMeasureCalc = (cell, h, x, m) => { // contain console \r\n  console.log(\"valuePerMeasureCalc\", cell, h, x, m)\r\n  let row = this.state.row;\r\n  let currentX = 0;\r\n  let starting = 0;\r\n  let barline = 1;\r\n  let startingMeasure = 0;  //--- THIS IS THE MEASURE\r\n\r\n    for (let i = currentX; i >= 1; i--) { // find Starting Measure\r\n      if (row[i][0].starting === false) {\r\n        if(row[i][8].barline === true) { // if found...\r\n          barline = i;\r\n          break;\r\n        }\r\n        else {\r\n          continue;\r\n        }\r\n      }\r\n      else {\r\n        barline = i + 1;\r\n        break;\r\n      }\r\n    }\r\n    startingMeasure = row[barline][8].measure\r\n    let measure = startingMeasure;\r\n\r\n    console.log(m)\r\n\r\n  //------------------------------------------------------------------------------------------------------------\r\n      let noteValue = [0]; // added Zero for reduce()\r\n      for (let i = barline; i <= row.length - 1 || row[i -1][0].starting === true || row[i-1][8].barline === true; i++) { // find end of Measure \r\n        console.log(barline, measure)\r\n        if (row[i][0].starting === false) {\r\n          if (row[i][8].barline === false) {\r\n                if (row[i][0].note === 1) {\r\n                  console.log(\"pushed 4\")\r\n                  noteValue.push(4);\r\n                }  \r\n                if (row[i][0].note  === 2) {\r\n                  console.log(\"pushed 2\")\r\n                  noteValue.push(2);\r\n                }\r\n                if (row[i][0].note === 4) {\r\n                  console.log(\"pushed 1\")\r\n                  noteValue.push(1);\r\n                }\r\n            }\r\n            else {\r\n              break;\r\n            } \r\n          }\r\n          else {\r\n              break;\r\n            } \r\n      }\r\n      console.log(noteValue)\r\n      let barLength = row[starting][0].barLength;\r\n      let totalNoteValue = noteValue.reduce((accumulator, currentValue ) => {\r\n        return accumulator + currentValue;\r\n      });\r\n      console.log(startingMeasure, barLength,\"vs\", totalNoteValue)\r\n      let type = 1;\r\n      let up = row[starting][0].up\r\n      let down = row[starting][0].down\r\n      if (barLength > totalNoteValue) {\r\n        let error = 1\r\n            this.props.consoleWarningTS(type, measure, error, up, down);\r\n        console.log(\"kulang\")\r\n        return;\r\n      }\r\n      if (barLength < totalNoteValue) {\r\n        let error = 2\r\n            this.props.consoleWarningTS(type, measure, error, up, down);\r\n        console.log(\"sobra\")\r\n        return;\r\n      }\r\n      if (barLength === totalNoteValue) {\r\n        console.log(h, m)\r\n        \r\n        console.log(\"chakto\")\r\n        this.props.removeWarning(type, measure, up, down);\r\n        return;\r\n      }\r\n          console.log(currentX, starting, barline, barLength, totalNoteValue, startingMeasure)\r\n};\r\n//----------------------------------------------------Clef--------------------------------------------------------------------------------------\r\n\r\ncheckStartingClef = (x, rowX, kind) => {\r\n  let row = this.state.row\r\n  let a = null;\r\n  if (kind === 6) {\r\n    a = rowX\r\n  }\r\n  if (kind === 7) {\r\n    a = x\r\n  }\r\nconsole.log(row[a][0])\r\n  if (row[a][0].clef === null) {\r\n\r\n      let type = 4;\r\n      let measure = row[a + 1][8].measure;\r\n      let error = 6;\r\n      this.props.consoleWarningClef(type, measure, error)\r\n    \r\n  }\r\n  else {\r\n    this.measureLengthCalc(x, rowX, kind)\r\n  }\r\n};\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\ncomponentDidMount() {\r\n  this.createMeasureRow();\r\n  this.createRow();\r\n  this.measure1();\r\n  this.props.insertStartingMeasure(this.insertStartingMeasure);\r\n  this.props.setStarting(this.setStarting);\r\n  this.props.removeStartingMeasure(this.removeStartingMeasure);\r\n};\r\n\r\nmeasure1() {\r\n  let row = this.state.row\r\n  row[1][8].measure = 1;\r\n  this.setState({ row });\r\n}\r\n\r\n  //-----------------------------RENDER HERE------------------------------------\r\n  render() {\r\n\r\n    let rows = this.state.row.map((row,index) => {\r\n        \r\n      return (\r\n        <Row\r\n          cells= {row}\r\n          key= {index}\r\n          click= {this.click}\r\n          clickLeft= {this.clickLeft}\r\n          clickRight= {this.clickRight}\r\n          ks1={this.ks1}\r\n          ks2={this.ks2}\r\n       />\r\n      ) \r\n    })\r\n      return (<div className= \"row\">\r\n        <div>\r\n          <Timer \r\n            row={this.state.row}\r\n            column={this.state.column}\r\n            tempo={this.props.tempo}\r\n            timeSig= {this.props.timeSig}\r\n            currentSelected= {this.state.currentSelected}\r\n            startPauseSwitch = {this.props.startPauseSwitch}\r\n            clockStop = {this.props.clockStop}\r\n            volume = {this.props.volume}\r\n            playerIcon={this.props.playerIcon}\r\n            consoleWarningClef = {this.props.consoleWarningClef}\r\n            metronome = {this.props.metronome}\r\n          />\r\n        </div>  \r\n\r\n        {rows} \r\n       \r\n      </div>);  \r\n  }\r\n}\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}