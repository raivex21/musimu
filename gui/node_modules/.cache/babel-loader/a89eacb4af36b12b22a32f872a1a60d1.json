{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\containers\\\\Inbox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { getConvoList } from \"../features/convoSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { createConvoMessage, getConvoDetail } from \"../features/convoSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Inbox() {\n  _s();\n\n  var _convoDetail$messages;\n\n  const dispatch = useDispatch();\n  const convos = useSelector(state => state.convo.convos);\n  const convoDetail = useSelector(state => state.convo.convoDetail);\n  const {\n    token,\n    userId\n  } = useSelector(state => state.auth);\n  const [currentConvo, setCurrentConvo] = React.useState(null);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  useEffect(() => {\n    dispatch(getConvoList(token, userId));\n\n    if (currentConvo !== null) {\n      dispatch(getConvoDetail(token, currentConvo.id));\n    }\n  }, [userId, token, dispatch, currentConvo]);\n\n  const openConvo = convo => {\n    console.log(convo);\n    setCurrentConvo(convo);\n  };\n\n  console.log(currentConvo);\n\n  const handleNewMessage = e => {\n    setNewMessage(e.target.value);\n  };\n\n  const send = () => {\n    const formData = {\n      convo: convoDetail.id,\n      user: userId,\n      message: newMessage\n    };\n    dispatch(createConvoMessage(token, formData, userId));\n    const current = convos.filter(item => item.id === currentConvo.id);\n    console.log(current[0]);\n    setCurrentConvo(current[0]);\n    setNewMessage(\"\");\n  };\n\n  const selected = current => {\n    if (current === (currentConvo === null || currentConvo === void 0 ? void 0 : currentConvo.id)) return \"selected-item\";else {\n      return null;\n    }\n  };\n\n  console.log(convoDetail);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inbox\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inbox__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inbox__senders\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox__senders-head\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Conversations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), convos === null || convos === void 0 ? void 0 : convos.map(item => userId === item.user1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openConvo(item),\n          className: `convo__partner ${selected(item.id)}`,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: item.user2_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openConvo(item),\n          className: `convo__partner ${selected(item.id)}`,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: item.user1_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inbox__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox__head\",\n          children: userId === (convoDetail === null || convoDetail === void 0 ? void 0 : convoDetail.user1) ? /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: convoDetail === null || convoDetail === void 0 ? void 0 : convoDetail.user2_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: convoDetail === null || convoDetail === void 0 ? void 0 : convoDetail.user1_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox__body\",\n          children: convoDetail !== null && (convoDetail === null || convoDetail === void 0 ? void 0 : (_convoDetail$messages = convoDetail.messages) === null || _convoDetail$messages === void 0 ? void 0 : _convoDetail$messages.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: item.user === userId ? \"inbox__message self\" : \"inbox__message\",\n            children: userId !== item.user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                src: `${process.env.REACT_APP_AXIOS_URL}${item.avatar}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inbox__message-text\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: item.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inbox__message-text\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: item.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n                src: `${process.env.REACT_APP_AXIOS_URL}${item.avatar}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inbox__newMessage\",\n          children: convoDetail !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: newMessage,\n              placeholder: \"New Message\",\n              onChange: handleNewMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: send,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Inbox, \"lYzInh/cxzchAbeVOvh+Rry5qFU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Inbox;\nexport default Inbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/containers/Inbox.js"],"names":["React","useEffect","getConvoList","useSelector","useDispatch","Typography","Avatar","createConvoMessage","getConvoDetail","Inbox","dispatch","convos","state","convo","convoDetail","token","userId","auth","currentConvo","setCurrentConvo","useState","newMessage","setNewMessage","id","openConvo","console","log","handleNewMessage","e","target","value","send","formData","user","message","current","filter","item","selected","map","user1","user2_name","user1_name","messages","process","env","REACT_APP_AXIOS_URL","avatar"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getConvoList } from \"../features/convoSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { createConvoMessage, getConvoDetail } from \"../features/convoSlice\";\r\n\r\nfunction Inbox() {\r\n  const dispatch = useDispatch();\r\n  const convos = useSelector((state) => state.convo.convos);\r\n  const convoDetail = useSelector((state) => state.convo.convoDetail);\r\n  const { token, userId } = useSelector((state) => state.auth);\r\n  const [currentConvo, setCurrentConvo] = React.useState(null);\r\n  const [newMessage, setNewMessage] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getConvoList(token, userId));\r\n    if (currentConvo !== null) {\r\n      dispatch(getConvoDetail(token, currentConvo.id));\r\n    }\r\n  }, [userId, token, dispatch, currentConvo]);\r\n\r\n  const openConvo = (convo) => {\r\n    console.log(convo);\r\n    setCurrentConvo(convo);\r\n  };\r\n\r\n  console.log(currentConvo);\r\n  const handleNewMessage = (e) => {\r\n    setNewMessage(e.target.value);\r\n  };\r\n\r\n  const send = () => {\r\n    const formData = {\r\n      convo: convoDetail.id,\r\n      user: userId,\r\n      message: newMessage,\r\n    };\r\n    dispatch(createConvoMessage(token, formData, userId));\r\n    const current = convos.filter((item) => item.id === currentConvo.id);\r\n    console.log(current[0]);\r\n    setCurrentConvo(current[0]);\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  const selected = (current) => {\r\n    if (current === currentConvo?.id) return \"selected-item\";\r\n    else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  console.log(convoDetail);\r\n  return (\r\n    <div className=\"inbox\">\r\n      <div className=\"inbox__container\">\r\n        <div className=\"inbox__senders\">\r\n          <div className=\"inbox__senders-head\">\r\n            <Typography variant=\"h5\">Conversations</Typography>\r\n          </div>\r\n\r\n          {convos?.map((item) =>\r\n            userId === item.user1 ? (\r\n              <div\r\n                key={item.id}\r\n                onClick={() => openConvo(item)}\r\n                className={`convo__partner ${selected(item.id)}`}\r\n              >\r\n                <Typography variant=\"subtitle2\">{item.user2_name}</Typography>\r\n              </div>\r\n            ) : (\r\n              <div\r\n                key={item.id}\r\n                onClick={() => openConvo(item)}\r\n                className={`convo__partner ${selected(item.id)}`}\r\n              >\r\n                <Typography variant=\"subtitle2\">{item.user1_name}</Typography>\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n        <div className=\"inbox__content\">\r\n          <div className=\"inbox__head\">\r\n            {userId === convoDetail?.user1 ? (\r\n              <Typography variant=\"h6\">{convoDetail?.user2_name}</Typography>\r\n            ) : (\r\n              <Typography variant=\"h6\">{convoDetail?.user1_name}</Typography>\r\n            )}\r\n          </div>\r\n          <div className=\"inbox__body\">\r\n            {convoDetail !== null &&\r\n              convoDetail?.messages?.map((item) => (\r\n                <div\r\n                  className={\r\n                    item.user === userId\r\n                      ? \"inbox__message self\"\r\n                      : \"inbox__message\"\r\n                  }\r\n                >\r\n                  {userId !== item.user ? (\r\n                    <>\r\n                      <Avatar\r\n                        src={`${process.env.REACT_APP_AXIOS_URL}${item.avatar}`}\r\n                      ></Avatar>\r\n                      <div className=\"inbox__message-text\">\r\n                        <Typography variant=\"subtitle2\">\r\n                          {item.message}\r\n                        </Typography>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"inbox__message-text\">\r\n                        <Typography variant=\"subtitle2\">\r\n                          {item.message}\r\n                        </Typography>\r\n                      </div>\r\n                      <Avatar\r\n                        src={`${process.env.REACT_APP_AXIOS_URL}${item.avatar}`}\r\n                      ></Avatar>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))}\r\n          </div>\r\n          <div className=\"inbox__newMessage\">\r\n            {convoDetail !== null && (\r\n              <>\r\n                <input\r\n                  value={newMessage}\r\n                  placeholder=\"New Message\"\r\n                  onChange={handleNewMessage}\r\n                />\r\n                <button onClick={send}>Send</button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Inbox;\r\n"]},"metadata":{},"sourceType":"module"}