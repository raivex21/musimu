[{"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\index.js":"1","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\App.js":"2","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\serviceWorker.js":"3","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\app\\store.js":"4","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\authSlice.js":"5","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\Layout.js":"6","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\routes\\PrivateRoutes.js":"7","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\routes\\PublicRoutes.js":"8","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Sidebar.js":"9","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Header.js":"10","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\Dashboard.js":"11","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\Login.js":"12","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\classroomSlice.js":"13","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\ClassroomDetail.js":"14","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\enrollmentSlice.js":"15","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\EnrollmentsList.js":"16","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\home\\Home.js":"17","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Card.js":"18","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\hooks\\window-dimensions.js":"19","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\ClassroomList.js":"20","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Classroom.js":"21","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\StudentList.js":"22","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\userSlice.js":"23","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\announcementSlice.js":"24","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\CreateAnnouncement.js":"25","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\AnnouncementList.js":"26","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Announcement.js":"27","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\Register.js":"28","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\CreateClassroom.js":"29","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\schoolSlice.js":"30","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\updateSlice.js":"31","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\EditClassroom.js":"32"},{"size":645,"mtime":1613145095201,"results":"33","hashOfConfig":"34"},{"size":1548,"mtime":1615275864485,"results":"35","hashOfConfig":"34"},{"size":5141,"mtime":1608469335089,"results":"36","hashOfConfig":"34"},{"size":711,"mtime":1615263670585,"results":"37","hashOfConfig":"34"},{"size":3899,"mtime":1615202984717,"results":"38","hashOfConfig":"34"},{"size":589,"mtime":1615384013805,"results":"39","hashOfConfig":"34"},{"size":348,"mtime":1614583361415,"results":"40","hashOfConfig":"34"},{"size":370,"mtime":1615043754040,"results":"41","hashOfConfig":"34"},{"size":1548,"mtime":1614922144606,"results":"42","hashOfConfig":"34"},{"size":1173,"mtime":1615382440487,"results":"43","hashOfConfig":"34"},{"size":1847,"mtime":1615391411173,"results":"44","hashOfConfig":"34"},{"size":1808,"mtime":1615201216554,"results":"45","hashOfConfig":"34"},{"size":3533,"mtime":1615390059314,"results":"46","hashOfConfig":"34"},{"size":965,"mtime":1615199784634,"results":"47","hashOfConfig":"34"},{"size":3543,"mtime":1615452011160,"results":"48","hashOfConfig":"34"},{"size":1278,"mtime":1615200979614,"results":"49","hashOfConfig":"34"},{"size":401,"mtime":1615043890914,"results":"50","hashOfConfig":"34"},{"size":379,"mtime":1614869897775,"results":"51","hashOfConfig":"34"},{"size":617,"mtime":1614438563574,"results":"52","hashOfConfig":"34"},{"size":1319,"mtime":1615391196217,"results":"53","hashOfConfig":"34"},{"size":198,"mtime":1614598614778,"results":"54","hashOfConfig":"34"},{"size":1615,"mtime":1615465097153,"results":"55","hashOfConfig":"34"},{"size":1311,"mtime":1614739505530,"results":"56","hashOfConfig":"34"},{"size":2414,"mtime":1615430825941,"results":"57","hashOfConfig":"34"},{"size":2985,"mtime":1615388819447,"results":"58","hashOfConfig":"34"},{"size":2078,"mtime":1615431357625,"results":"59","hashOfConfig":"34"},{"size":652,"mtime":1614943049683,"results":"60","hashOfConfig":"34"},{"size":2339,"mtime":1615045291043,"results":"61","hashOfConfig":"34"},{"size":6272,"mtime":1615431030590,"results":"62","hashOfConfig":"34"},{"size":3326,"mtime":1615202409367,"results":"63","hashOfConfig":"34"},{"size":480,"mtime":1615263668591,"results":"64","hashOfConfig":"34"},{"size":6270,"mtime":1615391444631,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"9qcdwt",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"68"},"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\index.js",[],["140","141"],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\App.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\serviceWorker.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\app\\store.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\authSlice.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\Layout.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\routes\\PrivateRoutes.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\routes\\PublicRoutes.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Sidebar.js",[],["142","143"],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Header.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\Dashboard.js",["144"],"import React, { useState } from \"react\";\r\nimport EnrollmentsList from \"../components/EnrollmentsList\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ClassroomList from \"../components/ClassroomList.js\";\r\nimport StudentList from \"../components/StudentList\";\r\nimport AnnouncementList from \"../components/AnnouncementList\";\r\nimport CreateClassroom from \"../components/CreateClassroom\";\r\nimport CreateAnnouncement from \"../components/CreateAnnouncement\";\r\nimport EditClassroom from \"../components/EditClassroom\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nfunction Dashboard() {\r\n  const { is_teacher, avatar, first_name, last_name } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard__main\">\r\n        <div className=\"dashboard__head\">\r\n          <div className=\"dashboard__teacher\">\r\n            <Avatar src={`http://127.0.0.1:8000${avatar}`} />\r\n            <div className=\"teacher__name\">\r\n              <h3>{`${first_name} ${last_name}`}</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"head__buttons\">\r\n            <CreateClassroom />\r\n            <EditClassroom />\r\n\r\n            <CreateAnnouncement />\r\n          </div>\r\n        </div>\r\n        <div className=\"dashboard__classrooms\">\r\n          {is_teacher ? <ClassroomList /> : <EnrollmentsList />}\r\n        </div>\r\n        <div className=\"dashboard__students\">\r\n          <div className=\"dashboard__students-search\">\r\n            <StudentList />\r\n          </div>\r\n\r\n          <div className=\"dashboard__students-profile\">profile</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"dashboard__announcement\">\r\n        <div className=\"announcement__header\">Announcements</div>\r\n\r\n        <AnnouncementList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\Login.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\classroomSlice.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\ClassroomDetail.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\enrollmentSlice.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\EnrollmentsList.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\home\\Home.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Card.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\hooks\\window-dimensions.js",[],["145","146"],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\ClassroomList.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Classroom.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\StudentList.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\userSlice.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\announcementSlice.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\CreateAnnouncement.js",["147"],"import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  createAnnouncement,\r\n  getAnnouncementList,\r\n} from \"../features/announcementSlice\";\r\nimport { toggle } from \"../features/updateSlice\";\r\n\r\nexport default function EditClassroom() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const { token, userId } = useSelector((state) => state.auth);\r\n  const update = useSelector((state) => state.update.isUpdated);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [content, setContent] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handlePost = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"isGlobal\", true);\r\n    formData.append(\"classroom_id\", 2);\r\n    formData.append(\"author_id\", userId);\r\n    dispatch(createAnnouncement(token, formData));\r\n    dispatch(toggle(!update));\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAnnouncementList(token));\r\n  }, [update, token]);\r\n\r\n  const handleContent = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Post Announcement\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Post Announcement</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add announcements globally or for specific Classroom.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleName}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"content\"\r\n            label=\"Content\"\r\n            type=\"text\"\r\n            onChange={handleContent}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handlePost} color=\"primary\">\r\n            Post\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\AnnouncementList.js",["148"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getAnnouncementList } from \"../features/announcementSlice\";\r\nimport Announcement from \"./Announcement\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { toggle } from \"../features/updateSlice\";\r\n\r\nconst announcementCount = 10;\r\n\r\nfunction AnnouncementList() {\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const update = useSelector((state) => state.update.isUpdated);\r\n\r\n  const announcements = useSelector(\r\n    (state) => state.announcement.announcements\r\n  );\r\n\r\n  console.log(update);\r\n  const count = Math.ceil(announcements.length / announcementCount);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAnnouncementList(token));\r\n  }, [update, token, dispatch]);\r\n\r\n  const handleChangePage = (event, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const paging = (page - 1) * announcementCount;\r\n\r\n  const sortedAnnouncements = announcements.slice().sort((a, b) => b.id - a.id);\r\n  console.log(announcements);\r\n  console.log(sortedAnnouncements);\r\n  //   const pagedAnnouncements = announcements.slice(paging, paging + 5);\r\n  //   console.log(pagedAnnouncements);\r\n  return (\r\n    <div className=\"announcements\">\r\n      <div className=\"announcement__container\">\r\n        {sortedAnnouncements &&\r\n          sortedAnnouncements\r\n            .slice(paging, paging + announcementCount)\r\n            .map((item) => {\r\n              return (\r\n                <Announcement\r\n                  title={item.name}\r\n                  content={item.content}\r\n                  avatar={item.avatar}\r\n                  key={item.id}\r\n                />\r\n              );\r\n            })}\r\n      </div>\r\n      <div className=\"announcement__footer\">\r\n        <Pagination\r\n          count={count}\r\n          siblingCount={0}\r\n          color=\"secondary\"\r\n          onChange={handleChangePage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnnouncementList;\r\n","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\Announcement.js",[],["149","150"],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\containers\\Register.js",["151","152","153","154"],"import React, { useState } from \"react\";\r\nimport { authLogin } from \"../features/authSlice\";\r\nimport { navigate, A } from \"hookrouter\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nfunction Register() {\r\n  const error = useSelector((state) => state.auth.error);\r\n  const dispatch = useDispatch();\r\n  const [password1, setPassword1] = useState(null);\r\n  const [password2, setPassword2] = useState(null);\r\n  const [username, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [lastName, setLastName] = useState(null);\r\n  const [firstName, setFirstName] = useState(null);\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authLogin(username, password1));\r\n    if (error !== null || (username !== null && password1 !== null)) {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n  const onUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onPassword1Change = (e) => {\r\n    setPassword1(e.target.value);\r\n  };\r\n  const onPassword2Change = (e) => {\r\n    setPassword2(e.target.value);\r\n  };\r\n\r\n  const onFirstNameChange = (e) => {\r\n    setFirstName(e.target.value);\r\n  };\r\n\r\n  const onLastNameChange = (e) => {\r\n    setLastName(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__welcome\">\r\n        <form>\r\n          <div className=\"\">\r\n            <input onChange={(e) => onUsernameChange(e)} />\r\n          </div>\r\n          <div className=\"\">\r\n            <input onChange={(e) => onEmailChange(e)} />\r\n          </div>\r\n          <div className=\"\">\r\n            <input type=\"password\" onChange={(e) => onPassword1Change(e)} />\r\n          </div>\r\n          <div className=\"\">\r\n            <input type=\"password\" onChange={(e) => onPassword2Change(e)} />\r\n          </div>\r\n          <div className=\"\">\r\n            <input onChange={(e) => onFirstNameChange(e)} />\r\n          </div>\r\n          <div className=\"\">\r\n            <input onChange={(e) => onLastNameChange(e)} />\r\n          </div>\r\n          <div className=\"\">\r\n            <button onClick={register}>Register</button>\r\n          </div>\r\n          <A className=\"link\" href=\"/\">\r\n            Home\r\n          </A>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\CreateClassroom.js",["155"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { toggle } from \"../features/updateSlice\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport {\r\n  getSchoolYear,\r\n  getGradeLevel,\r\n  getCover,\r\n} from \"../features/schoolSlice\";\r\nimport { createClassroom } from \"../features/classroomSlice\";\r\n\r\nexport default function CreateClassroom() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [schedule, setSchedule] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [cover, setCover] = useState(null);\r\n  const [year, setYear] = useState(null);\r\n  const [gradeLevel, setGradeLevel] = useState(null);\r\n  const schoolYear = useSelector((state) => state.school.schoolYear);\r\n  const covers = useSelector((state) => state.school.cover);\r\n  const level = useSelector((state) => state.school.gradeLevel);\r\n  const { token, first_name, last_name, userId } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n  const classrooms = useSelector((state) => state.classroom.classrooms);\r\n  const update = useSelector((state) => state.update.isUpdated);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSchoolYear(token));\r\n    dispatch(getGradeLevel(token));\r\n    dispatch(getCover(token));\r\n  }, [token, update, classrooms]);\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSchedule = (e) => {\r\n    setSchedule(e.target.value);\r\n  };\r\n  const handleLevelChange = (e) => {\r\n    console.log(e.target.value);\r\n    setGradeLevel(e.target.value);\r\n  };\r\n  const handleYearChange = (e) => {\r\n    console.log(e.target.value);\r\n    setYear(e.target.value);\r\n  };\r\n\r\n  const handleCoverChange = (e) => {\r\n    setCover(e.target.value);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePost = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"schedule\", schedule);\r\n    formData.append(\"teacher_id\", userId);\r\n    formData.append(\"level_id\", gradeLevel);\r\n    formData.append(\"school_year_id\", year);\r\n    formData.append(\"cover\", cover);\r\n    formData.append(\"isActive\", true);\r\n    dispatch(createClassroom(token, formData));\r\n    console.log(formData);\r\n    dispatch(toggle(!update));\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Create Classroom\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Classroom</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add students after creating the classroom\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Classroom Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleName}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"schedule\"\r\n            label=\"Schedule\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleSchedule}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"teacher\"\r\n            label=\"Teacher\"\r\n            type=\"text\"\r\n            value={`${first_name} ${last_name}`}\r\n            disabled\r\n            fullWidth\r\n          />\r\n          <div className=\"classroom__create-select\">\r\n            <InputLabel id=\"coverLabel\">Cover</InputLabel>\r\n            <Select\r\n              labelId=\"coverLabel\"\r\n              id=\"cover\"\r\n              value={cover}\r\n              onChange={handleCoverChange}\r\n              fullWidth\r\n            >\r\n              {covers &&\r\n                covers.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n          <div className=\"classroom__create-select\">\r\n            <InputLabel id=\"levelLabel\">Level</InputLabel>\r\n            <Select\r\n              labelId=\"levelLabel\"\r\n              id=\"level\"\r\n              value={gradeLevel}\r\n              onChange={handleLevelChange}\r\n              fullWidth\r\n            >\r\n              {level &&\r\n                level.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n          <div className=\"classroom__create-select\">\r\n            <InputLabel id=\"yearLabel\">School Year</InputLabel>\r\n            <Select\r\n              labelId=\"yearLabel\"\r\n              id=\"year\"\r\n              value={year}\r\n              onChange={handleYearChange}\r\n              fullWidth\r\n            >\r\n              {schoolYear &&\r\n                schoolYear.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {`${item.start_year}-${item.end_year}`}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handlePost} color=\"primary\">\r\n            Post\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\schoolSlice.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\features\\updateSlice.js",[],"C:\\Users\\Raivex\\Documents\\React\\Project\\gui\\src\\components\\EditClassroom.js",["156"],"import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { toggle } from \"../features/updateSlice\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nimport {\r\n  getSchoolYear,\r\n  getGradeLevel,\r\n  getCover,\r\n} from \"../features/schoolSlice\";\r\nimport { createClassroom } from \"../features/classroomSlice\";\r\n\r\nexport default function CreateClassroom() {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [schedule, setSchedule] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [cover, setCover] = useState(null);\r\n  const [year, setYear] = useState(null);\r\n  const [gradeLevel, setGradeLevel] = useState(null);\r\n  const schoolYear = useSelector((state) => state.school.schoolYear);\r\n  const covers = useSelector((state) => state.school.cover);\r\n  const level = useSelector((state) => state.school.gradeLevel);\r\n  const { token, first_name, last_name, userId } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n  const classrooms = useSelector((state) => state.classroom.classrooms);\r\n  const update = useSelector((state) => state.update.isUpdated);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSchoolYear(token));\r\n    dispatch(getGradeLevel(token));\r\n    dispatch(getCover(token));\r\n  }, [token, update, classrooms]);\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSchedule = (e) => {\r\n    setSchedule(e.target.value);\r\n  };\r\n  const handleLevelChange = (e) => {\r\n    console.log(e.target.value);\r\n    setGradeLevel(e.target.value);\r\n  };\r\n  const handleYearChange = (e) => {\r\n    console.log(e.target.value);\r\n    setYear(e.target.value);\r\n  };\r\n\r\n  const handleCoverChange = (e) => {\r\n    setCover(e.target.value);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePost = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"schedule\", schedule);\r\n    formData.append(\"teacher_id\", userId);\r\n    formData.append(\"level_id\", gradeLevel);\r\n    formData.append(\"school_year_id\", year);\r\n    formData.append(\"cover\", cover);\r\n    formData.append(\"isActive\", true);\r\n    dispatch(createClassroom(token, formData));\r\n    console.log(formData);\r\n    dispatch(toggle(!update));\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Edit Classroom\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Classroom</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add students after creating the classroom\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Classroom Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleName}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"schedule\"\r\n            label=\"Schedule\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleSchedule}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"teacher\"\r\n            label=\"Teacher\"\r\n            type=\"text\"\r\n            value={`${first_name} ${last_name}`}\r\n            disabled\r\n            fullWidth\r\n          />\r\n          <div className=\"classroom__create-select\">\r\n            <InputLabel id=\"coverLabel\">Cover</InputLabel>\r\n            <Select\r\n              labelId=\"coverLabel\"\r\n              id=\"cover\"\r\n              value={cover}\r\n              onChange={handleCoverChange}\r\n              fullWidth\r\n            >\r\n              {covers &&\r\n                covers.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n          <div className=\"classroom__create-select\">\r\n            <InputLabel id=\"levelLabel\">Level</InputLabel>\r\n            <Select\r\n              labelId=\"levelLabel\"\r\n              id=\"level\"\r\n              value={gradeLevel}\r\n              onChange={handleLevelChange}\r\n              fullWidth\r\n            >\r\n              {level &&\r\n                level.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n          <div className=\"classroom__create-select\">\r\n            <InputLabel id=\"yearLabel\">School Year</InputLabel>\r\n            <Select\r\n              labelId=\"yearLabel\"\r\n              id=\"year\"\r\n              value={year}\r\n              onChange={handleYearChange}\r\n              fullWidth\r\n            >\r\n              {schoolYear &&\r\n                schoolYear.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {`${item.start_year}-${item.end_year}`}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handlePost} color=\"primary\">\r\n            Post\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"157","replacedBy":"167"},{"ruleId":"159","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":38,"column":6,"nodeType":"171","endLine":38,"endColumn":21,"suggestions":"172"},{"ruleId":"163","severity":1,"message":"173","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"157","replacedBy":"174"},{"ruleId":"159","replacedBy":"175"},{"ruleId":"163","severity":1,"message":"176","line":9,"column":10,"nodeType":"165","messageId":"166","endLine":9,"endColumn":19},{"ruleId":"163","severity":1,"message":"177","line":11,"column":10,"nodeType":"165","messageId":"166","endLine":11,"endColumn":15},{"ruleId":"163","severity":1,"message":"178","line":12,"column":10,"nodeType":"165","messageId":"166","endLine":12,"endColumn":18},{"ruleId":"163","severity":1,"message":"179","line":13,"column":10,"nodeType":"165","messageId":"166","endLine":13,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":45,"column":6,"nodeType":"171","endLine":45,"endColumn":33,"suggestions":"180"},{"ruleId":"169","severity":1,"message":"170","line":45,"column":6,"nodeType":"171","endLine":45,"endColumn":33,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["182"],["183"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'toggle' is defined but never used.",["182"],["183"],"'password2' is assigned a value but never used.","'email' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.",["185"],["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"189","fix":"191"},"Update the dependencies array to be: [update, token, dispatch]",{"range":"192","text":"193"},"Update the dependencies array to be: [token, update, classrooms, dispatch]",{"range":"194","text":"195"},{"range":"196","text":"195"},[1466,1481],"[update, token, dispatch]",[1812,1839],"[token, update, classrooms, dispatch]",[1812,1839]]