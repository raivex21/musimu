{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\components\\\\Quiz\\\\QuizDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, InputLabel, MenuItem, TextField, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getQuizDetail, addQuestion, getChoiceList, addChoice } from \"../../features/quizSlice\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport Chip from \"@material-ui/core/Chip\";\nimport QuizViewer from \"./QuizViewer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    minWidth: \"100%\",\n    margin: \"10px 0\"\n  },\n  buttonStyle: {\n    minWidth: \"100%\",\n    margin: \"20px 0\",\n    height: \"3rem\"\n  },\n  choiceButton: {\n    minWidth: \"100%\",\n    margin: \"10px 0\",\n    height: \"2rem\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 2\n  }\n}));\n\nfunction getStyles(name, choices, theme) {\n  return {\n    fontWeight: choices.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction QuizDetail(props) {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [choices, setChoices] = useState([]);\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [newChoice, setNewChoice] = useState(\"\");\n  const quizDetail = useSelector(state => state.quiz.quizDetail);\n  const token = useSelector(state => state.auth.token);\n  const choiceList = useSelector(state => state.quiz.choiceList);\n  useEffect(() => {\n    dispatch(getQuizDetail(token, props.id));\n    dispatch(getChoiceList(token));\n  }, [dispatch, token, props.id]);\n\n  const handleChange = event => {\n    setChoices(event.target.value);\n  };\n\n  const handleQuestion = e => {\n    setQuestion(e.target.value);\n  };\n\n  const handleAnswer = e => {\n    setAnswer(e.target.value);\n  };\n\n  const handleAddQuestion = () => {\n    const intId = parseInt(props.id);\n    const question_choices = choices.map(item => parseInt(item.id));\n    const formData = {\n      question: question,\n      quiz: intId,\n      answer: answer,\n      choices: question_choices\n    };\n    dispatch(addQuestion(token, formData, props.id));\n  };\n\n  const handleChangeNewChoice = e => {\n    setNewChoice(e.target.value);\n  };\n\n  const handleAddChoice = () => {\n    const formData = {\n      name: newChoice\n    };\n    dispatch(addChoice(token, formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createQuiz\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Add Questions to \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: quizDetail.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createQuiz__question\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Question Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: `outlined-basic`,\n          label: \"Quiz Question\",\n          variant: \"outlined\",\n          className: classes.textField,\n          size: \"small\",\n          multiline: true,\n          onChange: handleQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"createQuiz__choicesGrid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createQuiz__choiceAnswer\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: `chip-label`,\n                children: \"Choices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: `chip-label`,\n                id: `chip`,\n                multiple: true,\n                value: choices,\n                onChange: handleChange,\n                input: /*#__PURE__*/_jsxDEV(Input, {\n                  id: `chip`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 26\n                }, this),\n                renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.chips,\n                  children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: value.name,\n                    className: classes.chip\n                  }, value.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this),\n                MenuProps: MenuProps,\n                children: choiceList.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: name,\n                  style: getStyles(name, choices, theme),\n                  children: name.name\n                }, name.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              className: classes.formControl,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-simple-select-outlined-label\",\n                children: \"Answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"demo-simple-select-outlined-label\",\n                id: \"demo-simple-select-outlined\",\n                value: answer,\n                onChange: handleAnswer,\n                label: \"Answer\",\n                size: \"small\",\n                children: choiceList.map(choice => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: choice.id,\n                  children: choice.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createQuiz__addChoice\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Create a new Option to Choices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"choice\",\n              label: \"Add to Choices\",\n              variant: \"outlined\",\n              className: classes.textField,\n              size: \"small\",\n              onChange: handleChangeNewChoice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: classes.choiceButton,\n              variant: \"contained\",\n              color: \"secondary\",\n              onClick: handleAddChoice,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonStyle,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleAddQuestion,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createQuiz\",\n        children: /*#__PURE__*/_jsxDEV(QuizViewer, {\n          quizId: quizDetail.id,\n          questions: quizDetail.questions,\n          editQuiz: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizDetail, \"Wxupyw1xD3GvT03wkd7A3w9lZd8=\", false, function () {\n  return [useStyles, useTheme, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = QuizDetail;\nexport default QuizDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizDetail\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/components/Quiz/QuizDetail.js"],"names":["Button","FormControl","InputLabel","MenuItem","TextField","Typography","React","useEffect","useState","useDispatch","useSelector","getQuizDetail","addQuestion","getChoiceList","addChoice","makeStyles","useTheme","Select","Input","Chip","QuizViewer","useStyles","theme","textField","minWidth","margin","buttonStyle","height","choiceButton","formControl","spacing","maxWidth","chips","display","flexWrap","chip","getStyles","name","choices","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","QuizDetail","props","classes","dispatch","setChoices","question","setQuestion","answer","setAnswer","newChoice","setNewChoice","quizDetail","state","quiz","token","auth","choiceList","id","handleChange","event","target","value","handleQuestion","e","handleAnswer","handleAddQuestion","intId","parseInt","question_choices","map","item","formData","handleChangeNewChoice","handleAddChoice","selected","choice","questions"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getQuizDetail,\r\n  addQuestion,\r\n  getChoiceList,\r\n  addChoice,\r\n} from \"../../features/quizSlice\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport QuizViewer from \"./QuizViewer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    minWidth: \"100%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonStyle: {\r\n    minWidth: \"100%\",\r\n    margin: \"20px 0\",\r\n    height: \"3rem\",\r\n  },\r\n  choiceButton: {\r\n    minWidth: \"100%\",\r\n    margin: \"10px 0\",\r\n    height: \"2rem\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n}));\r\n\r\nfunction getStyles(name, choices, theme) {\r\n  return {\r\n    fontWeight:\r\n      choices.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction QuizDetail(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const [choices, setChoices] = useState([]);\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [newChoice, setNewChoice] = useState(\"\");\r\n  const quizDetail = useSelector((state) => state.quiz.quizDetail);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const choiceList = useSelector((state) => state.quiz.choiceList);\r\n\r\n  useEffect(() => {\r\n    dispatch(getQuizDetail(token, props.id));\r\n    dispatch(getChoiceList(token));\r\n  }, [dispatch, token, props.id]);\r\n\r\n  const handleChange = (event) => {\r\n    setChoices(event.target.value);\r\n  };\r\n  const handleQuestion = (e) => {\r\n    setQuestion(e.target.value);\r\n  };\r\n  const handleAnswer = (e) => {\r\n    setAnswer(e.target.value);\r\n  };\r\n\r\n  const handleAddQuestion = () => {\r\n    const intId = parseInt(props.id);\r\n    const question_choices = choices.map((item) => parseInt(item.id));\r\n    const formData = {\r\n      question: question,\r\n      quiz: intId,\r\n      answer: answer,\r\n      choices: question_choices,\r\n    };\r\n    dispatch(addQuestion(token, formData, props.id));\r\n  };\r\n\r\n  const handleChangeNewChoice = (e) => {\r\n    setNewChoice(e.target.value);\r\n  };\r\n\r\n  const handleAddChoice = () => {\r\n    const formData = {\r\n      name: newChoice,\r\n    };\r\n    dispatch(addChoice(token, formData));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"createQuiz\">\r\n        <Typography variant=\"h6\">Add Questions to </Typography>\r\n        <Typography variant=\"h5\">{quizDetail.name}</Typography>\r\n        <div className=\"createQuiz__question\">\r\n          <Typography variant=\"h6\">Question Form</Typography>\r\n          <TextField\r\n            id={`outlined-basic`}\r\n            label=\"Quiz Question\"\r\n            variant=\"outlined\"\r\n            className={classes.textField}\r\n            size=\"small\"\r\n            multiline\r\n            onChange={handleQuestion}\r\n          />\r\n          <div className=\"createQuiz__choicesGrid\">\r\n            <div className=\"createQuiz__choiceAnswer\">\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id={`chip-label`}>Choices</InputLabel>\r\n                <Select\r\n                  labelId={`chip-label`}\r\n                  id={`chip`}\r\n                  multiple\r\n                  value={choices}\r\n                  onChange={handleChange}\r\n                  input={<Input id={`chip`} />}\r\n                  renderValue={(selected) => (\r\n                    <div className={classes.chips}>\r\n                      {selected.map((value) => (\r\n                        <Chip\r\n                          key={value.id}\r\n                          label={value.name}\r\n                          className={classes.chip}\r\n                        />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  MenuProps={MenuProps}\r\n                >\r\n                  {choiceList.map((name) => (\r\n                    <MenuItem\r\n                      key={name.id}\r\n                      value={name}\r\n                      style={getStyles(name, choices, theme)}\r\n                    >\r\n                      {name.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Answer\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  value={answer}\r\n                  onChange={handleAnswer}\r\n                  label=\"Answer\"\r\n                  size=\"small\"\r\n                >\r\n                  {choiceList.map((choice) => (\r\n                    <MenuItem value={choice.id}>{choice.name}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n            <div className=\"createQuiz__addChoice\">\r\n              <Typography variant=\"h6\">\r\n                Create a new Option to Choices\r\n              </Typography>\r\n              <TextField\r\n                id={\"choice\"}\r\n                label=\"Add to Choices\"\r\n                variant=\"outlined\"\r\n                className={classes.textField}\r\n                size=\"small\"\r\n                onChange={handleChangeNewChoice}\r\n              />\r\n              <Button\r\n                className={classes.choiceButton}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={handleAddChoice}\r\n              >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <Button\r\n            className={classes.buttonStyle}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleAddQuestion}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n        <div className=\"createQuiz\">\r\n          <QuizViewer\r\n            quizId={quizDetail.id}\r\n            questions={quizDetail.questions}\r\n            editQuiz={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizDetail;\r\n"]},"metadata":{},"sourceType":"module"}