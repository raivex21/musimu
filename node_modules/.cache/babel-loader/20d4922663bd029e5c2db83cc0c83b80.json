{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    username: null,\n    token: null,\n    first_name: null,\n    last_name: null,\n    userId: null\n  },\n  reducers: {\n    authSuccess: (state, action) => {\n      state.username = action.payload.username;\n      state.token = action.payload.token;\n      state.last_name = action.payload.last_name;\n      state.first_name = action.payload.first_name;\n      state.userId = action.payload.userId;\n    },\n    checkAuthTimeout: (state, action) => {\n      console.log(\"expirationDate\");\n    },\n    logout: state => {\n      localStorage.removeItem(\"user\");\n      state.username = null;\n      state.token = null;\n      state.first_name = null;\n      state.last_name = null;\n      state.userId = null;\n    }\n  }\n});\nexport const {\n  authSuccess,\n  logout\n} = userSlice.actions;\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    axios.post(\"http://127.0.0.1:8000/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res.data);\n      const user = {\n        token: res.data.key,\n        username,\n        last_name: res.data.user_detail.last_name,\n        first_name: res.data.user_detail.first_name,\n        userId: res.data.user_detail.userId\n      };\n      console.log(user);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch(authSuccess(user));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/features/userSlice.js"],"names":["createSlice","axios","userSlice","name","initialState","username","token","first_name","last_name","userId","reducers","authSuccess","state","action","payload","checkAuthTimeout","console","log","logout","localStorage","removeItem","actions","authLogin","password","dispatch","post","then","res","data","user","key","user_detail","setItem","JSON","stringify","catch","err","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    username: null,\r\n    token: null,\r\n    first_name: null,\r\n    last_name: null,\r\n    userId: null,\r\n  },\r\n  reducers: {\r\n    authSuccess: (state, action) => {\r\n      state.username = action.payload.username;\r\n      state.token = action.payload.token;\r\n      state.last_name = action.payload.last_name;\r\n      state.first_name = action.payload.first_name;\r\n      state.userId = action.payload.userId;\r\n    },\r\n    checkAuthTimeout: (state, action) => {\r\n      console.log(\"expirationDate\");\r\n    },\r\n    logout: (state) => {\r\n      localStorage.removeItem(\"user\");\r\n      state.username = null;\r\n      state.token = null;\r\n      state.first_name = null;\r\n      state.last_name = null;\r\n      state.userId = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { authSuccess, logout } = userSlice.actions;\r\n\r\nexport const authLogin = (username, password) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/rest-auth/login/\", {\r\n        username: username,\r\n        password: password,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const user = {\r\n          token: res.data.key,\r\n          username,\r\n          last_name: res.data.user_detail.last_name,\r\n          first_name: res.data.user_detail.first_name,\r\n          userId: res.data.user_detail.userId,\r\n        };\r\n        console.log(user);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        dispatch(authSuccess(user));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}