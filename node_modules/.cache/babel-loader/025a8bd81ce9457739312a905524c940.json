{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const enrollmentsSlice = createSlice({\n  name: \"enrollments\",\n  initialState: {\n    enrollments: [],\n    enrollment: {},\n    loading: false,\n    error: null\n  },\n  reducers: {\n    getEnrollmentsStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getEnrollmentsSuccess: (state, action) => {\n      state.enrollments = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getEnrollmentsFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    getEnrollmentDetailStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getEnrollmentDetailSuccess: (state, action) => {\n      state.enrollment = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getEnrollmentDetailFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    createEnrollmentStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    createEnrollmentSuccess: state => {\n      state.loading = false;\n      state.error = null;\n    },\n    createEnrollmentFail: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getEnrollmentsStart,\n  getEnrollmentsSuccess,\n  getEnrollmentsFail,\n  getEnrollmentDetailStart,\n  getEnrollmentDetailSuccess,\n  getEnrollmentDetailFail,\n  createEnrollmentFail,\n  createEnrollmentStart,\n  createEnrollmentSuccess\n} = enrollmentsSlice.actions;\nexport const getEnrollments = (token, id) => {\n  return dispatch => {\n    dispatch(getEnrollmentsStart());\n    console.log(\"getEnrollments======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`http://127.0.0.1:8000/api/enrollments`).then(res => {\n      // CHECK IF THE ENROLLMENT IS FOR CURRENT STUDENT AND IF IT IS ACTIVE\n      const enrollments = res.data.filter(d => d.student_id === id && d.classroom_detail.isActive === true);\n      dispatch(getEnrollmentsSuccess(enrollments));\n    }).catch(err => {\n      dispatch(getEnrollmentsFail(err.message));\n    });\n  };\n};\nexport const getEnrollmentDetail = (token, id) => {\n  return dispatch => {\n    dispatch(getEnrollmentDetailStart());\n    console.log(\"starting getEnrollmentDetail\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`http://127.0.0.1:8000/api/enrollments/${id}`).then(res => {\n      console.log(res.data);\n      dispatch(getEnrollmentDetailSuccess(res.data));\n    }).catch(err => {\n      dispatch(getEnrollmentDetailFail(err.message));\n    });\n  };\n};\nexport const createEnrollment = (token, formData) => {\n  return dispatch => {\n    dispatch(createEnrollmentStart());\n    console.log(\"starting createEnrollment\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.post(\"http://127.0.0.1:8000/api/enrollments/\", formData).then(res => {\n      console.log(res.data);\n      dispatch(createEnrollmentSuccess());\n      dispatch(getEnrollments(token));\n    }).catch(err => {\n      dispatch(createEnrollmentFail(err));\n    });\n  };\n};\nexport default enrollmentsSlice.reducer;","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/features/enrollmentSlice.js"],"names":["createSlice","axios","enrollmentsSlice","name","initialState","enrollments","enrollment","loading","error","reducers","getEnrollmentsStart","state","getEnrollmentsSuccess","action","payload","getEnrollmentsFail","getEnrollmentDetailStart","getEnrollmentDetailSuccess","getEnrollmentDetailFail","createEnrollmentStart","createEnrollmentSuccess","createEnrollmentFail","actions","getEnrollments","token","id","dispatch","console","log","defaults","headers","Authorization","get","then","res","data","filter","d","student_id","classroom_detail","isActive","catch","err","message","getEnrollmentDetail","createEnrollment","formData","post","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const enrollmentsSlice = createSlice({\r\n  name: \"enrollments\",\r\n  initialState: {\r\n    enrollments: [],\r\n    enrollment: {},\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    getEnrollmentsStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getEnrollmentsSuccess: (state, action) => {\r\n      state.enrollments = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getEnrollmentsFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    getEnrollmentDetailStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getEnrollmentDetailSuccess: (state, action) => {\r\n      state.enrollment = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getEnrollmentDetailFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    createEnrollmentStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    createEnrollmentSuccess: (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    createEnrollmentFail: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getEnrollmentsStart,\r\n  getEnrollmentsSuccess,\r\n  getEnrollmentsFail,\r\n  getEnrollmentDetailStart,\r\n  getEnrollmentDetailSuccess,\r\n  getEnrollmentDetailFail,\r\n  createEnrollmentFail,\r\n  createEnrollmentStart,\r\n  createEnrollmentSuccess,\r\n} = enrollmentsSlice.actions;\r\n\r\nexport const getEnrollments = (token, id) => {\r\n  return (dispatch) => {\r\n    dispatch(getEnrollmentsStart());\r\n    console.log(\"getEnrollments======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/enrollments`)\r\n      .then((res) => {\r\n        // CHECK IF THE ENROLLMENT IS FOR CURRENT STUDENT AND IF IT IS ACTIVE\r\n        const enrollments = res.data.filter(\r\n          (d) => d.student_id === id && d.classroom_detail.isActive === true\r\n        );\r\n\r\n        dispatch(getEnrollmentsSuccess(enrollments));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getEnrollmentsFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const getEnrollmentDetail = (token, id) => {\r\n  return (dispatch) => {\r\n    dispatch(getEnrollmentDetailStart());\r\n    console.log(\"starting getEnrollmentDetail\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/enrollments/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch(getEnrollmentDetailSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getEnrollmentDetailFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createEnrollment = (token, formData) => {\r\n  return (dispatch) => {\r\n    dispatch(createEnrollmentStart());\r\n    console.log(\"starting createEnrollment\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/enrollments/\", formData)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch(createEnrollmentSuccess());\r\n        dispatch(getEnrollments(token));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(createEnrollmentFail(err));\r\n      });\r\n  };\r\n};\r\n\r\nexport default enrollmentsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}