{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\simulator\\\\Console.js\";\nimport React from 'react'; //type 1 = Time signature\n//error 1 Empty measure\n//error 2 Insuficient beat counts at measure \n//error 3 Time Signature is not yet set at measure\n//error 4 Clef is note yet set at measure\n//type 2 = Clef\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Console = props => {\n  let renderConsole = () => {\n    if (props.consWarn.start === true) {\n      //for starting only\n      if (props.consWarn.warns === 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"console-warning\",\n          children: \"No Problems found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"console-warning\",\n          children: [\"(\", props.consWarn.warns - 1, \") Problems found\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this);\n      }\n    } else {\n      let icon = [\"Warning\", \"TS\", \"Bl\", \"N\", \"Clef\", \"KS\"];\n      let error = [\"Empty measure\", // 0\n      \"Insuficient beat counts at measure \", // 1\n      \"Too much notes at measure \", // 2\n      \"Time Signature is not yet set for measure\", // 3\n      \"Adding barline without declaring time signature for starting measure\", // 4\n      \"Adding Note without starting measure is not fully for starting measure\", // 5\n      \"Clef is note yet set for measure\", // 6\n      \"Unable to play without knowing the clef\", // 7\n      \"Putting another accidental vertically. Warning detected before measure\", //8\n      \"Putting another accidental Horizontally. Warning detected before measure\", //9\n      \"Putting different kind of accidental\", //10\n      \"Declaring key signiture without Clef before measure\", //11\n      \"Unkown Key Signature before measure\" //12\n      ];\n      let expln = [{\n        a: null,\n        b: null,\n        c: null,\n        d: null,\n        e: null,\n        f: null,\n        g: null,\n        h: null,\n        i: null,\n        j: null,\n        k: null\n      }];\n      let m = props.consWarn.measure;\n      let t = props.consWarn.type;\n      let e = props.consWarn.error;\n\n      if (e === 0) {\n        if (props.consWarn.clef === null) {\n          expln[t].a = \"Blank measure.\";\n        }\n      }\n\n      if (e === 1 || e === 2) {\n        expln[0].a = \"Time signature is sets at\";\n        expln[0].b = props.consWarn.up;\n        expln[0].c = props.consWarn.down;\n        expln[0].d = \"so the total beats per measure shoud be\";\n        expln[0].e = props.consWarn.barLength;\n\n        if (props.consWarn.totalNoteValue !== 0) {\n          expln[0].f = \"but you put a total beats of\";\n          expln[0].g = props.consWarn.totalNoteValue;\n        } else {\n          expln[0].f = \"but there is no note on measure\";\n          expln[0].g = m;\n        }\n      }\n\n      if (e === 3 || e === 4) {\n        if (props.consWarn.up === null) {\n          expln[0].a = \"Set the top number of time signature.\";\n        }\n\n        if (props.consWarn.up !== null && props.consWarn.down === null) {\n          expln[0].b = \"Set the bottom number of time signature.\";\n        }\n\n        if (props.consWarn.down === null) {\n          expln[0].c = \"Also, set the bottom number.\";\n        }\n      }\n\n      if (e === 5) {\n        expln[0].a = \"Clef is not yet set.\";\n      }\n\n      if (e === 6) {\n        expln[0].a = \"Clef is not yet set. Set up clef before measure\";\n        expln[0].b = {\n          m\n        };\n        expln[0].c = \"to know what key you are now.\";\n      }\n\n      if (e === 7) {\n        expln[0].a = \"To hear the tone, set the clef before measure,\";\n        expln[0].b = {\n          m\n        };\n      }\n\n      if (e === 8) {\n        expln[0].a = \"If you wish to add more\";\n        expln[0].b = props.consWarn.accidental;\n        expln[0].c = \", draw to it in the right column. Warning is before measure\"; // expln[0].d ={m}\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"console-warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-circle-yellow\",\n            children: icon[t]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 76\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-what\",\n            children: [error[e], \" \", props.consWarn.measure, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 58\n            }, this), \"measure=\", m, \";type=\", t, \";error =\", e]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), props.consWarn.show ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"console-warning-read-more-context\",\n            children: [expln[0].a, \" \", expln[0].b, \" \", expln[0].c, \" \", expln[0].d, \" \", expln[0].e, \" \", expln[0].f, \" \", expln[0].g]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 23\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"console-warning-read-more\",\n          onClick: () => props.readMore(t, m, e),\n          children: \"Learn more.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  return renderConsole();\n};\n\n_c = Console;\nexport default Console;\n\nvar _c;\n\n$RefreshReg$(_c, \"Console\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/simulator/Console.js"],"names":["React","Console","props","renderConsole","consWarn","start","warns","icon","error","expln","a","b","c","d","e","f","g","h","i","j","k","m","measure","t","type","clef","up","down","barLength","totalNoteValue","accidental","show","readMore"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//type 1 = Time signature\r\n  //error 1 Empty measure\r\n  //error 2 Insuficient beat counts at measure \r\n  //error 3 Time Signature is not yet set at measure\r\n  //error 4 Clef is note yet set at measure\r\n//type 2 = Clef\r\n  const Console = props => {\r\n\r\n    let renderConsole = () => { \r\n\r\n      if (props.consWarn.start === true){ //for starting only\r\n        if (props.consWarn.warns === 0 ){\r\n          return (   \r\n          <div className = \"console-warning\" >No Problems found</div>\r\n          )\r\n        }\r\n\r\n        else {\r\n          return (   \r\n            <div className = \"console-warning\" >({props.consWarn.warns  - 1}) Problems found</div>\r\n          )\r\n        }\r\n      }\r\n      else {\r\n        let icon = [\"Warning\" , \"TS\", \"Bl\", \"N\", \"Clef\", \"KS\"];\r\n        let error = [\r\n                    \"Empty measure\",                                                            // 0\r\n                    \"Insuficient beat counts at measure \",                                      // 1\r\n                    \"Too much notes at measure \",                                               // 2\r\n                    \"Time Signature is not yet set for measure\",                                // 3\r\n                    \"Adding barline without declaring time signature for starting measure\",     // 4\r\n                    \"Adding Note without starting measure is not fully for starting measure\",   // 5\r\n\r\n                    \"Clef is note yet set for measure\",                                         // 6\r\n                    \"Unable to play without knowing the clef\",                                  // 7\r\n\r\n                    \"Putting another accidental vertically. Warning detected before measure\",   //8\r\n                    \"Putting another accidental Horizontally. Warning detected before measure\", //9\r\n                    \"Putting different kind of accidental\",                                     //10\r\n                    \"Declaring key signiture without Clef before measure\",                      //11\r\n\r\n                    \"Unkown Key Signature before measure\"                                       //12\r\n                    ];\r\n        let expln = [\r\n                      {a: null, b: null, c: null, d: null, e: null, f: null, g: null, h: null, i: null, j: null, k: null},\r\n                    ] \r\n\r\n        let m =  props.consWarn.measure;\r\n        let t = props.consWarn.type;\r\n        let e =  props.consWarn.error;\r\n\r\n          if (e === 0) {\r\n            if (props.consWarn.clef === null) {expln[t].a = \"Blank measure.\"}\r\n          }\r\n\r\n          if (e === 1 || e === 2) {\r\n            expln[0].a = \"Time signature is sets at\"\r\n            expln[0].b = props.consWarn.up\r\n            expln[0].c = props.consWarn.down\r\n            expln[0].d = \"so the total beats per measure shoud be\"\r\n            expln[0].e = props.consWarn.barLength\r\n\r\n              if(props.consWarn.totalNoteValue !== 0) {\r\n                expln[0].f = \"but you put a total beats of\"\r\n                expln[0].g =  props.consWarn.totalNoteValue\r\n              }\r\n\r\n              else {\r\n                expln[0].f = \"but there is no note on measure\"\r\n                expln[0].g = m\r\n              }\r\n            }\r\n\r\n          if (e === 3 || e === 4) {\r\n            if (props.consWarn.up === null) {expln[0].a = \"Set the top number of time signature.\"}\r\n            if (props.consWarn.up !== null && props.consWarn.down === null) {expln[0].b = \"Set the bottom number of time signature.\"}\r\n            if (props.consWarn.down === null) {expln[0].c = \"Also, set the bottom number.\"}\r\n          }\r\n\r\n          if (e === 5) {\r\n            expln[0].a = \"Clef is not yet set.\"\r\n          }\r\n\r\n          if (e === 6) {\r\n            expln[0].a = \"Clef is not yet set. Set up clef before measure\"\r\n            expln[0].b ={m}\r\n            expln[0].c = \"to know what key you are now.\"\r\n          }\r\n\r\n          if (e === 7) {\r\n            expln[0].a = \"To hear the tone, set the clef before measure,\"\r\n            expln[0].b ={m}\r\n          }\r\n\r\n          if (e === 8) {\r\n            expln[0].a = \"If you wish to add more\"\r\n            expln[0].b = props.consWarn.accidental\r\n            expln[0].c = \", draw to it in the right column. Warning is before measure\"\r\n            // expln[0].d ={m}\r\n          }\r\n\r\n          return (   \r\n            <div>\r\n                <div className = \"console-warning\">\r\n\r\n                  <div className = \"warning-circle-yellow\" >{icon[t]}</div><br/>\r\n                    <div className = \"warning-what\" >\r\n                      {error[e]} {props.consWarn.measure}<br/>                      \r\n                       measure={m};type={t};error ={e}\r\n                    </div>\r\n\r\n                    { props.consWarn.show ? \r\n                      <div className = \"console-warning-read-more-context\">\r\n                        {expln[0].a} {expln[0].b} {expln[0].c} {expln[0].d} {expln[0].e} {expln[0].f} {expln[0].g}\r\n                      </div>\r\n                    : null}\r\n                </div>\r\n\r\n              <button className = \"console-warning-read-more\" onClick={() =>props.readMore(t, m, e)} >Learn more.</button>\r\n            </div>\r\n          )\r\n      }\r\n\r\n    }\r\n    return renderConsole();\r\n    };\r\n\r\n  export default Console;"]},"metadata":{},"sourceType":"module"}