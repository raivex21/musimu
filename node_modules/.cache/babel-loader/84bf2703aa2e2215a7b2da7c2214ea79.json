{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import { authLogin } from \"./features/userSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authCheckState } from \"./features/authSlice\";\nimport CustomLayout from \"./containers/Layout\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"fontsource-roboto\";\nimport { useRoutes } from \"hookrouter\";\nimport PrivateRoutes from \"./routes/PrivateRoutes\";\nimport PublicRoutes from \"./routes/PublicRoutes\";\nimport \"./styles/app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth);\n  dispatch(authCheckState()); // useEffect(() => {\n  //   dispatch(authCheckState());\n  // }, [dispatch]);\n\n  const isAuthenticated = user.token !== null;\n  const privateRoutes = useRoutes(PrivateRoutes);\n  const publicRoutes = useRoutes(PublicRoutes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(CustomLayout, {\n        isAuthenticated: isAuthenticated,\n        routes: isAuthenticated ? privateRoutes : publicRoutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ihiYRPgxRVH8QW3yaD4bm8+AWpY=\", false, function () {\n  return [useDispatch, useSelector, useRoutes, useRoutes];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/App.js"],"names":["React","useDispatch","useSelector","authCheckState","CustomLayout","BrowserRouter","Router","useRoutes","PrivateRoutes","PublicRoutes","App","dispatch","user","state","auth","isAuthenticated","token","privateRoutes","publicRoutes"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,mBAAP;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAO,kBAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;AACAH,EAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR,CAJa,CAMb;AACA;AACA;;AAEA,QAAMY,eAAe,GAAGH,IAAI,CAACI,KAAL,KAAe,IAAvC;AACA,QAAMC,aAAa,GAAGV,SAAS,CAACC,aAAD,CAA/B;AACA,QAAMU,YAAY,GAAGX,SAAS,CAACE,YAAD,CAA9B;AAEA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,eAAe,EAAEM,eADnB;AAEE,QAAA,MAAM,EAAEA,eAAe,GAAGE,aAAH,GAAmBC;AAF5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxBQR,G;UACUT,W,EAEJC,W,EAQSK,S,EACDA,S;;;KAZdG,G;AA0BT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\n// import { authLogin } from \"./features/userSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { authCheckState } from \"./features/authSlice\";\r\nimport CustomLayout from \"./containers/Layout\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"fontsource-roboto\";\r\nimport { useRoutes } from \"hookrouter\";\r\nimport PrivateRoutes from \"./routes/PrivateRoutes\";\r\nimport PublicRoutes from \"./routes/PublicRoutes\";\r\nimport \"./styles/app.css\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((state) => state.auth);\r\n  dispatch(authCheckState());\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(authCheckState());\r\n  // }, [dispatch]);\r\n\r\n  const isAuthenticated = user.token !== null;\r\n  const privateRoutes = useRoutes(PrivateRoutes);\r\n  const publicRoutes = useRoutes(PublicRoutes);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <CustomLayout\r\n          isAuthenticated={isAuthenticated}\r\n          routes={isAuthenticated ? privateRoutes : publicRoutes}\r\n        />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}