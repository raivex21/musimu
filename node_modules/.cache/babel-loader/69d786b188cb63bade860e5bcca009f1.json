{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const messageSlice = createSlice({\n  name: \"message\",\n  initialState: {\n    inbox: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    getInboxStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getInboxSuccess: (state, action) => {\n      state.inbox = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    getInboxFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    sendMessageStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    sendMessageSuccess: state => {\n      state.loading = false;\n      state.error = null;\n    },\n    sendMessageFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  getInboxFail,\n  getInboxStart,\n  getInboxSuccess,\n  sendMessageFail,\n  sendMessageStart,\n  sendMessageSuccess\n} = messageSlice.actions;\nexport const getInbox = (token, id) => {\n  return dispatch => {\n    dispatch(getInboxStart());\n    console.log(\"getInboxes======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`${process.env.REACT_APP_AXIOS_URL}/api/messages`).then(res => {\n      const inbox = res.data.filter(item => item.receiver === id || item.sender === id);\n      dispatch(getInboxSuccess(inbox));\n    }).catch(err => {\n      dispatch(getInboxFail(err.message));\n    });\n  };\n};\nexport const sendMessage = (token, formData) => {\n  return dispatch => {\n    dispatch(sendMessageStart());\n    console.log(\"sendMessagees======>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.post(`${process.env.REACT_APP_AXIOS_URL}/api/messages/`, formData).then(res => {\n      dispatch(sendMessageSuccess(res.data));\n    }).catch(err => {\n      dispatch(sendMessageFail(err.message));\n    });\n  };\n};\nexport default messageSlice.reducer;","map":{"version":3,"sources":["C:/Users/Raivex/Desktop/THESIS/heroku-deploy/src/features/messageSlice.js"],"names":["createSlice","axios","messageSlice","name","initialState","inbox","loading","error","reducers","getInboxStart","state","getInboxSuccess","action","payload","getInboxFail","sendMessageStart","sendMessageSuccess","sendMessageFail","actions","getInbox","token","id","dispatch","console","log","defaults","headers","Authorization","get","process","env","REACT_APP_AXIOS_URL","then","res","data","filter","item","receiver","sender","catch","err","message","sendMessage","formData","post","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const messageSlice = createSlice({\r\n  name: \"message\",\r\n  initialState: {\r\n    inbox: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    getInboxStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getInboxSuccess: (state, action) => {\r\n      state.inbox = action.payload;\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    getInboxFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    sendMessageStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    sendMessageSuccess: (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    sendMessageFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getInboxFail,\r\n  getInboxStart,\r\n  getInboxSuccess,\r\n  sendMessageFail,\r\n  sendMessageStart,\r\n  sendMessageSuccess,\r\n} = messageSlice.actions;\r\n\r\nexport const getInbox = (token, id) => {\r\n  return (dispatch) => {\r\n    dispatch(getInboxStart());\r\n    console.log(\"getInboxes======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_AXIOS_URL}/api/messages`)\r\n      .then((res) => {\r\n        const inbox = res.data.filter(\r\n          (item) => item.receiver === id || item.sender === id\r\n        );\r\n        dispatch(getInboxSuccess(inbox));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getInboxFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const sendMessage = (token, formData) => {\r\n  return (dispatch) => {\r\n    dispatch(sendMessageStart());\r\n    console.log(\"sendMessagees======>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_AXIOS_URL}/api/messages/`, formData)\r\n      .then((res) => {\r\n        dispatch(sendMessageSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(sendMessageFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default messageSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}