{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Desktop\\\\THESIS\\\\heroku-deploy\\\\src\\\\simulator\\\\Timer.js\";\nimport React, { Component } from \"react\";\nimport c5 from './SoundSource/c5.mp3';\nimport cs5 from './SoundSource/cs5.mp3';\nimport d5 from './SoundSource/d5.mp3';\nimport ds5 from './SoundSource/ds5.mp3';\nimport e5 from './SoundSource/e5.mp3';\nimport f5 from './SoundSource/f5.mp3';\nimport fs5 from './SoundSource/fs5.mp3';\nimport g5 from './SoundSource/g5.mp3';\nimport gs5 from './SoundSource/gs5.mp3';\nimport a5 from './SoundSource/a5.mp3';\nimport as5 from './SoundSource/as5.mp3';\nimport b5 from './SoundSource/b5.mp3';\nimport c4 from './SoundSource/c4.mp3';\nimport cs4 from './SoundSource/cs4.mp3';\nimport d4 from './SoundSource/d4.mp3';\nimport ds4 from './SoundSource/ds4.mp3';\nimport e4 from './SoundSource/e4.mp3';\nimport f4 from './SoundSource/f4.mp3';\nimport fs4 from './SoundSource/fs4.mp3';\nimport g4 from './SoundSource/g4.mp3';\nimport gs4 from './SoundSource/gs4.mp3';\nimport a4 from './SoundSource/a4.mp3';\nimport as4 from './SoundSource/as4.mp3';\nimport b4 from './SoundSource/b4.mp3';\nimport fBeat from './SoundSource/fBeat.mp3';\nimport beat from './SoundSource/beat.mp3';\nimport { Howl, Howler } from 'howler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startPauseSwitch = () => {\n      let switcher = this.state.switcher;\n      console.log(\"startPauseSwitch\");\n      this.setState({\n        row: this.state.row\n      });\n\n      if (switcher === false) {\n        this.clockStart();\n        this.setState({\n          switcher: true,\n          playIcon: false\n        });\n        this.props.playerIcon(this.state.playIcon);\n      } else {\n        this.clockPause();\n        this.setState({\n          switcher: false,\n          playIcon: true\n        });\n        this.props.playerIcon(this.state.playIcon);\n      }\n    };\n\n    this.getStartingProperties = currentSelected => {\n      console.log(\"getStartingProperties\", currentSelected);\n      this.setState({\n        currentSelected: this.state.currentSelected + 1\n      });\n      let row = this.state.row; // -------- pre render ----------------------------------- FIND STARTING---------------\n\n      for (let i = currentSelected; i >= 0; i--) {\n        // find Starting\n        if (row[i][0].starting === true) {\n          console.log(\"Starting i true\", row[i][0].clef);\n\n          if (row[i][0].clef === null) {\n            console.log(\"Sound Break\");\n            let type = 4;\n            let error = 7;\n            let measure = row[i + 1][8].measure;\n            this.props.consoleWarningClef(type, measure, error);\n            this.clockStop();\n          }\n\n          this.setState({\n            clef: row[i][0].clef,\n            keySig: row[i][0].keySig,\n            timeSig: row[i][0].up\n          });\n          console.log(this.state.clef, this.state.keySig, this.state.timeSig);\n          break;\n        }\n      }\n    };\n\n    this.row = currentSelected => {\n      let row = this.props.row;\n\n      if (currentSelected < row.length) {\n        let y = 0; // always starts at zero\n\n        while (y < this.props.column) {\n          let a = row[currentSelected][y]; // Add if else condition here later on ----------------if Column's isOpen = false --------------------- \n\n          if (a.isOpen === true) {\n            if (row[currentSelected][y].rest === true) {\n              console.log(\"hkjdhaskdhashjkashdkhasdhkasjhdskj\");\n              return;\n            }\n\n            let source = this.state.source[y];\n            const sound = new Howl({\n              src: [source],\n              sprite: {\n                normal: [0, 6000]\n              }\n            });\n            sound.play(\"normal\");\n          }\n\n          y++;\n        }\n      } else {\n        console.log(\"stoped playing\");\n        this.clockStop();\n      }\n    };\n\n    this.clockPause = () => {\n      clearInterval(this.interval);\n    };\n\n    this.clockStop = () => {\n      this.clockPause();\n      console.log(\"stop\");\n      this.setState({\n        switcher: false,\n        count: 0,\n        inc: 0,\n        playIcon: false,\n        metronome: 0,\n        currentSelected: this.props.currentSelected\n      });\n    };\n\n    this.startPauseSwitch = this.startPauseSwitch.bind(this);\n    this.clockStop = this.clockStop.bind(this);\n    this.state = {\n      row: this.props.row,\n      switcher: false,\n      playIcon: true,\n      tempo: this.props.tempo,\n      // from user\n      volume: 1,\n      count: 0,\n      // intrement per milisecond\n      restart: 5,\n      // set loop\n      currentSelected: 0,\n      line: 0,\n      clef: null,\n      keySig: null,\n      timeSig: null,\n      inc: 0,\n      source: [b5, as5, a5, gs5, g5, fs5, f5, e5, ds5, d5, cs5, c5, b4, as4, a4, gs4, g4, fs4, f4, e4, ds4, d4, cs4, c4],\n      metronome: 0,\n      fBeat: fBeat,\n      beat: beat,\n      compass: 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.startPauseSwitch(this.startPauseSwitch);\n    this.props.clockStop(this.clockStop);\n  }\n\n  clockStart() {\n    console.log(\"this.clockStart\");\n    let row = this.state.row;\n    let speed = Math.round(60 / this.props.tempo * 100); // 60 as second; tempo; \n\n    let currentSelected = this.props.currentSelected;\n    let intervals = null;\n    let count = 0;\n    this.interval = setInterval(() => {\n      if (currentSelected === row.length - 1) {\n        this.clockStop();\n        console.log(\"aaa\");\n        return;\n      }\n\n      if (row[this.state.currentSelected][0].starting === true) {\n        this.getStartingProperties(currentSelected);\n      }\n\n      if (intervals === null) {\n        intervals = speed / row[this.state.currentSelected][0].note * this.state.timeSig;\n        console.log(intervals);\n      }\n\n      if (row[this.state.currentSelected][0].starting === false && count === 0) {\n        console.log(\"Play something\", this.state.currentSelected);\n        currentSelected = this.state.currentSelected;\n        this.row(currentSelected);\n      }\n\n      count = count + 1;\n\n      if (this.state.metronome === 0 && this.props.metronome === true) {\n        console.log(\"METRONOME is back to zero\", this.state.timeSig, this.state.compass, this.state.row[1][0].note, this.state.line);\n\n        if (this.state.compass === 1) {\n          console.log(\"Play 1st\");\n          let source = this.state.fBeat;\n          const sound = new Howl({\n            src: [source],\n            sprite: {\n              normal: [0, 6000]\n            }\n          });\n          sound.play(\"normal\");\n        } else {\n          console.log(\"play 2nd\");\n          let source = this.state.beat;\n          const sound = new Howl({\n            src: [source],\n            sprite: {\n              normal: [0, 6000]\n            }\n          });\n          sound.play(\"normal\");\n        }\n\n        this.setState({\n          compass: this.state.compass + 1\n        });\n\n        if (this.state.compass > this.state.timeSig) {\n          this.setState({\n            compass: 1\n          });\n        }\n      }\n\n      console.log(count, intervals, this.state.currentSelected);\n      this.setState({\n        metronome: this.state.metronome + 1\n      });\n\n      if (this.state.metronome >= speed) {\n        console.log(\"reset metronome\");\n        this.setState({\n          metronome: 0\n        });\n      }\n\n      if (count >= intervals) {\n        console.log(\"reset count\");\n        this.setState({\n          currentSelected: this.state.currentSelected + 1\n        });\n        count = 0;\n      }\n    }, 10);\n  }\n\n  render() {\n    Howler.volume(this.props.volume / 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Raivex/Desktop/THESIS/heroku-deploy/src/simulator/Timer.js"],"names":["React","Component","c5","cs5","d5","ds5","e5","f5","fs5","g5","gs5","a5","as5","b5","c4","cs4","d4","ds4","e4","f4","fs4","g4","gs4","a4","as4","b4","fBeat","beat","Howl","Howler","Timer","constructor","props","startPauseSwitch","switcher","state","console","log","setState","row","clockStart","playIcon","playerIcon","clockPause","getStartingProperties","currentSelected","i","starting","clef","type","error","measure","consoleWarningClef","clockStop","keySig","timeSig","up","length","y","column","a","isOpen","rest","source","sound","src","sprite","normal","play","clearInterval","interval","count","inc","metronome","bind","tempo","volume","restart","line","compass","componentDidMount","speed","Math","round","intervals","setInterval","note","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport c5 from './SoundSource/c5.mp3';\r\nimport cs5 from './SoundSource/cs5.mp3';\r\nimport d5 from './SoundSource/d5.mp3';\r\nimport ds5 from './SoundSource/ds5.mp3';\r\nimport e5 from './SoundSource/e5.mp3';\r\nimport f5 from './SoundSource/f5.mp3';\r\nimport fs5 from './SoundSource/fs5.mp3';\r\nimport g5 from './SoundSource/g5.mp3';\r\nimport gs5 from './SoundSource/gs5.mp3';\r\nimport a5 from './SoundSource/a5.mp3';\r\nimport as5 from './SoundSource/as5.mp3';\r\nimport b5 from './SoundSource/b5.mp3';\r\n\r\nimport c4 from './SoundSource/c4.mp3';\r\nimport cs4 from './SoundSource/cs4.mp3';\r\nimport d4 from './SoundSource/d4.mp3';\r\nimport ds4 from './SoundSource/ds4.mp3';\r\nimport e4 from './SoundSource/e4.mp3';\r\nimport f4 from './SoundSource/f4.mp3';\r\nimport fs4 from './SoundSource/fs4.mp3';\r\nimport g4 from './SoundSource/g4.mp3';\r\nimport gs4 from './SoundSource/gs4.mp3';\r\nimport a4 from './SoundSource/a4.mp3';\r\nimport as4 from './SoundSource/as4.mp3';\r\nimport b4 from './SoundSource/b4.mp3';\r\nimport fBeat from './SoundSource/fBeat.mp3';\r\nimport beat from './SoundSource/beat.mp3';\r\n\r\nimport {Howl, Howler} from 'howler';\r\n\r\nclass Timer extends Component {\r\n\r\n  constructor(props){\r\n  super(props);\r\n    \r\n  this.startPauseSwitch = this.startPauseSwitch.bind(this);\r\n  this.clockStop = this.clockStop.bind(this);\r\n  this.state = {\r\n\r\n    row: this.props.row,\r\n\r\n    switcher: false,\r\n    playIcon: true,\r\n\r\n    tempo: this.props.tempo, // from user\r\n    volume: 1,\r\n    count: 0, // intrement per milisecond\r\n    restart: 5, // set loop\r\n    currentSelected: 0,\r\n    line: 0,\r\n    \r\n\r\n    clef: null,\r\n    keySig: null,\r\n    timeSig: null,\r\n    inc: 0,\r\n    source: [\r\n      b5, as5, a5, gs5, g5, fs5, f5, e5, ds5, d5, cs5, c5,\r\n      b4, as4, a4, gs4, g4, fs4, f4, e4, ds4, d4, cs4, c4\r\n    \r\n    ],\r\n\r\n    metronome: 0,\r\n    fBeat: fBeat,\r\n    beat: beat,\r\n\r\n    compass: 1,\r\n    \r\n  }\r\n}\r\n\r\ncomponentDidMount() {\r\n  this.props.startPauseSwitch(this.startPauseSwitch);\r\n  this.props.clockStop(this.clockStop);\r\n\r\n};\r\n\r\nstartPauseSwitch = () => {\r\n\r\n  let switcher = this.state.switcher;\r\nconsole.log(\"startPauseSwitch\")\r\n  this.setState({\r\n    row: this.state.row\r\n  })\r\n\r\n  if (switcher === false) {\r\n    \r\n    this.clockStart();\r\n    this.setState({\r\n      switcher: true,\r\n      playIcon: false\r\n      })\r\n      this.props.playerIcon(this.state.playIcon);\r\n  }\r\n\r\n  else {\r\n    this.clockPause();\r\n    this.setState({\r\n    switcher: false,\r\n    playIcon: true,\r\n    })\r\n    this.props.playerIcon(this.state.playIcon);\r\n  }\r\n};\r\n\r\ngetStartingProperties = (currentSelected) => {\r\n  console.log(\"getStartingProperties\", currentSelected)\r\n  this.setState({\r\n    currentSelected: this.state.currentSelected + 1,\r\n  })\r\n    let row = this.state.row;\r\n        // -------- pre render ----------------------------------- FIND STARTING---------------\r\n  \r\n    for (let i = currentSelected; i >= 0; i--) { // find Starting\r\n      if (row[i][0].starting === true) {\r\n        console.log(\"Starting i true\", row[i][0].clef)\r\n\r\n        if (row[i][0].clef === null) {\r\n          console.log(\"Sound Break\")\r\n          let type = 4\r\n          let error = 7\r\n          let measure = row[i + 1][8].measure\r\n          this.props.consoleWarningClef(type, measure, error)\r\n          this.clockStop();\r\n          \r\n        }\r\n  \r\n        this.setState ({\r\n          clef: row[i][0].clef,\r\n          keySig: row[i][0].keySig,\r\n          timeSig: row[i][0].up\r\n        });\r\n        console.log(this.state.clef, this.state.keySig, this.state.timeSig)\r\n        break;\r\n      }\r\n    }\r\n};\r\n\r\nrow = (currentSelected) => {\r\n\r\n  let row = this.props.row;\r\n    if (currentSelected < row.length) {\r\n      let y = 0; // always starts at zero\r\n        while (y < this.props.column) {\r\n          let a = row[currentSelected][y];\r\n            // Add if else condition here later on ----------------if Column's isOpen = false --------------------- \r\n          if (a.isOpen === true) {\r\n            if (row[currentSelected][y].rest === true) {\r\n              console.log(\"hkjdhaskdhashjkashdkhasdhkasjhdskj\")\r\n              return;\r\n            }\r\n\r\n            let source = this.state.source[y];\r\n            \r\n            const sound = new Howl ({\r\n              src: [source],\r\n              sprite: {\r\n                normal: [0, 6000],\r\n\r\n              }\r\n            })\r\n            sound.play(\"normal\");\r\n          }\r\n          y++;\r\n        }\r\n    }\r\n\r\n    else {\r\n      console.log(\"stoped playing\")\r\n      this.clockStop();\r\n    } \r\n}\r\n\r\nclockStart() {\r\nconsole.log(\"this.clockStart\")\r\n  let row = this.state.row;\r\n  let speed = Math.round( 60 / this.props.tempo * 100 ); // 60 as second; tempo; \r\n  let currentSelected = this.props.currentSelected;\r\n  let intervals = null;\r\n  let count = 0;\r\n\r\n    this.interval = setInterval(() => {\r\n\r\n      if ( currentSelected === row.length - 1) {\r\n        this.clockStop();\r\n        console.log(\"aaa\")\r\n        return;\r\n      }\r\n      if(row[this.state.currentSelected][0].starting === true) {\r\n        this.getStartingProperties(currentSelected)\r\n      }\r\n      if (intervals === null) {\r\n        intervals = (speed / row[this.state.currentSelected][0].note ) * this.state.timeSig;\r\n        console.log(intervals)\r\n\r\n      }\r\n\r\n      if (row[this.state.currentSelected][0].starting === false && count === 0) {\r\n        console.log(\"Play something\", this.state.currentSelected);\r\n        currentSelected = this.state.currentSelected\r\n        this.row(currentSelected);\r\n      }\r\n      count = count + 1;\r\n      \r\n      if (this.state.metronome === 0  && this.props.metronome === true) {\r\n        console.log(\"METRONOME is back to zero\",  this.state.timeSig, this.state.compass, this.state.row[1][0].note, this.state.line)\r\n\r\n          if (this.state.compass === 1) {\r\n            console.log(\"Play 1st\")\r\n            let source = this.state.fBeat;\r\n            \r\n            const sound = new Howl ({\r\n              src: [source],\r\n              sprite: {\r\n                normal: [0, 6000],\r\n              }\r\n            })\r\n            sound.play(\"normal\");\r\n          }\r\n          else {\r\n            console.log(\"play 2nd\")\r\n            let source = this.state.beat;\r\n            \r\n            const sound = new Howl ({\r\n              src: [source],\r\n              sprite: {\r\n                normal: [0, 6000],\r\n\r\n              }\r\n            })\r\n            sound.play(\"normal\");\r\n          }\r\n\r\n          this.setState({\r\n            compass: this.state.compass + 1,\r\n          })\r\n        if (this.state.compass > this.state.timeSig ) {\r\n          this.setState ({\r\n            compass: 1,\r\n          })\r\n        }\r\n    } \r\n\r\n    console.log(count, intervals, this.state.currentSelected)\r\n\r\n\r\n    this.setState({\r\n      metronome: this.state.metronome + 1,\r\n    });\r\n    \r\n      if (this.state.metronome >= speed) {\r\n        console.log(\"reset metronome\")\r\n        this.setState ({\r\n          metronome: 0,\r\n        });\r\n      }\r\n\r\n      if (count >= intervals) {\r\n        console.log(\"reset count\")\r\n        this.setState ({\r\n          currentSelected: this.state.currentSelected + 1,\r\n        });\r\n        count = 0;\r\n      }\r\n\r\n    }, 10)\r\n    \r\n}\r\n\r\nclockPause = () => {\r\n  clearInterval(this.interval)\r\n}\r\n\r\nclockStop = () => {\r\n  this.clockPause();\r\n  console.log(\"stop\")\r\n  this.setState({\r\n    switcher: false,\r\n    count: 0,\r\n    inc: 0,\r\n    playIcon:  false,\r\n    metronome: 0,\r\n    currentSelected: this.props.currentSelected,\r\n\r\n  })\r\n}\r\n\r\nrender () {\r\n  Howler.volume(this.props.volume / 100)\r\n    return (\r\n\r\n      <div>\r\n\r\n      </div>\r\n\r\n      )\r\n  }\r\n} \r\n\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}