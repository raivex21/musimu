{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\components\\\\Announcements.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { pink } from \"@material-ui/core/colors\";\nimport { getAnnouncementList } from \"../features/mainSlice\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  },\n  pink: {\n    color: theme.palette.getContrastText(pink[500]),\n    backgroundColor: pink[500]\n  },\n  paper: {\n    marginTop: 0,\n    overflowY: \"scroll\"\n  }\n}));\nconst items = 3;\nconst contentSlice = (page - 1) * items;\nexport default function Announcements() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const announcements = useSelector(state => state.main.announcements); // const sortedAnnouncements = announcements.sort(\n  //   (a, b) => b.date_posted - a.date_posted\n  // );\n\n  const [page, setPage] = useState(1);\n  const total = Math.ceil(announcements.length / items);\n  const pages = announcements.slice(contentSlice, contentSlice + items);\n  useEffect(() => {\n    dispatch(getAnnouncementList(token));\n  }, []);\n\n  const handlePage = (e, page) => {\n    console.log(page);\n    setPage(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: pages.map((d, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            alignItems: \"flex-start\",\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Travis Howard\",\n                src: d.avatar,\n                className: classes.pink\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: d.name,\n              secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: \"span\",\n                  variant: \"body2\",\n                  className: classes.inline,\n                  color: \"textPrimary\",\n                  children: /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: [d.classroom, \" : \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 23\n                }, this), d.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      onChange: handlePage,\n      defaultPage: 1,\n      page: page,\n      count: total,\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Announcements, \"/wM9wD7VIzsb5dL/u4UKro3MNgY=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = Announcements;\n\nvar _c;\n\n$RefreshReg$(_c, \"Announcements\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/components/Announcements.js"],"names":["React","useEffect","useState","useSelector","useDispatch","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","pink","getAnnouncementList","Paper","Pagination","useStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","color","getContrastText","marginTop","overflowY","items","contentSlice","page","Announcements","classes","dispatch","token","state","auth","announcements","main","setPage","total","Math","ceil","length","pages","slice","handlePage","e","console","log","map","d","index","avatar","name","classroom","content"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { pink } from \"@material-ui/core/colors\";\r\nimport { getAnnouncementList } from \"../features/mainSlice\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: \"inline\",\r\n  },\r\n  pink: {\r\n    color: theme.palette.getContrastText(pink[500]),\r\n    backgroundColor: pink[500],\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    overflowY: \"scroll\",\r\n  },\r\n}));\r\n\r\nconst items = 3;\r\nconst contentSlice = (page - 1) * items;\r\nexport default function Announcements() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const announcements = useSelector((state) => state.main.announcements);\r\n  // const sortedAnnouncements = announcements.sort(\r\n  //   (a, b) => b.date_posted - a.date_posted\r\n  // );\r\n  const [page, setPage] = useState(1);\r\n  const total = Math.ceil(announcements.length / items);\r\n  const pages = announcements.slice(contentSlice, contentSlice + items);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAnnouncementList(token));\r\n  }, []);\r\n\r\n  const handlePage = (e, page) => {\r\n    console.log(page);\r\n    setPage(page);\r\n  };\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <List className={classes.root}>\r\n        {pages.map((d, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <ListItem alignItems=\"flex-start\" button>\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    alt=\"Travis Howard\"\r\n                    src={d.avatar}\r\n                    className={classes.pink}\r\n                  ></Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={d.name}\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        <small>{d.classroom} : </small>\r\n                      </Typography>\r\n                      {d.content}\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n            </div>\r\n          );\r\n        })}\r\n      </List>\r\n      <Pagination\r\n        onChange={handlePage}\r\n        defaultPage={1}\r\n        page={page}\r\n        count={total}\r\n        size=\"large\"\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}