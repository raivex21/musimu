{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Desktop\\\\THESIS\\\\heroku-deploy\\\\src\\\\components\\\\CreateAnnouncement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createAnnouncement, getAnnouncementList } from \"../features/announcementSlice\";\nimport { getClassroomList } from \"../features/classroomSlice\";\nimport { InputLabel, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateAnnouncement() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const {\n    token,\n    userId\n  } = useSelector(state => state.auth);\n  const classrooms = useSelector(state => state.classroom.classrooms);\n  const [global, setGlobal] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const [classroom, setClassroom] = React.useState(\"\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getClassroomList(token, userId));\n  }, [dispatch, token, userId]);\n\n  const handlePost = () => {\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"content\", content);\n    formData.append(\"isGlobal\", global);\n    formData.append(\"classroom_id\", classroom);\n    formData.append(\"author_id\", userId);\n    dispatch(createAnnouncement(token, formData));\n    dispatch(getAnnouncementList(token));\n    setOpen(false);\n  };\n\n  const handleGlobalChange = () => {\n    setGlobal(!global);\n  };\n\n  const handleContent = e => {\n    setContent(e.target.value);\n  };\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClassroomChange = e => {\n    setClassroom(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClickOpen,\n      children: \"Post Announcement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Post Announcement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Add announcements globally or for specific Classroom.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"title\",\n          label: \"Title\",\n          type: \"text\",\n          fullWidth: true,\n          onChange: handleName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          id: \"content\",\n          label: \"Content\",\n          type: \"text\",\n          onChange: handleContent,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classroom__create-select\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"classroomLabel\",\n            children: \"classroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"classroomLabel\",\n            id: \"classroom\",\n            value: classroom,\n            onChange: handleClassroomChange,\n            fullWidth: true,\n            children: classrooms && classrooms.map(item => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.name\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"classroom__create-select\",\n          children: [/*#__PURE__*/_jsxDEV(Switch, {\n            checked: global,\n            onChange: handleGlobalChange,\n            inputProps: {\n              \"aria-label\": \"secondary checkbox\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Set this announcement to Global\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePost,\n          color: \"primary\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAnnouncement, \"3E/ksErqLC3Upu9Wvdx6UREYtkI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CreateAnnouncement;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAnnouncement\");","map":{"version":3,"sources":["C:/Users/Raivex/Desktop/THESIS/heroku-deploy/src/components/CreateAnnouncement.js"],"names":["React","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useSelector","useDispatch","createAnnouncement","getAnnouncementList","getClassroomList","InputLabel","MenuItem","Select","Typography","Switch","CreateAnnouncement","open","setOpen","useState","token","userId","state","auth","classrooms","classroom","global","setGlobal","name","setName","content","setContent","setClassroom","dispatch","handlePost","formData","FormData","append","handleGlobalChange","handleContent","e","target","value","handleName","handleClickOpen","handleClose","handleClassroomChange","map","item","id"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  createAnnouncement,\r\n  getAnnouncementList,\r\n} from \"../features/announcementSlice\";\r\nimport { getClassroomList } from \"../features/classroomSlice\";\r\nimport { InputLabel, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function CreateAnnouncement() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const { token, userId } = useSelector((state) => state.auth);\r\n  const classrooms = useSelector((state) => state.classroom.classrooms);\r\n  const [global, setGlobal] = React.useState(false);\r\n  const [name, setName] = React.useState(\"\");\r\n  const [content, setContent] = React.useState(\"\");\r\n  const [classroom, setClassroom] = React.useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getClassroomList(token, userId));\r\n  }, [dispatch, token, userId]);\r\n\r\n  const handlePost = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"content\", content);\r\n    formData.append(\"isGlobal\", global);\r\n    formData.append(\"classroom_id\", classroom);\r\n    formData.append(\"author_id\", userId);\r\n    dispatch(createAnnouncement(token, formData));\r\n    dispatch(getAnnouncementList(token));\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleGlobalChange = () => {\r\n    setGlobal(!global);\r\n  };\r\n\r\n  const handleContent = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const handleName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClassroomChange = (e) => {\r\n    setClassroom(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Post Announcement\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Post Announcement</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Add announcements globally or for specific Classroom.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={handleName}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"content\"\r\n            label=\"Content\"\r\n            type=\"text\"\r\n            onChange={handleContent}\r\n            fullWidth\r\n          />\r\n          <div className=\"classroom__create-select\">\r\n            <InputLabel id=\"classroomLabel\">classroom</InputLabel>\r\n            <Select\r\n              labelId=\"classroomLabel\"\r\n              id=\"classroom\"\r\n              value={classroom}\r\n              onChange={handleClassroomChange}\r\n              fullWidth\r\n            >\r\n              {classrooms &&\r\n                classrooms.map((item) => {\r\n                  return (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n            </Select>\r\n          </div>\r\n          <div className=\"classroom__create-select\">\r\n            <Switch\r\n              checked={global}\r\n              onChange={handleGlobalChange}\r\n              inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n            />\r\n            <Typography variant=\"subtitle2\">\r\n              Set this announcement to Global\r\n            </Typography>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handlePost} color=\"primary\">\r\n            Post\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}