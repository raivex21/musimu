{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const boardSlice = createSlice({\n  name: \"board\",\n  initialState: {\n    boardMessages: {},\n    loading: false,\n    error: null\n  },\n  reducers: {\n    getBoardMessagesStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getBoardMessagesSuccess: (state, action) => {\n      state.boardMessages = action.payload;\n      state.error = null;\n      state.loading = false;\n    },\n    getBoardMessagesFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  getBoardMessagesFail,\n  getBoardMessagesStart,\n  getBoardMessagesSuccess\n} = boardSlice.actions;\nexport const getBoardMessages = (token, id) => {\n  return dispatch => {\n    dispatch(getBoardMessagesStart());\n    console.log(\"getBoardMessages ====>\");\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(`${process.env.REACT_APP_AXIOS_URL}/api/boards/${id}`).then(res => {\n      console.log(\"getting board success\");\n      console.log(res.data);\n      dispatch(getBoardMessagesSuccess(res.data));\n    }).catch(err => {\n      dispatch(getBoardMessagesFail(err.message));\n    });\n  };\n};\nexport default boardSlice.reducer;","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/features/boardSlice.js"],"names":["createSlice","axios","boardSlice","name","initialState","boardMessages","loading","error","reducers","getBoardMessagesStart","state","getBoardMessagesSuccess","action","payload","getBoardMessagesFail","actions","getBoardMessages","token","id","dispatch","console","log","defaults","headers","Authorization","get","process","env","REACT_APP_AXIOS_URL","then","res","data","catch","err","message","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAE,OAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,aAAa,EAAE,EADH;AAEZC,IAAAA,OAAO,EAAE,KAFG;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFsB;AAOpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBAAqB,EAAGC,KAAD,IAAW;AAChCA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAJO;AAKRI,IAAAA,uBAAuB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC1CF,MAAAA,KAAK,CAACL,aAAN,GAAsBO,MAAM,CAACC,OAA7B;AACAH,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACAG,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD,KATO;AAURQ,IAAAA,oBAAoB,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACvCF,MAAAA,KAAK,CAACH,KAAN,GAAcK,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD;AAbO;AAP0B,CAAD,CAA9B;AAwBP,OAAO,MAAM;AACXQ,EAAAA,oBADW;AAEXL,EAAAA,qBAFW;AAGXE,EAAAA;AAHW,IAITT,UAAU,CAACa,OAJR;AAMP,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,EAAR,KAAe;AAC7C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACApB,IAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,GAAyB;AACvB,sBAAgB,kBADO;AAEvBC,MAAAA,aAAa,EAAG,SAAQP,KAAM;AAFP,KAAzB;AAIAhB,IAAAA,KAAK,CACFwB,GADH,CACQ,GAAEC,OAAO,CAACC,GAAR,CAAYC,mBAAoB,eAAcV,EAAG,EAD3D,EAEGW,IAFH,CAESC,GAAD,IAAS;AACbV,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,IAAhB;AACAZ,MAAAA,QAAQ,CAACR,uBAAuB,CAACmB,GAAG,CAACC,IAAL,CAAxB,CAAR;AACD,KANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;AACdd,MAAAA,QAAQ,CAACL,oBAAoB,CAACmB,GAAG,CAACC,OAAL,CAArB,CAAR;AACD,KATH;AAUD,GAjBD;AAkBD,CAnBM;AAqBP,eAAehC,UAAU,CAACiC,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const boardSlice = createSlice({\r\n  name: \"board\",\r\n  initialState: {\r\n    boardMessages: {},\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    getBoardMessagesStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getBoardMessagesSuccess: (state, action) => {\r\n      state.boardMessages = action.payload;\r\n      state.error = null;\r\n      state.loading = false;\r\n    },\r\n    getBoardMessagesFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getBoardMessagesFail,\r\n  getBoardMessagesStart,\r\n  getBoardMessagesSuccess,\r\n} = boardSlice.actions;\r\n\r\nexport const getBoardMessages = (token, id) => {\r\n  return (dispatch) => {\r\n    dispatch(getBoardMessagesStart());\r\n    console.log(\"getBoardMessages ====>\");\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n    axios\r\n      .get(`${process.env.REACT_APP_AXIOS_URL}/api/boards/${id}`)\r\n      .then((res) => {\r\n        console.log(\"getting board success\");\r\n        console.log(res.data);\r\n        dispatch(getBoardMessagesSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getBoardMessagesFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default boardSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}