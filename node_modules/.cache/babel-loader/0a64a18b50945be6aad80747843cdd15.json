{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raivex\\\\Documents\\\\React\\\\Project\\\\gui\\\\src\\\\components\\\\Quiz\\\\QuizDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, InputLabel, MenuItem, TextField, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getQuizDetail, addQuestion, getChoiceList } from \"../../features/quizSlice\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport Chip from \"@material-ui/core/Chip\";\nimport QuizViewer from \"./QuizViewer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    minWidth: \"100%\",\n    margin: \"10px 0\"\n  },\n  buttonStyle: {\n    minWidth: \"100%\",\n    margin: \"20px 0\",\n    height: \"3rem\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  chip: {\n    margin: 2\n  }\n}));\n\nfunction getStyles(name, choices, theme) {\n  return {\n    fontWeight: choices.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction QuizDetail(props) {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [choices, setChoices] = useState([]);\n  const quizDetail = useSelector(state => state.quiz.quizDetail);\n  const token = useSelector(state => state.auth.token);\n  const choiceList = useSelector(state => state.quiz.choiceList);\n  useEffect(() => {\n    dispatch(getQuizDetail(token, props.id));\n    dispatch(getChoiceList(token));\n  }, [dispatch, token, props.id]);\n\n  const handleChange = event => {\n    setChoices(event.target.value);\n  };\n\n  console.log(quizDetail);\n\n  const handleAddQuestion = () => {\n    const formData = new FormData();\n    dispatch(addQuestion(token, formData, props.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createQuiz\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Add Questions to \", quizDetail.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createQuiz__question\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Question Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: `outlined-basic`,\n          label: \"Quiz Question\",\n          variant: \"outlined\",\n          className: classes.textField,\n          size: \"small\",\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: `chip-label`,\n            children: \"Choices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: `chip-label`,\n            id: `chip`,\n            multiple: true,\n            value: choices,\n            onChange: handleChange,\n            input: /*#__PURE__*/_jsxDEV(Input, {\n              id: `chip`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 22\n            }, this),\n            renderValue: selected => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.chips,\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.name,\n                className: classes.chip\n              }, value.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this),\n            MenuProps: MenuProps,\n            children: choiceList.map(name => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: name,\n              style: getStyles(name, choices, theme),\n              children: name.name\n            }, name.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonStyle,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleAddQuestion,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createQuiz\",\n      children: /*#__PURE__*/_jsxDEV(QuizViewer, {\n        quizId: quizDetail.id,\n        questions: quizDetail.questions,\n        editQuiz: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizDetail, \"B7dF2r5YMl264ZvYZsOLO3rbX/I=\", false, function () {\n  return [useStyles, useTheme, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = QuizDetail;\nexport default QuizDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizDetail\");","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/components/Quiz/QuizDetail.js"],"names":["Button","FormControl","InputLabel","MenuItem","TextField","Typography","React","useEffect","useState","useDispatch","useSelector","getQuizDetail","addQuestion","getChoiceList","makeStyles","useTheme","Select","Input","Chip","QuizViewer","useStyles","theme","textField","minWidth","margin","buttonStyle","height","formControl","spacing","maxWidth","chips","display","flexWrap","chip","getStyles","name","choices","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","QuizDetail","props","classes","dispatch","setChoices","quizDetail","state","quiz","token","auth","choiceList","id","handleChange","event","target","value","console","log","handleAddQuestion","formData","FormData","selected","map","questions"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getQuizDetail,\r\n  addQuestion,\r\n  getChoiceList,\r\n} from \"../../features/quizSlice\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nimport QuizViewer from \"./QuizViewer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    minWidth: \"100%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonStyle: {\r\n    minWidth: \"100%\",\r\n    margin: \"20px 0\",\r\n    height: \"3rem\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n}));\r\n\r\nfunction getStyles(name, choices, theme) {\r\n  return {\r\n    fontWeight:\r\n      choices.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction QuizDetail(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const [choices, setChoices] = useState([]);\r\n  const quizDetail = useSelector((state) => state.quiz.quizDetail);\r\n  const token = useSelector((state) => state.auth.token);\r\n  const choiceList = useSelector((state) => state.quiz.choiceList);\r\n\r\n  useEffect(() => {\r\n    dispatch(getQuizDetail(token, props.id));\r\n    dispatch(getChoiceList(token));\r\n  }, [dispatch, token, props.id]);\r\n\r\n  const handleChange = (event) => {\r\n    setChoices(event.target.value);\r\n  };\r\n\r\n  console.log(quizDetail);\r\n  const handleAddQuestion = () => {\r\n    const formData = new FormData();\r\n    dispatch(addQuestion(token, formData, props.id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"createQuiz\">\r\n        <Typography variant=\"h6\">Add Questions to {quizDetail.name}</Typography>\r\n        <div className=\"createQuiz__question\">\r\n          <Typography>Question Form</Typography>\r\n          <TextField\r\n            id={`outlined-basic`}\r\n            label=\"Quiz Question\"\r\n            variant=\"outlined\"\r\n            className={classes.textField}\r\n            size=\"small\"\r\n            multiline\r\n          />\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id={`chip-label`}>Choices</InputLabel>\r\n            <Select\r\n              labelId={`chip-label`}\r\n              id={`chip`}\r\n              multiple\r\n              value={choices}\r\n              onChange={handleChange}\r\n              input={<Input id={`chip`} />}\r\n              renderValue={(selected) => (\r\n                <div className={classes.chips}>\r\n                  {selected.map((value) => (\r\n                    <Chip\r\n                      key={value.id}\r\n                      label={value.name}\r\n                      className={classes.chip}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              )}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {choiceList.map((name) => (\r\n                <MenuItem\r\n                  key={name.id}\r\n                  value={name}\r\n                  style={getStyles(name, choices, theme)}\r\n                >\r\n                  {name.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <Button\r\n            className={classes.buttonStyle}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleAddQuestion}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"createQuiz\">\r\n        <QuizViewer\r\n          quizId={quizDetail.id}\r\n          questions={quizDetail.questions}\r\n          editQuiz={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizDetail;\r\n"]},"metadata":{},"sourceType":"module"}