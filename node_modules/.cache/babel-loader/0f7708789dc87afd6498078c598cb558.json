{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const convoSlice = createSlice({\n  name: \"convo\",\n  initialState: {\n    convos: [],\n    loading: false,\n    error: null\n  },\n  reducers: {\n    getConvoListStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    getConvoListSuccess: (state, action) => {\n      state.convos = action.payload;\n      state.error = null;\n      state.loading = false;\n    },\n    getConvoListFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    createConvoStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    createConvoSuccess: state => {\n      state.loading = false;\n      state.error = null;\n    },\n    createConvoFail: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    }\n  }\n});\nexport const {\n  getConvoListSuccess,\n  getConvoListStart,\n  getConvoListFail,\n  createConvoStart,\n  createConvoSuccess,\n  createConvoFail\n} = convoSlice.actions;\nexport const getConvoList = (token, users) => {\n  return dispatch => {\n    dispatch(getConvoListStart());\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.get(process.env.REACT_APP_AXIOS_URL + \"/api/convos/\").then(res => {\n      // const convos = res.data.filter((c) => c.id === id);\n      const convos = res.data.filter(item => item.includes(users));\n      console.log(res.data);\n      console.log(convos);\n      dispatch(getConvoListSuccess(convos));\n    }).catch(err => {\n      console.log(err.status);\n      dispatch(getConvoListFail(err.message));\n    });\n  };\n};\nexport const createConvo = (token, formData) => {\n  return dispatch => {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${token}`\n    };\n    axios.post(process.env.REACT_APP_AXIOS_URL + \"/api/convos/\", formData).then(res => {\n      console.log(res.data);\n      dispatch(createConvoSuccess(res.data));\n      dispatch(getConvoList(token));\n    }).catch(err => {\n      console.log(err.message);\n      dispatch(createConvoFail(err.message));\n    });\n  };\n};\nexport default convoSlice.reducer;","map":{"version":3,"sources":["C:/Users/Raivex/Documents/React/Project/gui/src/features/convoSlice.js"],"names":["createSlice","axios","convoSlice","name","initialState","convos","loading","error","reducers","getConvoListStart","state","getConvoListSuccess","action","payload","getConvoListFail","createConvoStart","createConvoSuccess","createConvoFail","actions","getConvoList","token","users","dispatch","defaults","headers","Authorization","get","process","env","REACT_APP_AXIOS_URL","then","res","data","filter","item","includes","console","log","catch","err","status","message","createConvo","formData","post","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAE,OAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAE,EADI;AAEZC,IAAAA,OAAO,EAAE,KAFG;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAFsB;AAOpCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,iBAAiB,EAAGC,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAJO;AAKRI,IAAAA,mBAAmB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACtCF,MAAAA,KAAK,CAACL,MAAN,GAAeO,MAAM,CAACC,OAAtB;AACAH,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACAG,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD,KATO;AAURQ,IAAAA,gBAAgB,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACnCF,MAAAA,KAAK,CAACH,KAAN,GAAcK,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD,KAbO;AAcRS,IAAAA,gBAAgB,EAAGL,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KAjBO;AAkBRS,IAAAA,kBAAkB,EAAGN,KAAD,IAAW;AAC7BA,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD,KArBO;AAsBRU,IAAAA,eAAe,EAAE,CAACP,KAAD,EAAQE,MAAR,KAAmB;AAClCF,MAAAA,KAAK,CAACH,KAAN,GAAcK,MAAM,CAACC,OAArB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACD;AAzBO;AAP0B,CAAD,CAA9B;AAoCP,OAAO,MAAM;AACXK,EAAAA,mBADW;AAEXF,EAAAA,iBAFW;AAGXK,EAAAA,gBAHW;AAIXC,EAAAA,gBAJW;AAKXC,EAAAA,kBALW;AAMXC,EAAAA;AANW,IAOTf,UAAU,CAACgB,OAPR;AASP,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5C,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACb,iBAAiB,EAAlB,CAAR;AACAR,IAAAA,KAAK,CAACsB,QAAN,CAAeC,OAAf,GAAyB;AACvB,sBAAgB,kBADO;AAEvBC,MAAAA,aAAa,EAAG,SAAQL,KAAM;AAFP,KAAzB;AAKAnB,IAAAA,KAAK,CACFyB,GADH,CACOC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GAAkC,cADzC,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb;AACA,YAAM1B,MAAM,GAAG0B,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcd,KAAd,CAA1B,CAAf;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACC,IAAhB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYhC,MAAZ;AACAiB,MAAAA,QAAQ,CAACX,mBAAmB,CAACN,MAAD,CAApB,CAAR;AACD,KARH,EASGiC,KATH,CASUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,MAAhB;AACAlB,MAAAA,QAAQ,CAACR,gBAAgB,CAACyB,GAAG,CAACE,OAAL,CAAjB,CAAR;AACD,KAZH;AAaD,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMC,WAAW,GAAG,CAACtB,KAAD,EAAQuB,QAAR,KAAqB;AAC9C,SAAQrB,QAAD,IAAc;AACnBrB,IAAAA,KAAK,CAACsB,QAAN,CAAeC,OAAf,GAAyB;AACvB,sBAAgB,kBADO;AAEvBC,MAAAA,aAAa,EAAG,SAAQL,KAAM;AAFP,KAAzB;AAKAnB,IAAAA,KAAK,CACF2C,IADH,CACQjB,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GAAkC,cAD1C,EAC0Dc,QAD1D,EAEGb,IAFH,CAESC,GAAD,IAAS;AACbK,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACC,IAAhB;AACAV,MAAAA,QAAQ,CAACN,kBAAkB,CAACe,GAAG,CAACC,IAAL,CAAnB,CAAR;AACAV,MAAAA,QAAQ,CAACH,YAAY,CAACC,KAAD,CAAb,CAAR;AACD,KANH,EAOGkB,KAPH,CAOUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACE,OAAhB;AACAnB,MAAAA,QAAQ,CAACL,eAAe,CAACsB,GAAG,CAACE,OAAL,CAAhB,CAAR;AACD,KAVH;AAWD,GAjBD;AAkBD,CAnBM;AAqBP,eAAevC,UAAU,CAAC2C,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const convoSlice = createSlice({\r\n  name: \"convo\",\r\n  initialState: {\r\n    convos: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    getConvoListStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    getConvoListSuccess: (state, action) => {\r\n      state.convos = action.payload;\r\n      state.error = null;\r\n      state.loading = false;\r\n    },\r\n    getConvoListFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n    createConvoStart: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    createConvoSuccess: (state) => {\r\n      state.loading = false;\r\n      state.error = null;\r\n    },\r\n    createConvoFail: (state, action) => {\r\n      state.error = action.payload;\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getConvoListSuccess,\r\n  getConvoListStart,\r\n  getConvoListFail,\r\n  createConvoStart,\r\n  createConvoSuccess,\r\n  createConvoFail,\r\n} = convoSlice.actions;\r\n\r\nexport const getConvoList = (token, users) => {\r\n  return (dispatch) => {\r\n    dispatch(getConvoListStart());\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n\r\n    axios\r\n      .get(process.env.REACT_APP_AXIOS_URL + \"/api/convos/\")\r\n      .then((res) => {\r\n        // const convos = res.data.filter((c) => c.id === id);\r\n        const convos = res.data.filter((item) => item.includes(users));\r\n        console.log(res.data);\r\n        console.log(convos);\r\n        dispatch(getConvoListSuccess(convos));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.status);\r\n        dispatch(getConvoListFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport const createConvo = (token, formData) => {\r\n  return (dispatch) => {\r\n    axios.defaults.headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Token ${token}`,\r\n    };\r\n\r\n    axios\r\n      .post(process.env.REACT_APP_AXIOS_URL + \"/api/convos/\", formData)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch(createConvoSuccess(res.data));\r\n        dispatch(getConvoList(token));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        dispatch(createConvoFail(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default convoSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}